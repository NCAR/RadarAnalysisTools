      SUBROUTINE CROSS(KRD,IBUF,OBUF,RBUF,IPR,NST)
C
C        DRIVER FOR CROSS-CORRELATION COMPUTATION
C
      INCLUDE 'CEDRIC.INC'
      COMMON /VOLUME/ INPID(NID),ID(NID),NAMF(4,NFMAX),SCLFLD(NFMAX),
     X                IRCP(NFMAX),MAPVID(NFMAX,2),CSP(3,3),NCX(3),
     X                NCXORD(3),NFL,NPLANE,BAD
      CHARACTER*2 NAMF
      COMMON /EDINFO/ IEDW(2,3),PEDW(2,3)
      COMMON /AXUNTS/ IUNAXS,LABAXS(3,3),SCLAXS(3,3),AXNAM(3)
      CHARACTER*4 AXNAM
      DIMENSION IBUF(MAXPLN),OBUF(MAXPLN),RBUF(MAXPLN,2),
     X          NAX(3),IFLD(2)
      CHARACTER*2 NAMINF(4,2),NAMOUF(4)
      CHARACTER*(*) KRD(10)
      CHARACTER*1 CIBL,IFAX,IWOP
      LOGICAL NEWJ
      EQUIVALENCE (NAX(1),I1),(NAX(2),I2),(NAX(3),I3)
      DATA CIBL/' '/
      DATA ISCL/ 100.0 /
C
C        INITIALIZATION OF CROSS-CORRELATION PARAMETERS
C
      READ (KRD,100)NAMOUF,NAMINF,XLAG,YLAG,IFAX,IWOP
C  100 FORMAT(8X,12A2,2F8.0,16X,A1,7X,A1)
 100  FORMAT(/4A2/4A2/4A2/F8.0/F8.0///A1/A1)
      IF(NAMINF(1,1).EQ.CIBL) CALL COPCX(NAMINF(1,1),NAMINF(1,2),4)
      IF(NAMINF(1,2).EQ.CIBL) CALL COPCX(NAMINF(1,2),NAMINF(1,1),4)
      DO 10 I=1,2
         IFLD(I)=LOCFLDID(NAMINF(1,I),ID(176),5,NFL,4)
         IF(IFLD(I).EQ.0) THEN
            CALL CEDERX(501,1)
            RETURN
         END IF
   10 CONTINUE
      IF(NAMOUF(1).EQ.CIBL) THEN
         CALL CEDERX(520,1)
         RETURN
      END IF
      I=IADFLD(NAMOUF,ISCL,IPR)
      IF (I.LT.0) RETURN
      IF(I.EQ.0) THEN
         NEWJ=.FALSE.
      ELSE
         NEWJ=.TRUE.
         IFLD(1)=LOCFLDID(NAMINF(1,1),ID(176),5,NFL,4)
         IFLD(2)=LOCFLDID(NAMINF(1,2),ID(176),5,NFL,4)
      END IF
      JFLD=LOCFLDID(NAMOUF,ID(176),5,NFL,4)
      CALL WINSET(IEDW,PEDW,IWOP)
      CALL SETAXS(NAX,IFAX,IPR)
C
C        DETERMINE INDICES FOR AXIS CONFIGURATION AND WINDOWING
C
      N1=NCX(I1)
      N2=NCX(I2)
      N3=NCX(I3)
      NPLIN=N1*N2
      IS=IEDW(1,I1)
      IF=IEDW(2,I1)
      JS=IEDW(1,I2)
      JF=IEDW(2,I2)
C
C        DETERMINE LAGS IN I AND J
C
      LAGX=XLAG
      LAGY=YLAG
      LAGMX=(IF-IS+1)*0.25+0.9
      LAGMY=(JF-JS+1)*0.25+0.9
      IF(LAGX.LE.0.OR.LAGX.GT.LAGMX) LAGX=LAGMX
      IF(LAGY.LE.0.OR.LAGY.GT.LAGMY) LAGY=LAGMY
C
C        DETERMINE LOCATION OF ZERO LAG IN OUTPUT ARRAY
C
      IC=0
      JC=0
      IF(KRD(7).NE.CIBL) THEN
         READ (KRD(7),101)TMP
  101    FORMAT(F8.0)
         IC=TMP
      END IF
      IF(KRD(8).NE.CIBL) THEN
         READ (KRD(8),101)TMP
         JC=TMP
      END IF
      ICDF=LAGX+1
      JCDF=LAGY+1
      IF(IC.LT.ICDF.OR.IC.GT.N1-LAGX) IC=ICDF
      IF(JC.LT.JCDF.OR.JC.GT.N2-LAGY) JC=JCDF
      CPX=(CSP(1,I1)+(IC-1)*CSP(3,I1))*SCLAXS(I1,IUNAXS)
      CPY=(CSP(1,I2)+(JC-1)*CSP(3,I2))*SCLAXS(I2,IUNAXS)
C
C        INITIATE THE PROCEDURE- LOOP FOR EACH CROSS-SECTION
C
      CALL SHOEDW(IPR)
      CALL SHOEDF(IPR)
      WRITE(IPR,102) NAMINF,NAMOUF,LAGX,LAGY,IC,JC,AXNAM(I1),AXNAM(I2),
     X               CPX,CPY,LABAXS(I1,IUNAXS)
  102 FORMAT(/3X,'CROSS CORRELATION COMMAND-  PARAMETERS ...'/
     X 8X,'1-      REFERENCE INPUT FIELD: ',4A2/
     X 8X,'2-            LAG INPUT FIELD: ',4A2/
     X 8X,'3-   CROSS CORR. OUTPUT FIELD: ',4A2/
     X 8X,'4-         LAG ALONG I  (+/-): ',I8/
     X 8X,'5-         LAG ALONG J  (+/-): ',I8/
     X 8X,'6- (I,J) POSITION OF ZERO LAG:  (',I7,',',I7,')'/
     X 8X,'7- (',A1,',',A1,') POSITION OF ZERO LAG:  (',
     X                                 F7.2,',',F7.2,')  ',A8)
      DO 50 LEV=1,N3
      IF(LEV.GE.IEDW(1,I3).AND.LEV.LE.IEDW(2,I3)) GO TO 40
C
C        PLANE IS OUTSIDE OF WINDOW
C
         IF(NEWJ) THEN
            CALL CONFLD(OBUF,NPLIN,BAD)
            GO TO 45
         END IF
         GO TO 50
   40 CONTINUE
C
C        PROCEED WITH COMPUTATION OF CROSS CORRELATION FIELD
C
         CALL CONFLD(OBUF,NPLIN,BAD)
         CALL FETCHD(IEDFL,ID,LEV,IFLD(1),IBUF,RBUF(1,1),
     X               NIX,NIY,I3,BAD,ZLEV,NST)
         CALL FETCHD(IEDFL,ID,LEV,IFLD(2),IBUF,RBUF(1,2),
     X               NIX,NIY,I3,BAD,ZLEV,NST)
         CALL CORCAL(OBUF,RBUF(1,1),RBUF(1,2),N1,N2,IS,IF,JS,JF,
     X               IC,JC,LAGX,LAGY,BAD)
   45 CONTINUE
C
C        WRITE RESULTS TO PERMANENT STORAGE
C
         CALL PLACED(IEDFL,ID,LEV,JFLD,IBUF,OBUF,N1,N2,I3,BAD,NST)
   50 CONTINUE
      NST=0
      RETURN
      END
