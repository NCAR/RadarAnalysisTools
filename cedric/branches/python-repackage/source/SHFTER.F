      SUBROUTINE SHFTER(KRD,IBUF,OBUF,RBUF,TBUF,IPR,NST)
C     
C     PERFORMS SHIFTING OF DATA ON TWO CONSTANT Z-PLANE DATA
C     
C     IBUF- SCRATCH BUFFER F0R I/O
C     OBUF- AUXILLIARY BUFFER FOR DATA MANIPULATION
C     RBUF- I/O DATA BUFFER
C     MAXPLN- MAXIMUM DIMENSION OF RBUF,OBUF
C     IPR- PRINT FILE UNIT NUMBER
C     NST- STATUS FLAG:  0- O.K.
C     
      INCLUDE 'CEDRIC.INC'      
      PARAMETER (MXRAD=14,MXADV=MXRAD+1)
      DIMENSION IBUF(MAXPLN),OBUF(MAXPLN),RBUF(MAXPLN),IBTIME(3),
     X     TBUF(MAXPLN),IWALL(2,3),NORD(3),LIMZ(2),
     X     ZLWHR(2)
      CHARACTER*8 LIMUSR(2)
      CHARACTER*8 CTEMP,IDFTIM,CTPA
      CHARACTER*2 NAMINF(4),NAMOUF(4),NAMALL(4),NAMFLD(4),ITEQ,ICHK
      CHARACTER*(*) KRD(10)
      CHARACTER ITCHAR(3)*12
      COMMON /VOLUME/ INPID(NID),ID(NID),NAMF(4,NFMAX),SCLFLD(NFMAX),
     X     IRCP(NFMAX),MAPVID(NFMAX,2),CSP(3,3),NCX(3),
     X     NCXORD(3),NFL,NPLANE,BAD
      CHARACTER*2 NAMF
      COMMON /ADVECT/ ITVOLM(MXADV),NFLTIM(MXADV),TADV(MXADV),
     X     ISHAD(MXADV),JSHAD(MXADV),IADTYP(MXADV)
      CHARACTER*8 NFLTIM
      COMMON /AXUNTS/ IUNAXS,LABAXS(3,3),SCLAXS(3,3),AXNAM(3)
      CHARACTER*4 AXNAM
      LOGICAL NEWJ
      CHARACTER*1 CIBL
      EQUIVALENCE (NCX(1),NX),(NCX(2),NY),(NCX(3),NZ)
      EQUIVALENCE (LIMZ(1),K1), (LIMZ(2),K2)
      DATA NAMALL/ 'AL','L ','  ','  ' /
      DATA NORD/1,2,3/
      DATA ITCHAR/'          NO','     UNIFORM','DIFFERENTIAL'/
      DATA ATR,SCLADV,I4BAD/ 0.0174533,100.,0 /
      DATA IDFTIM/'T=0.0'/
      DATA ITEQ/'T='/
      DATA CIBL/' '/
C     
C     INITIALIZATION OF SHIFTING PARAMETERS
C     
      TCON=0.0
      ITVOLM(MXADV)=(ID(119)*100+ID(120))*100+ID(121)
      IF(ID(40)/ID(69).NE.90) CALL CEDERX(560,0)
      ANGXAX=FLOAT(ID(40))/FLOAT(ID(69))
      IDOALL=0
      READ (KRD,100)NAMOUF,NAMINF,TANAL,WDADV,WSADV,CTPA,LIMUSR
C     100 FORMAT(8X,8A2,8X,3F8.0,A1,7X,2A8)
 100  FORMAT(/4A2/4A2//F8.0/F8.0/F8.0/A1/A8/A8)
      ITANAL=TANAL
      IF(ITANAL.LE.0) ITANAL=ITVOLM(MXADV)
C     DECODE LOWER/UPPER LIMITS
C     LIMZ(1) AND LIMZ(2) EQVD TO K1/K2
      LIMZ(1)=1
      LIMZ(2)=NZ
      DO 21 I=1,2
         IF(LIMUSR(I).EQ.CIBL) GO TO 21
         READ (LIMUSR(I),107)ICHK,VAL
 107     FORMAT(A2,F6.0)
         IF(ICHK.EQ.'I=') THEN
C     INDEX SPACE
            LIMZ(I)=VAL
         ELSE IF(ICHK.EQ.'D=') THEN
C     DISTANCE SPACE
            LIMZ(I)=NINT((VAL-CSP(1,3))/CSP(3,3)+1.0)
         ELSE
            CALL CEDERX(567,1)
            RETURN
         END IF
 21   CONTINUE
      LIMZ(1)=MAX0(LIMZ(1),1)
      LIMZ(2)=MIN0(LIMZ(2),NZ)
      IF(LIMZ(1).GT.LIMZ(2)) THEN
C     SWITCH THEM IF BACKWARDS
         I=LIMZ(1)
         LIMZ(1)=LIMZ(2)
         LIMZ(2)=I
      END IF
      ZLWHR(1)=CSP(1,3)+(K1-1)*CSP(3,3)
      ZLWHR(2)=CSP(1,3)+(K2-1)*CSP(3,3)
C     
C     DETERMINE AND INITIALIZE ADVECTION METHOD
C     
      IADTYP(MXADV)=2
      IF(CTPA.EQ.'U') THEN
C     
C     UNIFORM ADVECTION
C     
         IADTYP(MXADV)=1
         BAST=ICONSC(ITVOLM(MXADV))-ICONSC(ITANAL)
         AR=(WDADV+90.0-ANGXAX)*ATR
         UAD=WSADV*SIN(AR)/FLOAT(ID(163))
         VAD=WSADV*COS(AR)/FLOAT(ID(168))
         IWALL(1,1)=1
         IWALL(2,1)=ID(162)
         IWALL(1,2)=1
         IWALL(2,2)=ID(167)
         IWALL(1,3)=K1
         IWALL(2,3)=K2
      END IF
C     
C     SPECIFY THE TIME FIELD
C     
      NFLTIM(MXADV)=IDFTIM
C     TRANSFER TO INT ARRAY
C     READ (KRD(4),50)IKRD(4)
 50   FORMAT(A8)
      IF(KRD(4).NE.CIBL) NFLTIM(MXADV)=KRD(4)
      WRITE (CTEMP,50)NFLTIM(MXADV)
      READ (CTEMP,102)NAMFLD
 102  FORMAT(4A2)
      IF(NAMFLD(1).EQ.ITEQ) THEN
         ITFL=0
         WRITE (CTEMP,50)NFLTIM(MXADV)
         READ (CTEMP,103)TCON
 103     FORMAT(2X,F6.0)
      ELSE
         ITFL=LOCFLDID(NAMFLD,ID(176),5,NFL,4)
         IF(ITFL.EQ.0) THEN
            CALL CEDERX(538,1)
            RETURN
         END IF
      END IF
      IF(LOCFLD(NAMINF,NAMALL,4,1,4).NE.0.OR.
     X     LOCFLD(NAMOUF,NAMALL,4,1,4).NE.0)   IDOALL=1
      IF(NAMOUF(1).EQ.CIBL.AND.NAMINF(1).EQ.CIBL) IDOALL=1
      IF(IDOALL.NE.0) THEN
         WRITE(IPR,122)
 122     FORMAT(/5X,'ALL FIELDS WILL BE ADVECTED.')
         CALL SHOEDF(IPR)
         I1=1
         I2=NFL
         NEWJ=.FALSE.
C     
C     SAVE TIME INFO IN ID HEADER
C     
         IBTIME(1)=ITANAL/10000
         IBTIME(2)=(ITANAL-IBTIME(1)*10000)/100
         IBTIME(3)=ITANAL-(IBTIME(1)*100+IBTIME(2))*100
         DO 5 I=1,3
            ID( 23+I)=IBTIME(I)
            ID( 29+I)=IBTIME(I)
            ID(118+I)=IBTIME(I)
            ID(124+I)=IBTIME(I)
    5    CONTINUE
      ELSE
         IFLD=LOCFLDID(NAMINF,ID(176),5,NFL,4)
         IF(IFLD.EQ.0) THEN
            CALL CEDERX(501,1)
            RETURN
         END IF
         IF(NAMOUF(1).EQ.CIBL) CALL COPCX(NAMOUF,NAMINF,4)
         WRITE(IPR,123) NAMINF,NAMOUF
 123     FORMAT(/5X,'INPUT FIELD: ',4A2,' WILL BE SHIFTED INTO',
     X        ' OUTPUT FIELD: ',4A2)
         IV=MAPVID(IFLD,2)
         ISCL=SCLFLD(IV)
         I=IADFLD(NAMOUF,ISCL,IPR)
         IF (I.LT.0) RETURN
         IF(I.EQ.0) THEN
            NEWJ=.FALSE.
         ELSE
            NEWJ=.TRUE.
            IFLD=LOCFLDID(NAMINF,ID(176),5,NFL,4)
         END IF
         I1=IFLD
         I2=IFLD
         JFLD=LOCFLDID(NAMOUF,ID(176),5,NFL,4)
      END IF
      ITPA=IADTYP(MXADV)
      WRITE(IPR,124) (ID(I),I=13,15),ITVOLM(MXADV),NFLTIM(MXADV),
     X     ITANAL,WDADV,WSADV,ITCHAR(ITPA+1),
     X     LIMZ,ZLWHR,LABAXS(3,1)
 124  FORMAT(/1X,3A2,5X,'BEG. TIME:',I7,7X,'TIME FIELD: ',A8
     X     /11X,'ANAL. TIME:',I7,5X,'STORM MOTION:',F6.1,' (DEG) AT',
     X     F5.1,' (M/S)'/4X,A12,' ADVECTION IS TO BE PERFORMED'
     X     /17X,'ON LEVELS  (',
     X     I2,' -',I3,')   (',F7.2,' THRU ',F7.2,' ',A4,')')
C     
C     INITIATE THE SHIFTING PROCESS
C     
C     
C     LOOP THROUGH CONSTANT-Z PLANES
C     
      DO 189 LEV=1,NZ
         IF(LEV.LT.K1.OR.LEV.GT.K2) THEN
C     DON'T ADVECT THIS LEVEL
C     NEWJ TRUE ONLY WHEN 1 FIELD
C     CAN'T HAPPEN WHEN MULTI-FIELD
            IF(NEWJ) THEN
               CALL CONFLD(RBUF,NPLANE,BAD)
               CALL PLACED(IEDFL,ID,LEV,JFLD,IBUF,RBUF,
     X              NX,NY,3,BAD,NST)
               IF(NST.NE.0) GO TO 190
            END IF
C     
            GO TO 189
C     
         END IF
C     
C     
C     ESTABLISH THE TIME INFORMATION FOR THIS PROCEDURE
C     
         IF(ITFL.EQ.0) THEN
            TADV(MXADV)=TCON
            IF(ITPA.EQ.2) CALL CONFLD(TBUF,NPLANE,TCON)
         ELSE
            CALL FETCHD(IEDFL,ID,LEV,ITFL,IBUF,TBUF,
     X           NIX,NIY,3,BAD,ZLEV,NST)
            IF(ITPA.EQ.1) CALL STRID(TBUF,NX,NY,IWALL,NORD,BAD,
     X           TADV(MXADV),FSTD,NP,M1,M2,M3,M4,FMN,FMX,
     X           0)
         END IF
         IF(ITPA.EQ.1) THEN
            TREL=BAST+TADV(MXADV)
            ISHIFT=NINT(TREL*UAD)
            JSHIFT=NINT(TREL*VAD)
            IF(ISHIFT.EQ.0.AND.JSHIFT.EQ.0) GO TO 170
         END IF
C     
C     PULL DATA AND SHIFT
C     
         DO 150 I=I1,I2
            IF(IDOALL.NE.0) JFLD=I
            CALL FETCHD(IEDFL,ID,LEV,I,IBUF,OBUF,NIX,NIY,3,BAD,ZLEV,
     X           NST)
            IF(ITPA.EQ.1) THEN
               CALL DOSHFT(OBUF,RBUF,NX,NY,BAD,ISHIFT,JSHIFT)
            ELSE IF(ITPA.EQ.2) THEN
               CALL DIFADV(RBUF,OBUF,TBUF,NX,NY,ITANAL,ITVOLM(MXADV),
     X              WDADV,WSADV,CSP(3,1),CSP(3,2),ANGXAX,BAD,
     X              0,IBUF,SCLADV,I4BAD,NST)
            END IF
            CALL PLACED(IEDFL,ID,LEV,JFLD,IBUF,RBUF,NX,NY,3,BAD,NST)
            IF (NST.NE.0) GO TO 190
 150     CONTINUE
         GO TO 189
 170     CONTINUE
C     
C     CHECK IF DATA SHOULD BE PUT ON TAPE
C     
         IF (.NOT.NEWJ) GO TO 189
         CALL FETCHD(IEDFL,ID,LEV,IFLD,IBUF,RBUF
     X        ,NIX,NIX,3,BAD,ZLEV,NST)
         CALL PLACED(IEDFL,ID,LEV,JFLD,IBUF,RBUF,NX,NY,3,BAD,NST)
         IF (NST.NE.0) GO TO 190
 189  CONTINUE
 190  CONTINUE
      RETURN
      END
