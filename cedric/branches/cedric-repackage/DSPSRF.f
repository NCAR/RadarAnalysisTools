      SUBROUTINE DSPSRF(KRD,IBUF,RBUF,TBUF,IPR)
C
C        DRIVER FOR DISPLAY OF 2-D PERSPECTIVE SURFACES
C
C           KRD- CARD IMAGE
C          IBUF- TEMPORARY STORAGE (AT LEAST MAXPLN)
C          RBUF- (X,Y) DATA ARRAY  (    '     '    )
C          TBUF- SCRATCH BUFFER    (AT LEAST MAXPLN*3)
C           IPR- LOGICAL UNIT NUMBER OF LINE PRINTER
C
      INCLUDE 'CEDRIC.INC'
      COMMON /VOLUME/ INPID(NID),ID(NID),NAMF(4,NFMAX),SCLFLD(NFMAX),
     X                IRCP(NFMAX),MAPVID(NFMAX,2),CSP(3,3),NCX(3),
     X                NCXORD(3),NFL,NPLANE,BAD
      CHARACTER*2 NAMF
      COMMON /DSPECS/ IWIND(2,3),PWIND(2,3),NCWORD(3),IFLDW(NFMAX),
     X                SCLFAC(NFMAX),NSYMCD(2,NFMAX),WIDCD(NFMAX),
     X                ZREFCD(NFMAX),THKLIN(NFMAX)
      COMMON /RANGEC/ XBEG,XEND,YBEG,YEND,XRANGE(2),YRANGE(2),DELRG(2)
      DIMENSION IBUF(MAXPLN),RBUF(MAXPLN),TBUF(MAXPLN,3),DEFEY(3),
     X          LEGTYP(3),EPOS(3),CLEV(2),EYEPLT(6),
     X          EYSCL(3),WIN1(4),VP1(4)
      CHARACTER*80 LABEL
      CHARACTER*(*) KRD(10)
      CHARACTER*1 CIBL,IWOP
      CHARACTER*2 ILEG,LEGTYP,NAMP(4)
      CHARACTER*3 ITEST
      CHARACTER*8 NAMIN
      CHARACTER LABX(3)*1,ICUSR(3)*1
      LOGICAL ICHECK
C
      EQUIVALENCE (NCX(1),NX), (NCX(2),NY), (NCX(3),NZ)
C
      DATA LABX/'X','Y','F'/
      DATA LEGTYP/'FU','FI','NO'/
      DATA DEFEY/2.0,-6.0,2.5/
      DATA EPS,CRTW,STEREO,ZERO/0.01,925.,0.0,0.0/
      DATA CIBL/' '/
C
C        INITIALIZE THE PLOTTING SPECIFICATIONS
C
      READ (KRD,100)IDEST,RSKP,ICUSR,ILEG,IWOP
 100  FORMAT(/A1/F8.0/3A1////A2//A1)
C
C        ESTABLISH THE PLOTTING WINDOW
C
      CALL GSCLIP(0)
      CALL WINSET(IWIND,PWIND,IWOP)
      DO 3 L=1,2
         PWIND(1,L)=AMAX1(PWIND(1,L),CSP(1,L))
         PWIND(2,L)=AMIN1(PWIND(2,L),CSP(2,L))
    3 CONTINUE
      CALL SETAXS(NCWORD,CIBL,IPR)
      LSKP=MAX1(RSKP,1.0)
      LTYP=IFINDC(ILEG,LEGTYP,3,0)
      LTYP=MAX0(LTYP,1)
C
C        AXES TO BE CONTOURED
C
      IFLAG=0
      DO 5 I=1,3
         ICAX=0
         DO 4 L=1,3
            IF(ICUSR(L).NE.LABX(I)) GO TO 4
            ICAX=1
    4    CONTINUE
         EYSCL(I)=DEFEY(I)
         IF(KRD(4+I).NE.CIBL) READ (KRD(4+I),101)EYSCL(I)
  101    FORMAT(F8.0)
         IFLAG=ICEDOR(IFLAG,ICEDSHFT(ICAX,3-I))
C         IFLAG=OR(IFLAG,LSHIFT(ICAX,3-I))
    5 CONTINUE
      IF(IFLAG.LE.0) IFLAG=6
C
C        ESTABLISH FIELDS TO PLOT
C
      CALL CONFLD(IFLDW,NFMAX,0)
   10 CONTINUE
C
C        NEXT FIELD SPECIFIER
C
      CALL KARDIN(KRD)
      CALL COMCHK(IPR,KRD)
      READ (KRD,102)ITEST,NAMIN 
C  102 FORMAT(A3,5X,A8)
 102  FORMAT(A3/A8)
      IF(ITEST.EQ.'END') GO TO 20
      CLEV(1)=0.0
      CLEV(2)=50.0
      ZERO=0.0
      IF(KRD(3).NE.CIBL) READ (KRD(3),101)CLEV(1)
      IF(KRD(4).NE.CIBL) READ (KRD(4),101)CLEV(2)
      IF(KRD(5).NE.CIBL) READ (KRD(5),101)ZERO
      IF(CLEV(2).LE.CLEV(1).OR.CLEV(2).LT.ZERO.OR.CLEV(1).GT.ZERO) THEN
         CALL CEDERX(563,0)
         GO TO 10
      END IF
      CALL FLDSET(NAMIN,NAMF,IFLDW,1,NST)
      IF(NST.NE.0) GO TO 10
      CALL FLDSETR(NAMIN,NAMF,SCLFAC,CLEV(1),NST)
      CALL FLDSETR(NAMIN,NAMF, WIDCD,CLEV(2),NST)
      CALL FLDSETR(NAMIN,NAMF,ZREFCD,   ZERO,NST)
      GO TO 10
   20 CONTINUE
C
C
C        PERFORM CONSISTENCY CHECKS ON PLOTTING SPECS
C           AND PROCEED WITH DISPLAY IF EVERYTHING IS O.K.
C
      ICHECK=.TRUE.
      DO 25 I=1,2
         EPOS(I)=PWIND(1,I)+(PWIND(2,I)-PWIND(1,I))*EYSCL(I)
         IF(EPOS(I).GE.PWIND(1,I).AND.EPOS(I).LE.PWIND(2,I)) GO TO 25
         ICHECK=.FALSE.
   25 CONTINUE
      IF(ICHECK) GO TO 91
C
C        EVERYTHING LOOKS GOOD- ESTABLISH PLOTTING WINDOW
C
      CALL RGINI(XL,XR,YB,YT,PWIND,CSP,NCX,NCXORD)
      IF(ABS(DELRG(1)).LT.EPS.OR.ABS(DELRG(2)).LT.EPS) GO TO 92
      I1=AMAX1(XBEG+.95,1.0)
      I2=AMIN1(XEND+.05,FLOAT(NX))
      J1=AMAX1(YBEG+.95,1.0)
      J2=AMIN1(YEND+.05,FLOAT(NY))
      NPX=I2-I1+1
      NPY=J2-J1+1
      XOFF=I1-1
      YOFF=J1-1
      IF(LTYP.EQ.1) THEN
C
C        FULL LEGEND
C
         XLEGD=(XEND-XBEG)*0.18
         YLEGD=(YEND-YBEG)*0.18
         XADJ=(XEND-XBEG)*0.04
         YADJ=(YEND-YBEG)*0.04
      ELSE
C
C        (X,Y) LEGEND NOT REQUIRED
C
         XLEGD=0.0
         YLEGD=0.0
         XADJ=0.0
         YADJ=0.0
      END IF
C
C        CONVERT EYE POSITION TO INDEX SPACE
C
      EYEPLT(1)=(EPOS(1)-PWIND(1,1))/CSP(3,1)+1.0-XOFF
      EYEPLT(2)=(EPOS(2)-PWIND(1,2))/CSP(3,2)+1.0-YOFF
      EYEPLT(4)=(XEND-XBEG)*0.5+XBEG-XOFF
      EYEPLT(5)=(YEND-YBEG)*0.5+YBEG-YOFF
C
C        LOAD IN THE (X,Y) POSITIONS
C
      NPXY=NPX*NPY
      K=0
      DO 30 I=1,NPX
         K=K+1
         TBUF(K,3)=I
   30 CONTINUE
      DO 31 I=1,NPY
         K=K+1
         TBUF(K,3)=I
   31 CONTINUE
      CALL PLNFLD(IFIXAX,L1,L2,NFDSP)
      IF(NFDSP.EQ.0) GO TO 93
C
C        LOOP FOR EACH LEVEL IN THE SPATIAL WINDOW
C
      DO 85 LEV=L1,L2,LSKP
         JFLD=0
         DO 75 LOOP=1,NFL
C
C           SEARCH FOR NEXT ACTIVE DISPLAY FIELD
C
            JFLD=JFLD+1
            IV=MAPVID(JFLD,2)
            IF(IFLDW(IV).NE.1) GO TO 75
         CALL NEXACT(IFIXAX,LEV,IV,RLEV,NAMP,1)
         CALL FETCHD(IN,ID,LEV,JFLD,IBUF,RBUF,
     X               N1,N2,IFIXAX,BAD,RLEV,NST)
         CLEV(1)=SCLFAC(IV)
         CLEV(2)=WIDCD(IV)
         ZERO=ZREFCD(IV)
         EPOS(3)=ZERO+(CLEV(2)-CLEV(1))*EYSCL(3)
         EYEPLT(3)=EPOS(3)-ZERO
         EYEPLT(6)=(CLEV(2)-CLEV(1))*0.5+CLEV(1)-ZERO
         R0=SQRT((EYEPLT(1)-EYEPLT(4))**2+
     X           (EYEPLT(2)-EYEPLT(5))**2+
     X           (EYEPLT(3)-EYEPLT(6))**2)
         XLFT=XBEG
         XRGT=XEND
         YBTM=YBEG
         YTOP=YEND
C
C           REORGANIZE THE DATA TO MAP INTO WINDOWED REGION
C
         ISKPI=1
         ISKPJ=1
         CALL KILDAT(RBUF,NX,NY,XLFT,XRGT,YBTM,YTOP,NPX,NPY,ISKPI,ISKPJ)
         FMIN=  1.E+8
         FMAX= -1.E+8
C
C        CALCULATE MIN,MAX OF FIELD AND REPOSITION RELATIVE TO (ZERO HGT)
C
         DO 83 I=1,NPXY
            IF(RBUF(I).EQ.BAD) RBUF(I)=ZERO
            RBUF(I)=AMAX1(RBUF(I),CLEV(1))
            RBUF(I)=AMIN1(RBUF(I),CLEV(2))
            FMIN=AMIN1(RBUF(I),FMIN)
            FMAX=AMAX1(RBUF(I),FMAX)
            RBUF(I)=RBUF(I)-ZERO
   83    CONTINUE
C
C        GENERATE DISPLAY LABELING AND PLOT IT
C
         CALL GSCLIP(0)
         WRITE (LABEL,211)(ID(I),I=116,121),(ID(I),I=125,127),
     X                        (ID(I),I=13,15),RLEV,NAMP,ZERO
  211    FORMAT(I2.2,'/',I2.2,'/',I2.2,3X,I2.2,2(':',I2.2),'-',I2.2,
     X        2(':',I2.2),4X,3A2,3X,'Z=',F5.2,' KMSL',4X,4A2,' (+/-)',
     X        F8.2)
         CALL MY_PLCHMQ(10,1010,LABEL,12.,0.,-1.)
         WRITE (LABEL,212)PWIND(1,1),PWIND(1,2),CLEV(1),FMIN
  212    FORMAT('WINDOW',4X,'XMIN=',F7.2,3X,'YMIN=',F7.2,3X,'FMIN=',
     X                   F7.2,16X,'MIN=',F7.2)
         CALL MY_PLCHMQ(10,985,LABEL(1:79),12.,0.,-1.)
         WRITE (LABEL,214)PWIND(2,1),PWIND(2,2),CLEV(2),FMAX
  214    FORMAT(10X,'XMAX=',F7.2,3X,'YMAX=',F7.2,3X,'FMAX=',F7.2,
     X          16X,'MAX=',F7.2)
         CALL MY_PLCHMQ(10,960,LABEL(1:79),12.,0.,-1.)
C
C           CALL THE SURFACE GENERATOR
C
C+++++ DEBUGS
C      PRINT *, 'XLFT,XRGT,YBTM,YTOP,XLEGD,XADJ,YLEGD,YADJ',
C     X          XLFT,XRGT,YBTM,YTOP,XLEGD,XADJ,YLEGD,YADJ
C      PRINT *, 'EPOS,EYEPLT', EPOS,EYEPLT
C+++++END DEBUGS
         CALL SETR(XLFT-XLEGD-XADJ,XRGT,YBTM-YLEGD-YADJ,YTOP,
     X             CLEV(1)-ZERO,CLEV(2)-ZERO,R0)
C
         CALL SRFACE(TBUF(1,3),TBUF(NPX+1,3),RBUF,TBUF,NPX,NPX,NPY,
     X               EYEPLT,STEREO,IFLAG)
C
C     SAVE CURRENT SETTINGS AND CALL SET FOR PROPER AXIS POSITIONING
C
         CALL GQCNTN (IER,NTORIG)
         CALL GQNT (NTORIG,IER,WIN1,VP1)
         CALL GETUSV ('LS',IOLLS)
         CALL SET (0.,1.,0.,1.,1.,1024.,1.,1024.,1)

         IF(LTYP.LE.2) THEN
C
C           +/- F LABELS
C
            ZDSP=((CLEV(2)-CLEV(1))/CRTW)*25.0
            CALL TRN32S(XLFT-XLEGD,YBTM-YLEGD,0.0,ORGX,ORGY,DUMMY,1)
            IF(ZERO.GT.CLEV(1)) THEN
               CALL TRN32S(XLFT-XLEGD,YBTM-YLEGD,CLEV(1)-ZERO,
     X                     XZ,YZ,DUMMY,1)
               CALL DRAWS(IFIX(ORGX),IFIX(ORGY),IFIX(XZ),IFIX(YZ),1,0)
               CALL PWRZS(XLFT-XLEGD,YBTM-YLEGD,CLEV(1)-ZERO-ZDSP,
     X                    '-F',2,3,1,3,LTYP-2)
            END IF
            IF(ZERO.LT.CLEV(2)) THEN
               CALL TRN32S(XLFT-XLEGD,YBTM-YLEGD,CLEV(2)-ZERO,
     X                     XZ,YZ,DUMMY,1)
               CALL DRAWS(IFIX(ORGX),IFIX(ORGY),IFIX(XZ),IFIX(YZ),1,0)
               CALL PWRZS(XLFT-XLEGD,YBTM-YLEGD,CLEV(2)-ZERO+ZDSP,
     X                    '+F',2,3,1,3,LTYP-2)
            END IF
         END IF
C
         IF(LTYP.EQ.1) THEN
C
C           X AND Y LABELS
C
            CALL TRN32S(XLFT-XLEGD*0.20,YBTM-YLEGD,0.0,
     X                  XZ,YZ,DUMMY,1)
            CALL DRAWS(IFIX(ORGX),IFIX(ORGY),IFIX(XZ),IFIX(YZ),1,0)
            CALL PWRZS(XLFT-XLEGD*0.10,YBTM-YLEGD,0.0,'X',1,3,1,3,1)
            CALL TRN32S(XLFT-XLEGD,YBTM-YLEGD*0.20,0.0,
     X                  XZ,YZ,DUMMY,1)
            CALL DRAWS(IFIX(ORGX),IFIX(ORGY),IFIX(XZ),IFIX(YZ),1,0)
            CALL PWRZS(XLFT-XLEGD,YBTM-YLEGD*0.10,0.0,'Y',1,3,2,3,1)
         END IF
C
         CALL MYFRAME
C
C     RESTORE PREVIOUS GRAPHICS SETTINGS
C
      CALL SET(VP1(1),VP1(2),VP1(3),VP1(4),WIN1(1),WIN1(2),
     X         WIN1(3),WIN1(4),IOLLS)
      CALL GSELNT (NTORIG)

   75 CONTINUE
C
   85 CONTINUE
C
C     NORMAL RETURN
C
      RETURN
C
   91 CALL CEDERX(564,0)
      RETURN
   92 CALL CEDERX(565,1)
      RETURN
   93 CALL CEDERX(539,0)
      RETURN
      END
