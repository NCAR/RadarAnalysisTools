      SUBROUTINE IDSYND(IDSAV,MAP,IVOLNM,IOFTAB,NMF,ISCL,IPR,NST)
C
C        GENERATES THE SYNTHESIS OUTPUT FILE HEADER, ELIMINATES DUPLICATE
C                  OUTPUT FIELD NAMES, AND VERIFIES CONSISTENCY BETWEEN
C                  THE INPUT FILE STRUCTURES AND THE OUTPUT FILE.
C                  IF NST=0: O.K.,  =1: INCONSISTENCIES DETECTED.
C
      INCLUDE 'CEDRIC.INC'
      PARAMETER (MXRAD=14,MAXTRF=8,MXFS=MAXTRF+2,ANGEPS=1.5)
      COMMON /VOLUME/ INPID(NID),ID(NID),NAMF(4,NFMAX),SCLFLD(NFMAX),
     X                IRCP(NFMAX),MAPVID(NFMAX,2),CSP(3,3),NCX(3),
     X                NCXORD(3),NFL,NPLANE,BAD
      CHARACTER*2 NAMF
      COMMON /SYNBLK/ LSYN(MXRAD),NAMRAD(MXRAD),INVOLD(MXRAD),
     X                NFLDIN(MXFS,MXRAD,2),NRQF,IRADTB(MXRAD),NRADS
      CHARACTER*8 NAMRAD,INVOLD,NFLDIN
      COMMON /CREAXS/ CSPN(3,3),NCXN(3),NPLNEW
      CHARACTER*1 CIBL
      CHARACTER*2 NAME(4)
      DIMENSION IDSAV(NID,MXRAD),
     X          IOFTAB(4,NMF),MAP(MAXAXIS,3,MXRAD),ISCL(NMF)
      DATA CIBL/'  '/
      DATA IBL/2H  /
      CHARACTER*8 CTEMP,IWHERE,IVOLNM,CTEMP1
C
C        COPY HEADER OVER FROM RADAR 1
C
      CALL COPIX(ID,IDSAV(1,1),NID)
C
C        FILL IN DESCRIPTIVE INFORMATION RELEVANT TO THIS CONTEXT
C
      CTEMP='SY'
      READ(CTEMP,13)ID(1)
 13   FORMAT(A2)
      CTEMP='NT'
      READ(CTEMP,13)ID(2)
      CTEMP='HY'
      READ(CTEMP,13)ID(3)
      CTEMP='S '
      READ(CTEMP,13)ID(4)
      CTEMP='CE'
      READ(CTEMP,13)ID(5)
      CTEMP='DR'
      READ(CTEMP,13)ID(6)
      CTEMP='.B'
      READ(CTEMP,13)ID(7)
      CTEMP='CO'
      READ(CTEMP,13)ID(13)
      CTEMP='MB'
      READ(CTEMP,13)ID(14)
      CTEMP='IN'
      READ(CTEMP,13)ID(15)

      CTEMP=' '
      CALL COPIX(ID(18),ID(1),3)
      CALL COPIX(ID(21),ID(116),12)
C      CALL GETENV('QSUB_REQNAME',CTEMP,1)
      READ (CTEMP,100)(ID(I),I=45,47)
      CALL GETENV('LOGNAME',CTEMP)
      READ (CTEMP,100)(ID(I),I=48,50)
  100 FORMAT(3A2)
      CALL DATEE(IWHERE)
      WRITE (CTEMP,7)IWHERE
      READ (CTEMP,101)(ID(I),I=51,54)
      CALL CLOCK(IWHERE)
      WRITE (CTEMP,7)IWHERE
      READ (CTEMP,101)(ID(I),I=55,58)
  101 FORMAT(4A2)
      IF(IVOLNM.NE.CIBL) THEN
         WRITE (CTEMP,7)IVOLNM
         READ (CTEMP,101)(ID(I),I=101,104)
      ELSE
         WRITE (CTEMP,101)(ID(I),I=101,104)
         READ (CTEMP,7)IVOLNM
      END IF
      ID(60)=0
      CTEMP='WK'
      READ(CTEMP,13)ID(62)
C      ID(62)='C1'
      ID(111)=1
C
C        CARTESIAN GRID STRUCTURE
C
      ID(302)=NRADS+1
      ID(303)=NRADS
      ID(304)=0
      ID(305)=0
      SF=ID(68)
      IF(NPLNEW.EQ.0) THEN
         WRITE(IPR,102) NAMRAD(1)
  102    FORMAT(/5X,'NO CARTESIAN COORDINATE SYSTEM SPECIFIED.'
     X          /5X,'GRID FROM ',A6,' WILL BE USED.'/)
      ELSE
      ID(106)=NCXN(3)
         ID(301)=NPLNEW
         J=160
         CM=1.0
         DO 5 I=1,3
C              MARK BRADFORD PATCH TO ACCOUNT FOR ID(68).NE.100
           IF(I.EQ.3) CM=1000./FLOAT(ID(68))
           ID(J)=NINT(CSPN(1,I)*SF*CM)
           ID(J+1)=NINT(CSPN(2,I)*SF*CM)
           ID(J+3)=NINT(CSPN(3,I)*1000.)
           ID(J+2)=NCXN(I)
           J=J+5
    5    CONTINUE
      END IF
C
C        U,V,W,CT FIELD INFO
C
      J=175
      DO 10 I=1,NFMAX
         DO 6 L=1,4
            ID(J+L)=IBL
    6    CONTINUE
         ID(J+5)=0
         IF(I.GT.NMF) GO TO 10
            CALL COPIX(ID(J+1),IOFTAB(1,I),4)
            ID(J+5)=ISCL(I)
   10 J=J+5
      KFLD=NMF
C
C        RADAR LOCATIONS
C
      CALL CONFLD(ID(71),24,IBL)
      DO 20 I=1,NRADS
         K=IRADTB(I)
         IF(I.LE.6) CALL COPIX(ID(67+I*4),IDSAV(1,I),4)
         CALL COPIX(ID(306+I*6),IDSAV(312,I),6)
         IF(K.LE.0) GO TO 20
         KSEAR=KFLD
         DO 15 L=1,K
            JP=L+NRQF
            IF(NFLDIN(JP,I,2).EQ.CIBL) NFLDIN(JP,I,2)=NFLDIN(JP,I,1)
            WRITE (CTEMP,7)NFLDIN(JP,I,2)
            READ (CTEMP,101)NAME
            IF(LOCFLDID(NAME,ID(176),5,KSEAR,4).NE.0) THEN
                CALL CEDERX(532,1)
                NST=1
                RETURN
             END IF
C
C           ADD A FIELD TO THE OUTPUT LIST
C
            KFLD=KFLD+1
            J=171+KFLD*5
            READ(NAME,127)ID(J),ID(J+1),ID(J+2),ID(J+3)
 127        FORMAT(A2/A2/A2/A2)
C            CALL COPRX(ID(J),NAME,4)
            KSEAR=KFLD
            WRITE (CTEMP,7)NFLDIN(JP,I,1)
 7          FORMAT(A8)
            READ (CTEMP,101)NAME
            M=LOCFLDID(NAME,IDSAV(176,I),5,IDSAV(175,I),4)
            ID(J+4)=IDSAV(175+M*5,I)
   15    CONTINUE
   20 CONTINUE
      J=312+ID(302)*6
      DO 25 I=J,395
         ID(I)=0
   25 CONTINUE
C
C        DATA STRUCTURE INFORMATION
C
      ID(175)=KFLD
      ID(96)=(ID(301)-1)/ID(65)+1
      ID(97)=ID(96)*KFLD
      ID(98)=ID(97)*ID(106)
      ID(99)=ID(98)+ID(106)+1
      ID(100)=ID(98)+1
      ID(400)=ID(96)*ID(106)
      DO 30 I=1,NFMAX
         ID(400+I)=0
         IF(I.GT.KFLD) GO TO 30
            ID(400+I)=1+ID(400)*(I-1)
   30 CONTINUE
      CALL NEWHED(0)
C
C        CHECK THAT NO. OF OUTPUT FIELDS CAN FIT IN PACKED MEMORY
C
      IF(KFLD.GT.ID(453)) THEN
         CALL CEDERX(505,1)
         NST=1
         RETURN
      END IF
C
C        CHECK FOR COMPATIBILITY
C
      WRITE(IPR,106)
  106 FORMAT(/' TEST FOR COMPATIBILITY BETWEEN THE EDIT FILE STRUCTURE',
     X        ' AND INPUT RADAR FILES ...')
      NST=0
      WRITE(CTEMP1,50)ID(312),ID(313),ID(314)
      DO 35 I=1,NRADS
      WRITE(IPR,107) I,NAMRAD(I)
  107 FORMAT(1X,I2,': ',A6,' ...')
      CALL CRTMAP(IDSAV(1,I),NID,CSP,NCX,MAP(1,1,I),MAXAXIS,IST)
      IF(IST.LT.2) IST=0
C
C     IF AIRBORNE, CHECK X-AXIS ANGLE (RELATED TO TRACK); FIX IF
C     NECESSARY AND POSSIBLE
C
      WRITE(CTEMP,50)IDSAV(312,I),IDSAV(313,I),IDSAV(314,I)
 50   FORMAT(3A2)
      IF (CTEMP1.EQ.'AIRBRN' .AND. CTEMP.EQ.'AIRBRN' .AND. NRADS.LE.2)
     X     THEN
         IF (IDSAV(40,I).NE.ID(40)) THEN
            DIFF=ABS((IDSAV(40,I)-ID(40))/64.)
            IF (DIFF.LE.ANGEPS) THEN
               IAVG=(IDSAV(40,I)+ID(40))/2.
               IDSAV(40,I)=IAVG
               ID(40)     =IAVG
               WRITE(*,70)IAVG/64.
 70            FORMAT(/,5X,'+++NOTE: X-AXIS ORIENTATION IS DIFFERENT',
     X              ' IN TWO VOLUMES. AVERAGE(=',F8.2,') HAS BEEN',
     X              ' USED+++')
            END IF
         END IF
      END IF
      CALL IDCMPR(IDSAV(1,I),ID,NID,JST)
      NST=NST+IST+JST
      IF(IST.EQ.0.AND.JST.EQ.0) THEN
         WRITE(IPR,108) NAMRAD(I)
  108    FORMAT(5X,A6,' IS COMPATIBLE WITH THE OUTPUT EDIT FILE.')
      ELSE
         WRITE(IPR,109) NAMRAD(I)
  109    FORMAT(1X,'+++  ',A6,' IS INCOMPATIBLE WITH THE OUTPUT ',
     X             'EDIT FILE  +++')
      END IF
   35 CONTINUE
      RETURN
      END
