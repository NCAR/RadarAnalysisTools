# Makefile.in generated by automake 1.12.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# -*- makefile -*-
#

VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
@MAKE_WITH_NCARG_FALSE@bin_PROGRAMS = cedric$(EXEEXT)
@MAKE_WITH_NCARG_TRUE@bin_PROGRAMS = cedric$(EXEEXT) gcedric$(EXEEXT)
subdir = source
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in $(top_srcdir)/config/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = cedric-KARDIN.$(OBJEXT) cedric-EXPAND.$(OBJEXT) \
	cedric-VALUE.$(OBJEXT) cedric-DEFINE.$(OBJEXT) \
	cedric-RDKARD.$(OBJEXT)
am__objects_2 = cedric-CEDRIC.$(OBJEXT) cedric-SYMINT.$(OBJEXT) \
	cedric-VERSOUT.$(OBJEXT) cedric-CEDUTIL.$(OBJEXT) \
	cedric-LOCATE.$(OBJEXT) cedric-CEDERX.$(OBJEXT) \
	cedric-FLUSH_STDOUT.$(OBJEXT) cedric-SETBAD.$(OBJEXT) \
	cedric-CHANGE.$(OBJEXT) cedric-COMMNT.$(OBJEXT) \
	cedric-INTGRT.$(OBJEXT) cedric-CREATE.$(OBJEXT) \
	cedric-FILTER.$(OBJEXT) cedric-FIXIDS.$(OBJEXT) \
	cedric-READVL.$(OBJEXT) cedric-PATCHR.$(OBJEXT) \
	cedric-STATS.$(OBJEXT) cedric-STATZI.$(OBJEXT) \
	cedric-STINT.$(OBJEXT) cedric-FUNCTN.$(OBJEXT) \
	cedric-FUNCTS.$(OBJEXT) cedric-DSFSTK.$(OBJEXT) \
	cedric-WINDFD.$(OBJEXT) cedric-TRANSF.$(OBJEXT) \
	cedric-DIGITP.$(OBJEXT) cedric-REMAP.$(OBJEXT) \
	cedric-SAMPLR.$(OBJEXT) cedric-SHFTER.$(OBJEXT) \
	cedric-SYNDRV.$(OBJEXT) cedric-DESYNR.$(OBJEXT) \
	cedric-UNFOLD.$(OBJEXT) cedric-WINDIJ.$(OBJEXT) \
	cedric-WRITVL.$(OBJEXT) cedric-CROSS.$(OBJEXT) \
	cedric-REGRES.$(OBJEXT) cedric-LAPDRV.$(OBJEXT) \
	cedric-RLXDRV.$(OBJEXT) cedric-MS2DRV.$(OBJEXT) \
	cedric-COORD.$(OBJEXT) cedric-FLAT.$(OBJEXT) \
	cedric-READAIR.$(OBJEXT) cedric-READSTA.$(OBJEXT) \
	cedric-LAT_LON.$(OBJEXT) cedric-VADDRV.$(OBJEXT) \
	cedric-SAVVAD.$(OBJEXT) cedric-GETNLD.$(OBJEXT) \
	cedric-GETLMA.$(OBJEXT) cedric-COPCX.$(OBJEXT) \
	cedric-COPRX.$(OBJEXT) cedric-COPIX.$(OBJEXT) \
	cedric-COPIRX.$(OBJEXT) cedric-COPCIX.$(OBJEXT) \
	cedric-CONCHAR.$(OBJEXT) cedric-SELDEV.$(OBJEXT) \
	cedric-IFINDC.$(OBJEXT) cedric-IADFLD.$(OBJEXT) \
	cedric-LOCFLDID.$(OBJEXT) cedric-LOCINT.$(OBJEXT) \
	cedric-LOCFLD.$(OBJEXT) cedric-FETCHD.$(OBJEXT) \
	cedric-FETCHZ.$(OBJEXT) cedric-PLACED.$(OBJEXT) \
	cedric-LL2XY.$(OBJEXT) cedric-LL2XYDRV.$(OBJEXT) \
	cedric-LLINTRP.$(OBJEXT) cedric-XY2LLDRV.$(OBJEXT) \
	cedric-XY2LL.$(OBJEXT) cedric-CONFLD.$(OBJEXT) \
	cedric-PCONVG.$(OBJEXT) cedric-SHOEDF.$(OBJEXT) \
	cedric-SHOEDW.$(OBJEXT) cedric-EXTEND.$(OBJEXT) \
	cedric-SETAXS.$(OBJEXT) cedric-GET3D.$(OBJEXT) \
	cedric-PUT3D.$(OBJEXT) cedric-FILL3D.$(OBJEXT) \
	cedric-DOFILT.$(OBJEXT) cedric-T5FLTR.$(OBJEXT) \
	cedric-NEWHED.$(OBJEXT) cedric-UPDHED.$(OBJEXT) \
	cedric-CRTMAP.$(OBJEXT) cedric-DSINIT.$(OBJEXT) \
	cedric-RESHUF.$(OBJEXT) cedric-SKIPP.$(OBJEXT) \
	cedric-IDCMPR.$(OBJEXT) cedric-COMCHK.$(OBJEXT) \
	cedric-WINSET.$(OBJEXT) cedric-FLDSET.$(OBJEXT) \
	cedric-SETVOL.$(OBJEXT) cedric-IMHSUM.$(OBJEXT) \
	cedric-TAPMES.$(OBJEXT) cedric-CEDCDF.$(OBJEXT) \
	cedric-CRTHIN.$(OBJEXT) cedric-FLDNAMOUT.$(OBJEXT) \
	cedric-PUTD.$(OBJEXT) cedric-GETD.$(OBJEXT) \
	cedric-TRPCO.$(OBJEXT) cedric-LSQFIL.$(OBJEXT) \
	cedric-SHIFTIT.$(OBJEXT) cedric-SHILBL.$(OBJEXT) \
	cedric-SHIRBL.$(OBJEXT) cedric-IFIND.$(OBJEXT) \
	cedric-ALTER.$(OBJEXT) cedric-ASDPMD.$(OBJEXT) \
	cedric-REGCAL.$(OBJEXT) cedric-REGINT.$(OBJEXT) \
	cedric-REGRZI.$(OBJEXT) cedric-BLHED.$(OBJEXT) \
	cedric-DWITER.$(OBJEXT) cedric-VADCORD.$(OBJEXT) \
	cedric-VAD.$(OBJEXT) cedric-VADRINGS.$(OBJEXT) \
	cedric-PLANST.$(OBJEXT) cedric-PLNFLD.$(OBJEXT) \
	cedric-LINFIT2.$(OBJEXT) cedric-LSFILW.$(OBJEXT) \
	cedric-LSTSQR.$(OBJEXT) cedric-SETDCD.$(OBJEXT) \
	cedric-GLODEC.$(OBJEXT) cedric-BNDFIL.$(OBJEXT) \
	cedric-BNDVAL.$(OBJEXT) cedric-UNPAUT.$(OBJEXT) \
	cedric-STRID.$(OBJEXT) cedric-RITER.$(OBJEXT) \
	cedric-NEXACT.$(OBJEXT) cedric-ISUFLD.$(OBJEXT) \
	cedric-CRINTRP.$(OBJEXT) cedric-EQSLV.$(OBJEXT) \
	cedric-IFINOT.$(OBJEXT) cedric-DUMMY.$(OBJEXT) \
	cedric-CEDLOG.$(OBJEXT) cedric-GRIDAIR.$(OBJEXT) \
	cedric-CEDMDV.$(OBJEXT) cedric-RELXUV.$(OBJEXT) \
	cedric-PPI_IFIND.$(OBJEXT) cedric-PPI_MAJMIN.$(OBJEXT) \
	cedric-USTOPO.$(OBJEXT) cedric-RANF.$(OBJEXT) \
	cedric-SOUND.$(OBJEXT) cedric-DIVZERO.$(OBJEXT) \
	cedric-ROVECT.$(OBJEXT) cedric-RVTOPO.$(OBJEXT) \
	cedric-COINTRP.$(OBJEXT) cedric-ICONSC.$(OBJEXT) \
	cedric-AIRACCUM.$(OBJEXT) cedric-AIROUT.$(OBJEXT) \
	cedric-LAPSOL.$(OBJEXT) cedric-CORCAL.$(OBJEXT) \
	cedric-BLDDES.$(OBJEXT) cedric-REDHED.$(OBJEXT) \
	cedric-UNFSLP.$(OBJEXT) cedric-DIFADV.$(OBJEXT) \
	cedric-DOSHFT.$(OBJEXT) cedric-DMPCHAR.$(OBJEXT) \
	cedric-UNPFOR.$(OBJEXT) cedric-SYNNER.$(OBJEXT) \
	cedric-DSPSYN.$(OBJEXT) cedric-IDSYND.$(OBJEXT) \
	cedric-THERMO.$(OBJEXT) cedric-CALUVW.$(OBJEXT) \
	cedric-IABPCK.$(OBJEXT) cedric-IGET16.$(OBJEXT) \
	$(am__objects_1)
am__objects_3 = CGETMEM.$(OBJEXT) CUTILS.$(OBJEXT) CDATE.$(OBJEXT) \
	COUT.$(OBJEXT) CIN.$(OBJEXT) topo.$(OBJEXT) \
	cdf_utils.$(OBJEXT)
am__objects_4 = MDV_field_routines.$(OBJEXT) \
	MDV_header_routines.$(OBJEXT) mdv_utils.$(OBJEXT) \
	mdv_write.$(OBJEXT)
am__objects_5 = cedric-gbytes.$(OBJEXT) cedric-sbytes.$(OBJEXT) \
	cedric-i1mach.$(OBJEXT) logic32.$(OBJEXT)
am_cedric_OBJECTS = $(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5)
cedric_OBJECTS = $(am_cedric_OBJECTS)
am__DEPENDENCIES_1 =
cedric_DEPENDENCIES = $(am__DEPENDENCIES_1)
cedric_LINK = $(F77LD) $(cedric_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__gcedric_SOURCES_DIST = CEDRIC.F SYMINT.F VERSOUT.F CEDUTIL.F \
	LOCATE.F CEDERX.F FLUSH_STDOUT.F SETBAD.F CHANGE.F COMMNT.F \
	INTGRT.F CREATE.F FILTER.F FIXIDS.F READVL.F PATCHR.F STATS.F \
	STATZI.F STINT.F FUNCTN.F FUNCTS.F DSFSTK.F WINDFD.F TRANSF.F \
	DIGITP.F REMAP.F SAMPLR.F SHFTER.F SYNDRV.F DESYNR.F UNFOLD.F \
	WINDIJ.F WRITVL.F CROSS.F REGRES.F LAPDRV.F RLXDRV.F MS2DRV.F \
	COORD.F FLAT.F READAIR.F READSTA.F LAT_LON.F VADDRV.F SAVVAD.F \
	GETNLD.F GETLMA.F COPCX.F COPRX.F COPIX.F COPIRX.F COPCIX.F \
	CONCHAR.F SELDEV.F IFINDC.F IADFLD.F LOCFLDID.F LOCINT.F \
	LOCFLD.F FETCHD.F FETCHZ.F PLACED.F LL2XY.F LL2XYDRV.F \
	LLINTRP.F XY2LLDRV.F XY2LL.F CONFLD.F PCONVG.F SHOEDF.F \
	SHOEDW.F EXTEND.F SETAXS.F GET3D.F PUT3D.F FILL3D.F DOFILT.F \
	T5FLTR.F NEWHED.F UPDHED.F CRTMAP.F DSINIT.F RESHUF.F SKIPP.F \
	IDCMPR.F COMCHK.F WINSET.F FLDSET.F SETVOL.F IMHSUM.F TAPMES.F \
	CEDCDF.F CRTHIN.F FLDNAMOUT.F PUTD.F GETD.F TRPCO.F LSQFIL.F \
	SHIFTIT.F SHILBL.F SHIRBL.F IFIND.F ALTER.F ASDPMD.F REGCAL.F \
	REGINT.F REGRZI.F BLHED.F DWITER.F VADCORD.F VAD.F VADRINGS.F \
	PLANST.F PLNFLD.F LINFIT2.F LSFILW.F LSTSQR.F SETDCD.F \
	GLODEC.F BNDFIL.F BNDVAL.F UNPAUT.F STRID.F RITER.F NEXACT.F \
	ISUFLD.F CRINTRP.F EQSLV.F IFINOT.F DUMMY.F CEDLOG.F GRIDAIR.F \
	CEDMDV.F RELXUV.F PPI_IFIND.F PPI_MAJMIN.F USTOPO.F RANF.F \
	SOUND.F DIVZERO.F ROVECT.F RVTOPO.F COINTRP.F ICONSC.F \
	AIRACCUM.F AIROUT.F LAPSOL.F CORCAL.F BLDDES.F REDHED.F \
	UNFSLP.F DIFADV.F DOSHFT.F DMPCHAR.F UNPFOR.F SYNNER.F \
	DSPSYN.F IDSYND.F THERMO.F CALUVW.F IABPCK.F IGET16.F KARDIN.F \
	EXPAND.F VALUE.F DEFINE.F RDKARD.F CGETMEM.c CUTILS.c CDATE.c \
	COUT.c CIN.c topo.c cdf_utils.c BCKGRND.F BLKDAT.F CODER.F \
	COLRAM.F CONTHALF.F CORR.F DATASND.F DFCLRS.F DMPFLOAT.F \
	DMPINTGR.F DSP3D.F DSPCOD.F DSPSRF.F FAREA.F FEETCL.F FORADV.F \
	FUNK.F genmap.F GETLEN.F GETSND.F GUIPROC.F HDUMP.F HISTGR.F \
	HMARKS.F HSTGRM.F HSTINT.F HSTLBL.F HSTLST.F ICTMOD.F ISGFXY.F \
	ISOSRF.F ISST3D.F IVBGEN.F KILDAT.F KNTOCR.F LABBOX.F LBFILL.F \
	MAJMIN.F MAXZ.F MEDHST.F MINMAX.F MYFRAME.F MY_PLCHMQ.F \
	OVSETP.F PLOTAD.F PLOTCH.F PLTACT.F PLTDRV.F PLTHIST.F \
	PLTLMA.F PLTNLD.F PLTSTA.F PLTVAD.F RCPU_XY.F REMINT.F \
	REMPOS.F RGINI.F SCLCAL.F SCTDSP.F SETCNT.F SETCOL.F SETLIN.F \
	SETPAT.F SHADAM.F SIMPLDIG.F SMTH1D.F SRFACE.F SRFGK.F \
	STPDRV.F STPLOT.F STPOBD.F STRMLN.F TSTCOL.F VECDRW.F VECDSP.F \
	MDV_field_routines.c MDV_header_routines.c mdv_utils.c \
	mdv_write.c gbytes/gbytes.f gbytes/sbytes.f gbytes/i1mach.f \
	gbytes/logic32.c
am__objects_6 = gcedric-KARDIN.$(OBJEXT) gcedric-EXPAND.$(OBJEXT) \
	gcedric-VALUE.$(OBJEXT) gcedric-DEFINE.$(OBJEXT) \
	gcedric-RDKARD.$(OBJEXT)
am__objects_7 = gcedric-CEDRIC.$(OBJEXT) gcedric-SYMINT.$(OBJEXT) \
	gcedric-VERSOUT.$(OBJEXT) gcedric-CEDUTIL.$(OBJEXT) \
	gcedric-LOCATE.$(OBJEXT) gcedric-CEDERX.$(OBJEXT) \
	gcedric-FLUSH_STDOUT.$(OBJEXT) gcedric-SETBAD.$(OBJEXT) \
	gcedric-CHANGE.$(OBJEXT) gcedric-COMMNT.$(OBJEXT) \
	gcedric-INTGRT.$(OBJEXT) gcedric-CREATE.$(OBJEXT) \
	gcedric-FILTER.$(OBJEXT) gcedric-FIXIDS.$(OBJEXT) \
	gcedric-READVL.$(OBJEXT) gcedric-PATCHR.$(OBJEXT) \
	gcedric-STATS.$(OBJEXT) gcedric-STATZI.$(OBJEXT) \
	gcedric-STINT.$(OBJEXT) gcedric-FUNCTN.$(OBJEXT) \
	gcedric-FUNCTS.$(OBJEXT) gcedric-DSFSTK.$(OBJEXT) \
	gcedric-WINDFD.$(OBJEXT) gcedric-TRANSF.$(OBJEXT) \
	gcedric-DIGITP.$(OBJEXT) gcedric-REMAP.$(OBJEXT) \
	gcedric-SAMPLR.$(OBJEXT) gcedric-SHFTER.$(OBJEXT) \
	gcedric-SYNDRV.$(OBJEXT) gcedric-DESYNR.$(OBJEXT) \
	gcedric-UNFOLD.$(OBJEXT) gcedric-WINDIJ.$(OBJEXT) \
	gcedric-WRITVL.$(OBJEXT) gcedric-CROSS.$(OBJEXT) \
	gcedric-REGRES.$(OBJEXT) gcedric-LAPDRV.$(OBJEXT) \
	gcedric-RLXDRV.$(OBJEXT) gcedric-MS2DRV.$(OBJEXT) \
	gcedric-COORD.$(OBJEXT) gcedric-FLAT.$(OBJEXT) \
	gcedric-READAIR.$(OBJEXT) gcedric-READSTA.$(OBJEXT) \
	gcedric-LAT_LON.$(OBJEXT) gcedric-VADDRV.$(OBJEXT) \
	gcedric-SAVVAD.$(OBJEXT) gcedric-GETNLD.$(OBJEXT) \
	gcedric-GETLMA.$(OBJEXT) gcedric-COPCX.$(OBJEXT) \
	gcedric-COPRX.$(OBJEXT) gcedric-COPIX.$(OBJEXT) \
	gcedric-COPIRX.$(OBJEXT) gcedric-COPCIX.$(OBJEXT) \
	gcedric-CONCHAR.$(OBJEXT) gcedric-SELDEV.$(OBJEXT) \
	gcedric-IFINDC.$(OBJEXT) gcedric-IADFLD.$(OBJEXT) \
	gcedric-LOCFLDID.$(OBJEXT) gcedric-LOCINT.$(OBJEXT) \
	gcedric-LOCFLD.$(OBJEXT) gcedric-FETCHD.$(OBJEXT) \
	gcedric-FETCHZ.$(OBJEXT) gcedric-PLACED.$(OBJEXT) \
	gcedric-LL2XY.$(OBJEXT) gcedric-LL2XYDRV.$(OBJEXT) \
	gcedric-LLINTRP.$(OBJEXT) gcedric-XY2LLDRV.$(OBJEXT) \
	gcedric-XY2LL.$(OBJEXT) gcedric-CONFLD.$(OBJEXT) \
	gcedric-PCONVG.$(OBJEXT) gcedric-SHOEDF.$(OBJEXT) \
	gcedric-SHOEDW.$(OBJEXT) gcedric-EXTEND.$(OBJEXT) \
	gcedric-SETAXS.$(OBJEXT) gcedric-GET3D.$(OBJEXT) \
	gcedric-PUT3D.$(OBJEXT) gcedric-FILL3D.$(OBJEXT) \
	gcedric-DOFILT.$(OBJEXT) gcedric-T5FLTR.$(OBJEXT) \
	gcedric-NEWHED.$(OBJEXT) gcedric-UPDHED.$(OBJEXT) \
	gcedric-CRTMAP.$(OBJEXT) gcedric-DSINIT.$(OBJEXT) \
	gcedric-RESHUF.$(OBJEXT) gcedric-SKIPP.$(OBJEXT) \
	gcedric-IDCMPR.$(OBJEXT) gcedric-COMCHK.$(OBJEXT) \
	gcedric-WINSET.$(OBJEXT) gcedric-FLDSET.$(OBJEXT) \
	gcedric-SETVOL.$(OBJEXT) gcedric-IMHSUM.$(OBJEXT) \
	gcedric-TAPMES.$(OBJEXT) gcedric-CEDCDF.$(OBJEXT) \
	gcedric-CRTHIN.$(OBJEXT) gcedric-FLDNAMOUT.$(OBJEXT) \
	gcedric-PUTD.$(OBJEXT) gcedric-GETD.$(OBJEXT) \
	gcedric-TRPCO.$(OBJEXT) gcedric-LSQFIL.$(OBJEXT) \
	gcedric-SHIFTIT.$(OBJEXT) gcedric-SHILBL.$(OBJEXT) \
	gcedric-SHIRBL.$(OBJEXT) gcedric-IFIND.$(OBJEXT) \
	gcedric-ALTER.$(OBJEXT) gcedric-ASDPMD.$(OBJEXT) \
	gcedric-REGCAL.$(OBJEXT) gcedric-REGINT.$(OBJEXT) \
	gcedric-REGRZI.$(OBJEXT) gcedric-BLHED.$(OBJEXT) \
	gcedric-DWITER.$(OBJEXT) gcedric-VADCORD.$(OBJEXT) \
	gcedric-VAD.$(OBJEXT) gcedric-VADRINGS.$(OBJEXT) \
	gcedric-PLANST.$(OBJEXT) gcedric-PLNFLD.$(OBJEXT) \
	gcedric-LINFIT2.$(OBJEXT) gcedric-LSFILW.$(OBJEXT) \
	gcedric-LSTSQR.$(OBJEXT) gcedric-SETDCD.$(OBJEXT) \
	gcedric-GLODEC.$(OBJEXT) gcedric-BNDFIL.$(OBJEXT) \
	gcedric-BNDVAL.$(OBJEXT) gcedric-UNPAUT.$(OBJEXT) \
	gcedric-STRID.$(OBJEXT) gcedric-RITER.$(OBJEXT) \
	gcedric-NEXACT.$(OBJEXT) gcedric-ISUFLD.$(OBJEXT) \
	gcedric-CRINTRP.$(OBJEXT) gcedric-EQSLV.$(OBJEXT) \
	gcedric-IFINOT.$(OBJEXT) gcedric-DUMMY.$(OBJEXT) \
	gcedric-CEDLOG.$(OBJEXT) gcedric-GRIDAIR.$(OBJEXT) \
	gcedric-CEDMDV.$(OBJEXT) gcedric-RELXUV.$(OBJEXT) \
	gcedric-PPI_IFIND.$(OBJEXT) gcedric-PPI_MAJMIN.$(OBJEXT) \
	gcedric-USTOPO.$(OBJEXT) gcedric-RANF.$(OBJEXT) \
	gcedric-SOUND.$(OBJEXT) gcedric-DIVZERO.$(OBJEXT) \
	gcedric-ROVECT.$(OBJEXT) gcedric-RVTOPO.$(OBJEXT) \
	gcedric-COINTRP.$(OBJEXT) gcedric-ICONSC.$(OBJEXT) \
	gcedric-AIRACCUM.$(OBJEXT) gcedric-AIROUT.$(OBJEXT) \
	gcedric-LAPSOL.$(OBJEXT) gcedric-CORCAL.$(OBJEXT) \
	gcedric-BLDDES.$(OBJEXT) gcedric-REDHED.$(OBJEXT) \
	gcedric-UNFSLP.$(OBJEXT) gcedric-DIFADV.$(OBJEXT) \
	gcedric-DOSHFT.$(OBJEXT) gcedric-DMPCHAR.$(OBJEXT) \
	gcedric-UNPFOR.$(OBJEXT) gcedric-SYNNER.$(OBJEXT) \
	gcedric-DSPSYN.$(OBJEXT) gcedric-IDSYND.$(OBJEXT) \
	gcedric-THERMO.$(OBJEXT) gcedric-CALUVW.$(OBJEXT) \
	gcedric-IABPCK.$(OBJEXT) gcedric-IGET16.$(OBJEXT) \
	$(am__objects_6)
am__objects_8 = gcedric-BCKGRND.$(OBJEXT) gcedric-BLKDAT.$(OBJEXT) \
	gcedric-CODER.$(OBJEXT) gcedric-COLRAM.$(OBJEXT) \
	gcedric-CONTHALF.$(OBJEXT) gcedric-CORR.$(OBJEXT) \
	gcedric-DATASND.$(OBJEXT) gcedric-DFCLRS.$(OBJEXT) \
	gcedric-DMPFLOAT.$(OBJEXT) gcedric-DMPINTGR.$(OBJEXT) \
	gcedric-DSP3D.$(OBJEXT) gcedric-DSPCOD.$(OBJEXT) \
	gcedric-DSPSRF.$(OBJEXT) gcedric-FAREA.$(OBJEXT) \
	gcedric-FEETCL.$(OBJEXT) gcedric-FORADV.$(OBJEXT) \
	gcedric-FUNK.$(OBJEXT) gcedric-genmap.$(OBJEXT) \
	gcedric-GETLEN.$(OBJEXT) gcedric-GETSND.$(OBJEXT) \
	gcedric-GUIPROC.$(OBJEXT) gcedric-HDUMP.$(OBJEXT) \
	gcedric-HISTGR.$(OBJEXT) gcedric-HMARKS.$(OBJEXT) \
	gcedric-HSTGRM.$(OBJEXT) gcedric-HSTINT.$(OBJEXT) \
	gcedric-HSTLBL.$(OBJEXT) gcedric-HSTLST.$(OBJEXT) \
	gcedric-ICTMOD.$(OBJEXT) gcedric-ISGFXY.$(OBJEXT) \
	gcedric-ISOSRF.$(OBJEXT) gcedric-ISST3D.$(OBJEXT) \
	gcedric-IVBGEN.$(OBJEXT) gcedric-KILDAT.$(OBJEXT) \
	gcedric-KNTOCR.$(OBJEXT) gcedric-LABBOX.$(OBJEXT) \
	gcedric-LBFILL.$(OBJEXT) gcedric-MAJMIN.$(OBJEXT) \
	gcedric-MAXZ.$(OBJEXT) gcedric-MEDHST.$(OBJEXT) \
	gcedric-MINMAX.$(OBJEXT) gcedric-MYFRAME.$(OBJEXT) \
	gcedric-MY_PLCHMQ.$(OBJEXT) gcedric-OVSETP.$(OBJEXT) \
	gcedric-PLOTAD.$(OBJEXT) gcedric-PLOTCH.$(OBJEXT) \
	gcedric-PLTACT.$(OBJEXT) gcedric-PLTDRV.$(OBJEXT) \
	gcedric-PLTHIST.$(OBJEXT) gcedric-PLTLMA.$(OBJEXT) \
	gcedric-PLTNLD.$(OBJEXT) gcedric-PLTSTA.$(OBJEXT) \
	gcedric-PLTVAD.$(OBJEXT) gcedric-RCPU_XY.$(OBJEXT) \
	gcedric-REMINT.$(OBJEXT) gcedric-REMPOS.$(OBJEXT) \
	gcedric-RGINI.$(OBJEXT) gcedric-SCLCAL.$(OBJEXT) \
	gcedric-SCTDSP.$(OBJEXT) gcedric-SETCNT.$(OBJEXT) \
	gcedric-SETCOL.$(OBJEXT) gcedric-SETLIN.$(OBJEXT) \
	gcedric-SETPAT.$(OBJEXT) gcedric-SHADAM.$(OBJEXT) \
	gcedric-SIMPLDIG.$(OBJEXT) gcedric-SMTH1D.$(OBJEXT) \
	gcedric-SRFACE.$(OBJEXT) gcedric-SRFGK.$(OBJEXT) \
	gcedric-STPDRV.$(OBJEXT) gcedric-STPLOT.$(OBJEXT) \
	gcedric-STPOBD.$(OBJEXT) gcedric-STRMLN.$(OBJEXT) \
	gcedric-TSTCOL.$(OBJEXT) gcedric-VECDRW.$(OBJEXT) \
	gcedric-VECDSP.$(OBJEXT)
am__objects_9 = gcedric-gbytes.$(OBJEXT) gcedric-sbytes.$(OBJEXT) \
	gcedric-i1mach.$(OBJEXT) logic32.$(OBJEXT)
@MAKE_WITH_NCARG_TRUE@am_gcedric_OBJECTS = $(am__objects_7) \
@MAKE_WITH_NCARG_TRUE@	$(am__objects_3) $(am__objects_8) \
@MAKE_WITH_NCARG_TRUE@	$(am__objects_4) $(am__objects_9)
gcedric_OBJECTS = $(am_gcedric_OBJECTS)
@MAKE_WITH_NCARG_TRUE@gcedric_DEPENDENCIES = $(am__DEPENDENCIES_1) \
@MAKE_WITH_NCARG_TRUE@	$(am__DEPENDENCIES_1)
gcedric_LINK = $(F77LD) $(gcedric_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
PPF77COMPILE = $(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FFLAGS) $(FFLAGS)
F77LD = $(F77)
F77LINK = $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
SOURCES = $(cedric_SOURCES) $(gcedric_SOURCES)
DIST_SOURCES = $(cedric_SOURCES) $(am__gcedric_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NCARGDIR = @NCARGDIR@
NCARGINCS = @NCARGINCS@
NCARGLIBS = @NCARGLIBS@
NETCDFINCDIR = @NETCDFINCDIR@
NETCDFINCS = @NETCDFINCS@
NETCDFLIBDIR = @NETCDFLIBDIR@
NETCDFLIBS = @NETCDFLIBS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
FSRCS = \
 CEDRIC.F SYMINT.F VERSOUT.F CEDUTIL.F \
 LOCATE.F CEDERX.F FLUSH_STDOUT.F SETBAD.F CHANGE.F \
 COMMNT.F INTGRT.F CREATE.F FILTER.F FIXIDS.F \
 READVL.F PATCHR.F \
 STATS.F STATZI.F STINT.F \
 FUNCTN.F FUNCTS.F DSFSTK.F \
 WINDFD.F TRANSF.F \
 DIGITP.F REMAP.F SAMPLR.F SHFTER.F \
 SYNDRV.F DESYNR.F UNFOLD.F \
 WINDIJ.F WRITVL.F CROSS.F REGRES.F LAPDRV.F \
 RLXDRV.F MS2DRV.F COORD.F FLAT.F \
 READAIR.F READSTA.F LAT_LON.F \
 VADDRV.F SAVVAD.F GETNLD.F GETLMA.F \
 COPCX.F COPRX.F COPIX.F COPIRX.F COPCIX.F \
 CONCHAR.F \
 SELDEV.F IFINDC.F IADFLD.F LOCFLDID.F \
 LOCINT.F LOCFLD.F \
 FETCHD.F FETCHZ.F PLACED.F \
 LL2XY.F LL2XYDRV.F LLINTRP.F XY2LLDRV.F XY2LL.F \
 CONFLD.F PCONVG.F SHOEDF.F SHOEDW.F EXTEND.F \
 SETAXS.F \
 GET3D.F PUT3D.F FILL3D.F \
 DOFILT.F T5FLTR.F \
 NEWHED.F UPDHED.F CRTMAP.F \
 DSINIT.F RESHUF.F SKIPP.F IDCMPR.F \
 COMCHK.F WINSET.F FLDSET.F SETVOL.F IMHSUM.F \
 TAPMES.F CEDCDF.F CRTHIN.F FLDNAMOUT.F \
 PUTD.F GETD.F  TRPCO.F  LSQFIL.F \
 SHIFTIT.F SHILBL.F SHIRBL.F IFIND.F \
 ALTER.F ASDPMD.F REGCAL.F \
 REGINT.F REGRZI.F BLHED.F DWITER.F \
 VADCORD.F VAD.F VADRINGS.F \
 PLANST.F PLNFLD.F LINFIT2.F \
 LSFILW.F LSTSQR.F SETDCD.F GLODEC.F \
 BNDFIL.F BNDVAL.F UNPAUT.F STRID.F \
 RITER.F NEXACT.F ISUFLD.F \
 CRINTRP.F EQSLV.F IFINOT.F DUMMY.F \
 CEDLOG.F GRIDAIR.F CEDMDV.F \
 RELXUV.F PPI_IFIND.F PPI_MAJMIN.F \
 USTOPO.F RANF.F SOUND.F DIVZERO.F \
 ROVECT.F RVTOPO.F COINTRP.F ICONSC.F \
 AIRACCUM.F AIROUT.F LAPSOL.F \
 CORCAL.F BLDDES.F REDHED.F UNFSLP.F \
 DIFADV.F DOSHFT.F DMPCHAR.F \
 UNPFOR.F SYNNER.F DSPSYN.F IDSYND.F \
 THERMO.F CALUVW.F IABPCK.F \
 IGET16.F \
 $(KARDINSRCS)

KARDINSRCS = KARDIN.F EXPAND.F VALUE.F DEFINE.F RDKARD.F 
GBYTESSRCS = \
 gbytes/gbytes.f \
 gbytes/sbytes.f \
 gbytes/i1mach.f \
 gbytes/logic32.c

MDVSRCS = MDV_field_routines.c \
 MDV_header_routines.c mdv_utils.c mdv_write.c

CSRCS = \
 CGETMEM.c CUTILS.c CDATE.c COUT.c CIN.c \
 topo.c cdf_utils.c

NGSRCS = \
 BCKGRND.F BLKDAT.F CODER.F \
 COLRAM.F CONTHALF.F CORR.F \
 DATASND.F DFCLRS.F DMPFLOAT.F \
 DMPINTGR.F DSP3D.F \
 DSPCOD.F DSPSRF.F FAREA.F FEETCL.F FORADV.F \
 FUNK.F genmap.F GETLEN.F GETSND.F \
 GUIPROC.F HDUMP.F HISTGR.F \
 HMARKS.F HSTGRM.F HSTINT.F HSTLBL.F \
 HSTLST.F ICTMOD.F ISGFXY.F \
 ISOSRF.F ISST3D.F IVBGEN.F \
 KILDAT.F KNTOCR.F LABBOX.F LBFILL.F \
 MAJMIN.F MAXZ.F MEDHST.F \
 MINMAX.F MYFRAME.F MY_PLCHMQ.F OVSETP.F \
 PLOTAD.F PLOTCH.F PLTACT.F \
 PLTDRV.F PLTHIST.F PLTLMA.F PLTNLD.F \
 PLTSTA.F PLTVAD.F RCPU_XY.F REMINT.F \
 REMPOS.F RGINI.F SCLCAL.F \
 SCTDSP.F SETCNT.F SETCOL.F \
 SETLIN.F SETPAT.F SHADAM.F SIMPLDIG.F \
 SMTH1D.F SRFACE.F SRFGK.F \
 STPDRV.F STPLOT.F STPOBD.F STRMLN.F \
 TSTCOL.F VECDRW.F VECDSP.F


#
# FORTRAN include does not look in /usr/include by default, so it must be
# specified if that is where netcdf.inc is located.
#
FINCLUDES = -I/usr/include
AM_FFLAGS = -g -O0 -std=legacy $(DEFINES) -fno-range-check \
          -fsecond-underscore $(NETCDFINCS) $(FINCLUDES)

AM_CFLAGS = -g -O0 $(DEFINES) $(NETCDFINCS)
AM_LDFLAGS = 
cedric_SOURCES = $(FSRCS) $(CSRCS) $(MDVSRCS) $(GBYTESSRCS)
cedric_FFLAGS = -DCEDRIC_USE_NCARG=0 $(AM_FFLAGS)
cedric_LDADD = $(NETCDFLIBS)
@MAKE_WITH_NCARG_TRUE@gcedric_SOURCES = $(FSRCS) $(CSRCS) $(NGSRCS) $(MDVSRCS) $(GBYTESSRCS)
@MAKE_WITH_NCARG_TRUE@gcedric_FFLAGS = -DCEDRIC_USE_NCARG=1 $(AM_FFLAGS) $(NCARGINCS)
@MAKE_WITH_NCARG_TRUE@gcedric_LDADD = $(NCARGLIBS) $(XLIBS) $(NETCDFLIBS)
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .F .c .f .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign source/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign source/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status source/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
cedric$(EXEEXT): $(cedric_OBJECTS) $(cedric_DEPENDENCIES) $(EXTRA_cedric_DEPENDENCIES) 
	@rm -f cedric$(EXEEXT)
	$(cedric_LINK) $(cedric_OBJECTS) $(cedric_LDADD) $(LIBS)
gcedric$(EXEEXT): $(gcedric_OBJECTS) $(gcedric_DEPENDENCIES) $(EXTRA_gcedric_DEPENDENCIES) 
	@rm -f gcedric$(EXEEXT)
	$(gcedric_LINK) $(gcedric_OBJECTS) $(gcedric_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CDATE.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CGETMEM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CIN.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/COUT.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CUTILS.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MDV_field_routines.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MDV_header_routines.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cdf_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/logic32.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mdv_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mdv_write.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/topo.Po@am__quote@

.F.o:
	$(PPF77COMPILE) -c -o $@ $<

.F.obj:
	$(PPF77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

cedric-CEDRIC.o: CEDRIC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CEDRIC.o `test -f 'CEDRIC.F' || echo '$(srcdir)/'`CEDRIC.F

cedric-CEDRIC.obj: CEDRIC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CEDRIC.obj `if test -f 'CEDRIC.F'; then $(CYGPATH_W) 'CEDRIC.F'; else $(CYGPATH_W) '$(srcdir)/CEDRIC.F'; fi`

cedric-SYMINT.o: SYMINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SYMINT.o `test -f 'SYMINT.F' || echo '$(srcdir)/'`SYMINT.F

cedric-SYMINT.obj: SYMINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SYMINT.obj `if test -f 'SYMINT.F'; then $(CYGPATH_W) 'SYMINT.F'; else $(CYGPATH_W) '$(srcdir)/SYMINT.F'; fi`

cedric-VERSOUT.o: VERSOUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-VERSOUT.o `test -f 'VERSOUT.F' || echo '$(srcdir)/'`VERSOUT.F

cedric-VERSOUT.obj: VERSOUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-VERSOUT.obj `if test -f 'VERSOUT.F'; then $(CYGPATH_W) 'VERSOUT.F'; else $(CYGPATH_W) '$(srcdir)/VERSOUT.F'; fi`

cedric-CEDUTIL.o: CEDUTIL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CEDUTIL.o `test -f 'CEDUTIL.F' || echo '$(srcdir)/'`CEDUTIL.F

cedric-CEDUTIL.obj: CEDUTIL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CEDUTIL.obj `if test -f 'CEDUTIL.F'; then $(CYGPATH_W) 'CEDUTIL.F'; else $(CYGPATH_W) '$(srcdir)/CEDUTIL.F'; fi`

cedric-LOCATE.o: LOCATE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LOCATE.o `test -f 'LOCATE.F' || echo '$(srcdir)/'`LOCATE.F

cedric-LOCATE.obj: LOCATE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LOCATE.obj `if test -f 'LOCATE.F'; then $(CYGPATH_W) 'LOCATE.F'; else $(CYGPATH_W) '$(srcdir)/LOCATE.F'; fi`

cedric-CEDERX.o: CEDERX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CEDERX.o `test -f 'CEDERX.F' || echo '$(srcdir)/'`CEDERX.F

cedric-CEDERX.obj: CEDERX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CEDERX.obj `if test -f 'CEDERX.F'; then $(CYGPATH_W) 'CEDERX.F'; else $(CYGPATH_W) '$(srcdir)/CEDERX.F'; fi`

cedric-FLUSH_STDOUT.o: FLUSH_STDOUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FLUSH_STDOUT.o `test -f 'FLUSH_STDOUT.F' || echo '$(srcdir)/'`FLUSH_STDOUT.F

cedric-FLUSH_STDOUT.obj: FLUSH_STDOUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FLUSH_STDOUT.obj `if test -f 'FLUSH_STDOUT.F'; then $(CYGPATH_W) 'FLUSH_STDOUT.F'; else $(CYGPATH_W) '$(srcdir)/FLUSH_STDOUT.F'; fi`

cedric-SETBAD.o: SETBAD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SETBAD.o `test -f 'SETBAD.F' || echo '$(srcdir)/'`SETBAD.F

cedric-SETBAD.obj: SETBAD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SETBAD.obj `if test -f 'SETBAD.F'; then $(CYGPATH_W) 'SETBAD.F'; else $(CYGPATH_W) '$(srcdir)/SETBAD.F'; fi`

cedric-CHANGE.o: CHANGE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CHANGE.o `test -f 'CHANGE.F' || echo '$(srcdir)/'`CHANGE.F

cedric-CHANGE.obj: CHANGE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CHANGE.obj `if test -f 'CHANGE.F'; then $(CYGPATH_W) 'CHANGE.F'; else $(CYGPATH_W) '$(srcdir)/CHANGE.F'; fi`

cedric-COMMNT.o: COMMNT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COMMNT.o `test -f 'COMMNT.F' || echo '$(srcdir)/'`COMMNT.F

cedric-COMMNT.obj: COMMNT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COMMNT.obj `if test -f 'COMMNT.F'; then $(CYGPATH_W) 'COMMNT.F'; else $(CYGPATH_W) '$(srcdir)/COMMNT.F'; fi`

cedric-INTGRT.o: INTGRT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-INTGRT.o `test -f 'INTGRT.F' || echo '$(srcdir)/'`INTGRT.F

cedric-INTGRT.obj: INTGRT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-INTGRT.obj `if test -f 'INTGRT.F'; then $(CYGPATH_W) 'INTGRT.F'; else $(CYGPATH_W) '$(srcdir)/INTGRT.F'; fi`

cedric-CREATE.o: CREATE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CREATE.o `test -f 'CREATE.F' || echo '$(srcdir)/'`CREATE.F

cedric-CREATE.obj: CREATE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CREATE.obj `if test -f 'CREATE.F'; then $(CYGPATH_W) 'CREATE.F'; else $(CYGPATH_W) '$(srcdir)/CREATE.F'; fi`

cedric-FILTER.o: FILTER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FILTER.o `test -f 'FILTER.F' || echo '$(srcdir)/'`FILTER.F

cedric-FILTER.obj: FILTER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FILTER.obj `if test -f 'FILTER.F'; then $(CYGPATH_W) 'FILTER.F'; else $(CYGPATH_W) '$(srcdir)/FILTER.F'; fi`

cedric-FIXIDS.o: FIXIDS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FIXIDS.o `test -f 'FIXIDS.F' || echo '$(srcdir)/'`FIXIDS.F

cedric-FIXIDS.obj: FIXIDS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FIXIDS.obj `if test -f 'FIXIDS.F'; then $(CYGPATH_W) 'FIXIDS.F'; else $(CYGPATH_W) '$(srcdir)/FIXIDS.F'; fi`

cedric-READVL.o: READVL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-READVL.o `test -f 'READVL.F' || echo '$(srcdir)/'`READVL.F

cedric-READVL.obj: READVL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-READVL.obj `if test -f 'READVL.F'; then $(CYGPATH_W) 'READVL.F'; else $(CYGPATH_W) '$(srcdir)/READVL.F'; fi`

cedric-PATCHR.o: PATCHR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PATCHR.o `test -f 'PATCHR.F' || echo '$(srcdir)/'`PATCHR.F

cedric-PATCHR.obj: PATCHR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PATCHR.obj `if test -f 'PATCHR.F'; then $(CYGPATH_W) 'PATCHR.F'; else $(CYGPATH_W) '$(srcdir)/PATCHR.F'; fi`

cedric-STATS.o: STATS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-STATS.o `test -f 'STATS.F' || echo '$(srcdir)/'`STATS.F

cedric-STATS.obj: STATS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-STATS.obj `if test -f 'STATS.F'; then $(CYGPATH_W) 'STATS.F'; else $(CYGPATH_W) '$(srcdir)/STATS.F'; fi`

cedric-STATZI.o: STATZI.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-STATZI.o `test -f 'STATZI.F' || echo '$(srcdir)/'`STATZI.F

cedric-STATZI.obj: STATZI.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-STATZI.obj `if test -f 'STATZI.F'; then $(CYGPATH_W) 'STATZI.F'; else $(CYGPATH_W) '$(srcdir)/STATZI.F'; fi`

cedric-STINT.o: STINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-STINT.o `test -f 'STINT.F' || echo '$(srcdir)/'`STINT.F

cedric-STINT.obj: STINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-STINT.obj `if test -f 'STINT.F'; then $(CYGPATH_W) 'STINT.F'; else $(CYGPATH_W) '$(srcdir)/STINT.F'; fi`

cedric-FUNCTN.o: FUNCTN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FUNCTN.o `test -f 'FUNCTN.F' || echo '$(srcdir)/'`FUNCTN.F

cedric-FUNCTN.obj: FUNCTN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FUNCTN.obj `if test -f 'FUNCTN.F'; then $(CYGPATH_W) 'FUNCTN.F'; else $(CYGPATH_W) '$(srcdir)/FUNCTN.F'; fi`

cedric-FUNCTS.o: FUNCTS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FUNCTS.o `test -f 'FUNCTS.F' || echo '$(srcdir)/'`FUNCTS.F

cedric-FUNCTS.obj: FUNCTS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FUNCTS.obj `if test -f 'FUNCTS.F'; then $(CYGPATH_W) 'FUNCTS.F'; else $(CYGPATH_W) '$(srcdir)/FUNCTS.F'; fi`

cedric-DSFSTK.o: DSFSTK.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DSFSTK.o `test -f 'DSFSTK.F' || echo '$(srcdir)/'`DSFSTK.F

cedric-DSFSTK.obj: DSFSTK.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DSFSTK.obj `if test -f 'DSFSTK.F'; then $(CYGPATH_W) 'DSFSTK.F'; else $(CYGPATH_W) '$(srcdir)/DSFSTK.F'; fi`

cedric-WINDFD.o: WINDFD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-WINDFD.o `test -f 'WINDFD.F' || echo '$(srcdir)/'`WINDFD.F

cedric-WINDFD.obj: WINDFD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-WINDFD.obj `if test -f 'WINDFD.F'; then $(CYGPATH_W) 'WINDFD.F'; else $(CYGPATH_W) '$(srcdir)/WINDFD.F'; fi`

cedric-TRANSF.o: TRANSF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-TRANSF.o `test -f 'TRANSF.F' || echo '$(srcdir)/'`TRANSF.F

cedric-TRANSF.obj: TRANSF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-TRANSF.obj `if test -f 'TRANSF.F'; then $(CYGPATH_W) 'TRANSF.F'; else $(CYGPATH_W) '$(srcdir)/TRANSF.F'; fi`

cedric-DIGITP.o: DIGITP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DIGITP.o `test -f 'DIGITP.F' || echo '$(srcdir)/'`DIGITP.F

cedric-DIGITP.obj: DIGITP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DIGITP.obj `if test -f 'DIGITP.F'; then $(CYGPATH_W) 'DIGITP.F'; else $(CYGPATH_W) '$(srcdir)/DIGITP.F'; fi`

cedric-REMAP.o: REMAP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-REMAP.o `test -f 'REMAP.F' || echo '$(srcdir)/'`REMAP.F

cedric-REMAP.obj: REMAP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-REMAP.obj `if test -f 'REMAP.F'; then $(CYGPATH_W) 'REMAP.F'; else $(CYGPATH_W) '$(srcdir)/REMAP.F'; fi`

cedric-SAMPLR.o: SAMPLR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SAMPLR.o `test -f 'SAMPLR.F' || echo '$(srcdir)/'`SAMPLR.F

cedric-SAMPLR.obj: SAMPLR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SAMPLR.obj `if test -f 'SAMPLR.F'; then $(CYGPATH_W) 'SAMPLR.F'; else $(CYGPATH_W) '$(srcdir)/SAMPLR.F'; fi`

cedric-SHFTER.o: SHFTER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SHFTER.o `test -f 'SHFTER.F' || echo '$(srcdir)/'`SHFTER.F

cedric-SHFTER.obj: SHFTER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SHFTER.obj `if test -f 'SHFTER.F'; then $(CYGPATH_W) 'SHFTER.F'; else $(CYGPATH_W) '$(srcdir)/SHFTER.F'; fi`

cedric-SYNDRV.o: SYNDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SYNDRV.o `test -f 'SYNDRV.F' || echo '$(srcdir)/'`SYNDRV.F

cedric-SYNDRV.obj: SYNDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SYNDRV.obj `if test -f 'SYNDRV.F'; then $(CYGPATH_W) 'SYNDRV.F'; else $(CYGPATH_W) '$(srcdir)/SYNDRV.F'; fi`

cedric-DESYNR.o: DESYNR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DESYNR.o `test -f 'DESYNR.F' || echo '$(srcdir)/'`DESYNR.F

cedric-DESYNR.obj: DESYNR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DESYNR.obj `if test -f 'DESYNR.F'; then $(CYGPATH_W) 'DESYNR.F'; else $(CYGPATH_W) '$(srcdir)/DESYNR.F'; fi`

cedric-UNFOLD.o: UNFOLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-UNFOLD.o `test -f 'UNFOLD.F' || echo '$(srcdir)/'`UNFOLD.F

cedric-UNFOLD.obj: UNFOLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-UNFOLD.obj `if test -f 'UNFOLD.F'; then $(CYGPATH_W) 'UNFOLD.F'; else $(CYGPATH_W) '$(srcdir)/UNFOLD.F'; fi`

cedric-WINDIJ.o: WINDIJ.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-WINDIJ.o `test -f 'WINDIJ.F' || echo '$(srcdir)/'`WINDIJ.F

cedric-WINDIJ.obj: WINDIJ.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-WINDIJ.obj `if test -f 'WINDIJ.F'; then $(CYGPATH_W) 'WINDIJ.F'; else $(CYGPATH_W) '$(srcdir)/WINDIJ.F'; fi`

cedric-WRITVL.o: WRITVL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-WRITVL.o `test -f 'WRITVL.F' || echo '$(srcdir)/'`WRITVL.F

cedric-WRITVL.obj: WRITVL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-WRITVL.obj `if test -f 'WRITVL.F'; then $(CYGPATH_W) 'WRITVL.F'; else $(CYGPATH_W) '$(srcdir)/WRITVL.F'; fi`

cedric-CROSS.o: CROSS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CROSS.o `test -f 'CROSS.F' || echo '$(srcdir)/'`CROSS.F

cedric-CROSS.obj: CROSS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CROSS.obj `if test -f 'CROSS.F'; then $(CYGPATH_W) 'CROSS.F'; else $(CYGPATH_W) '$(srcdir)/CROSS.F'; fi`

cedric-REGRES.o: REGRES.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-REGRES.o `test -f 'REGRES.F' || echo '$(srcdir)/'`REGRES.F

cedric-REGRES.obj: REGRES.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-REGRES.obj `if test -f 'REGRES.F'; then $(CYGPATH_W) 'REGRES.F'; else $(CYGPATH_W) '$(srcdir)/REGRES.F'; fi`

cedric-LAPDRV.o: LAPDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LAPDRV.o `test -f 'LAPDRV.F' || echo '$(srcdir)/'`LAPDRV.F

cedric-LAPDRV.obj: LAPDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LAPDRV.obj `if test -f 'LAPDRV.F'; then $(CYGPATH_W) 'LAPDRV.F'; else $(CYGPATH_W) '$(srcdir)/LAPDRV.F'; fi`

cedric-RLXDRV.o: RLXDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-RLXDRV.o `test -f 'RLXDRV.F' || echo '$(srcdir)/'`RLXDRV.F

cedric-RLXDRV.obj: RLXDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-RLXDRV.obj `if test -f 'RLXDRV.F'; then $(CYGPATH_W) 'RLXDRV.F'; else $(CYGPATH_W) '$(srcdir)/RLXDRV.F'; fi`

cedric-MS2DRV.o: MS2DRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-MS2DRV.o `test -f 'MS2DRV.F' || echo '$(srcdir)/'`MS2DRV.F

cedric-MS2DRV.obj: MS2DRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-MS2DRV.obj `if test -f 'MS2DRV.F'; then $(CYGPATH_W) 'MS2DRV.F'; else $(CYGPATH_W) '$(srcdir)/MS2DRV.F'; fi`

cedric-COORD.o: COORD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COORD.o `test -f 'COORD.F' || echo '$(srcdir)/'`COORD.F

cedric-COORD.obj: COORD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COORD.obj `if test -f 'COORD.F'; then $(CYGPATH_W) 'COORD.F'; else $(CYGPATH_W) '$(srcdir)/COORD.F'; fi`

cedric-FLAT.o: FLAT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FLAT.o `test -f 'FLAT.F' || echo '$(srcdir)/'`FLAT.F

cedric-FLAT.obj: FLAT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FLAT.obj `if test -f 'FLAT.F'; then $(CYGPATH_W) 'FLAT.F'; else $(CYGPATH_W) '$(srcdir)/FLAT.F'; fi`

cedric-READAIR.o: READAIR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-READAIR.o `test -f 'READAIR.F' || echo '$(srcdir)/'`READAIR.F

cedric-READAIR.obj: READAIR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-READAIR.obj `if test -f 'READAIR.F'; then $(CYGPATH_W) 'READAIR.F'; else $(CYGPATH_W) '$(srcdir)/READAIR.F'; fi`

cedric-READSTA.o: READSTA.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-READSTA.o `test -f 'READSTA.F' || echo '$(srcdir)/'`READSTA.F

cedric-READSTA.obj: READSTA.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-READSTA.obj `if test -f 'READSTA.F'; then $(CYGPATH_W) 'READSTA.F'; else $(CYGPATH_W) '$(srcdir)/READSTA.F'; fi`

cedric-LAT_LON.o: LAT_LON.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LAT_LON.o `test -f 'LAT_LON.F' || echo '$(srcdir)/'`LAT_LON.F

cedric-LAT_LON.obj: LAT_LON.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LAT_LON.obj `if test -f 'LAT_LON.F'; then $(CYGPATH_W) 'LAT_LON.F'; else $(CYGPATH_W) '$(srcdir)/LAT_LON.F'; fi`

cedric-VADDRV.o: VADDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-VADDRV.o `test -f 'VADDRV.F' || echo '$(srcdir)/'`VADDRV.F

cedric-VADDRV.obj: VADDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-VADDRV.obj `if test -f 'VADDRV.F'; then $(CYGPATH_W) 'VADDRV.F'; else $(CYGPATH_W) '$(srcdir)/VADDRV.F'; fi`

cedric-SAVVAD.o: SAVVAD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SAVVAD.o `test -f 'SAVVAD.F' || echo '$(srcdir)/'`SAVVAD.F

cedric-SAVVAD.obj: SAVVAD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SAVVAD.obj `if test -f 'SAVVAD.F'; then $(CYGPATH_W) 'SAVVAD.F'; else $(CYGPATH_W) '$(srcdir)/SAVVAD.F'; fi`

cedric-GETNLD.o: GETNLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-GETNLD.o `test -f 'GETNLD.F' || echo '$(srcdir)/'`GETNLD.F

cedric-GETNLD.obj: GETNLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-GETNLD.obj `if test -f 'GETNLD.F'; then $(CYGPATH_W) 'GETNLD.F'; else $(CYGPATH_W) '$(srcdir)/GETNLD.F'; fi`

cedric-GETLMA.o: GETLMA.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-GETLMA.o `test -f 'GETLMA.F' || echo '$(srcdir)/'`GETLMA.F

cedric-GETLMA.obj: GETLMA.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-GETLMA.obj `if test -f 'GETLMA.F'; then $(CYGPATH_W) 'GETLMA.F'; else $(CYGPATH_W) '$(srcdir)/GETLMA.F'; fi`

cedric-COPCX.o: COPCX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COPCX.o `test -f 'COPCX.F' || echo '$(srcdir)/'`COPCX.F

cedric-COPCX.obj: COPCX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COPCX.obj `if test -f 'COPCX.F'; then $(CYGPATH_W) 'COPCX.F'; else $(CYGPATH_W) '$(srcdir)/COPCX.F'; fi`

cedric-COPRX.o: COPRX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COPRX.o `test -f 'COPRX.F' || echo '$(srcdir)/'`COPRX.F

cedric-COPRX.obj: COPRX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COPRX.obj `if test -f 'COPRX.F'; then $(CYGPATH_W) 'COPRX.F'; else $(CYGPATH_W) '$(srcdir)/COPRX.F'; fi`

cedric-COPIX.o: COPIX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COPIX.o `test -f 'COPIX.F' || echo '$(srcdir)/'`COPIX.F

cedric-COPIX.obj: COPIX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COPIX.obj `if test -f 'COPIX.F'; then $(CYGPATH_W) 'COPIX.F'; else $(CYGPATH_W) '$(srcdir)/COPIX.F'; fi`

cedric-COPIRX.o: COPIRX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COPIRX.o `test -f 'COPIRX.F' || echo '$(srcdir)/'`COPIRX.F

cedric-COPIRX.obj: COPIRX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COPIRX.obj `if test -f 'COPIRX.F'; then $(CYGPATH_W) 'COPIRX.F'; else $(CYGPATH_W) '$(srcdir)/COPIRX.F'; fi`

cedric-COPCIX.o: COPCIX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COPCIX.o `test -f 'COPCIX.F' || echo '$(srcdir)/'`COPCIX.F

cedric-COPCIX.obj: COPCIX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COPCIX.obj `if test -f 'COPCIX.F'; then $(CYGPATH_W) 'COPCIX.F'; else $(CYGPATH_W) '$(srcdir)/COPCIX.F'; fi`

cedric-CONCHAR.o: CONCHAR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CONCHAR.o `test -f 'CONCHAR.F' || echo '$(srcdir)/'`CONCHAR.F

cedric-CONCHAR.obj: CONCHAR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CONCHAR.obj `if test -f 'CONCHAR.F'; then $(CYGPATH_W) 'CONCHAR.F'; else $(CYGPATH_W) '$(srcdir)/CONCHAR.F'; fi`

cedric-SELDEV.o: SELDEV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SELDEV.o `test -f 'SELDEV.F' || echo '$(srcdir)/'`SELDEV.F

cedric-SELDEV.obj: SELDEV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SELDEV.obj `if test -f 'SELDEV.F'; then $(CYGPATH_W) 'SELDEV.F'; else $(CYGPATH_W) '$(srcdir)/SELDEV.F'; fi`

cedric-IFINDC.o: IFINDC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IFINDC.o `test -f 'IFINDC.F' || echo '$(srcdir)/'`IFINDC.F

cedric-IFINDC.obj: IFINDC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IFINDC.obj `if test -f 'IFINDC.F'; then $(CYGPATH_W) 'IFINDC.F'; else $(CYGPATH_W) '$(srcdir)/IFINDC.F'; fi`

cedric-IADFLD.o: IADFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IADFLD.o `test -f 'IADFLD.F' || echo '$(srcdir)/'`IADFLD.F

cedric-IADFLD.obj: IADFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IADFLD.obj `if test -f 'IADFLD.F'; then $(CYGPATH_W) 'IADFLD.F'; else $(CYGPATH_W) '$(srcdir)/IADFLD.F'; fi`

cedric-LOCFLDID.o: LOCFLDID.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LOCFLDID.o `test -f 'LOCFLDID.F' || echo '$(srcdir)/'`LOCFLDID.F

cedric-LOCFLDID.obj: LOCFLDID.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LOCFLDID.obj `if test -f 'LOCFLDID.F'; then $(CYGPATH_W) 'LOCFLDID.F'; else $(CYGPATH_W) '$(srcdir)/LOCFLDID.F'; fi`

cedric-LOCINT.o: LOCINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LOCINT.o `test -f 'LOCINT.F' || echo '$(srcdir)/'`LOCINT.F

cedric-LOCINT.obj: LOCINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LOCINT.obj `if test -f 'LOCINT.F'; then $(CYGPATH_W) 'LOCINT.F'; else $(CYGPATH_W) '$(srcdir)/LOCINT.F'; fi`

cedric-LOCFLD.o: LOCFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LOCFLD.o `test -f 'LOCFLD.F' || echo '$(srcdir)/'`LOCFLD.F

cedric-LOCFLD.obj: LOCFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LOCFLD.obj `if test -f 'LOCFLD.F'; then $(CYGPATH_W) 'LOCFLD.F'; else $(CYGPATH_W) '$(srcdir)/LOCFLD.F'; fi`

cedric-FETCHD.o: FETCHD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FETCHD.o `test -f 'FETCHD.F' || echo '$(srcdir)/'`FETCHD.F

cedric-FETCHD.obj: FETCHD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FETCHD.obj `if test -f 'FETCHD.F'; then $(CYGPATH_W) 'FETCHD.F'; else $(CYGPATH_W) '$(srcdir)/FETCHD.F'; fi`

cedric-FETCHZ.o: FETCHZ.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FETCHZ.o `test -f 'FETCHZ.F' || echo '$(srcdir)/'`FETCHZ.F

cedric-FETCHZ.obj: FETCHZ.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FETCHZ.obj `if test -f 'FETCHZ.F'; then $(CYGPATH_W) 'FETCHZ.F'; else $(CYGPATH_W) '$(srcdir)/FETCHZ.F'; fi`

cedric-PLACED.o: PLACED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PLACED.o `test -f 'PLACED.F' || echo '$(srcdir)/'`PLACED.F

cedric-PLACED.obj: PLACED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PLACED.obj `if test -f 'PLACED.F'; then $(CYGPATH_W) 'PLACED.F'; else $(CYGPATH_W) '$(srcdir)/PLACED.F'; fi`

cedric-LL2XY.o: LL2XY.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LL2XY.o `test -f 'LL2XY.F' || echo '$(srcdir)/'`LL2XY.F

cedric-LL2XY.obj: LL2XY.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LL2XY.obj `if test -f 'LL2XY.F'; then $(CYGPATH_W) 'LL2XY.F'; else $(CYGPATH_W) '$(srcdir)/LL2XY.F'; fi`

cedric-LL2XYDRV.o: LL2XYDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LL2XYDRV.o `test -f 'LL2XYDRV.F' || echo '$(srcdir)/'`LL2XYDRV.F

cedric-LL2XYDRV.obj: LL2XYDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LL2XYDRV.obj `if test -f 'LL2XYDRV.F'; then $(CYGPATH_W) 'LL2XYDRV.F'; else $(CYGPATH_W) '$(srcdir)/LL2XYDRV.F'; fi`

cedric-LLINTRP.o: LLINTRP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LLINTRP.o `test -f 'LLINTRP.F' || echo '$(srcdir)/'`LLINTRP.F

cedric-LLINTRP.obj: LLINTRP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LLINTRP.obj `if test -f 'LLINTRP.F'; then $(CYGPATH_W) 'LLINTRP.F'; else $(CYGPATH_W) '$(srcdir)/LLINTRP.F'; fi`

cedric-XY2LLDRV.o: XY2LLDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-XY2LLDRV.o `test -f 'XY2LLDRV.F' || echo '$(srcdir)/'`XY2LLDRV.F

cedric-XY2LLDRV.obj: XY2LLDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-XY2LLDRV.obj `if test -f 'XY2LLDRV.F'; then $(CYGPATH_W) 'XY2LLDRV.F'; else $(CYGPATH_W) '$(srcdir)/XY2LLDRV.F'; fi`

cedric-XY2LL.o: XY2LL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-XY2LL.o `test -f 'XY2LL.F' || echo '$(srcdir)/'`XY2LL.F

cedric-XY2LL.obj: XY2LL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-XY2LL.obj `if test -f 'XY2LL.F'; then $(CYGPATH_W) 'XY2LL.F'; else $(CYGPATH_W) '$(srcdir)/XY2LL.F'; fi`

cedric-CONFLD.o: CONFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CONFLD.o `test -f 'CONFLD.F' || echo '$(srcdir)/'`CONFLD.F

cedric-CONFLD.obj: CONFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CONFLD.obj `if test -f 'CONFLD.F'; then $(CYGPATH_W) 'CONFLD.F'; else $(CYGPATH_W) '$(srcdir)/CONFLD.F'; fi`

cedric-PCONVG.o: PCONVG.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PCONVG.o `test -f 'PCONVG.F' || echo '$(srcdir)/'`PCONVG.F

cedric-PCONVG.obj: PCONVG.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PCONVG.obj `if test -f 'PCONVG.F'; then $(CYGPATH_W) 'PCONVG.F'; else $(CYGPATH_W) '$(srcdir)/PCONVG.F'; fi`

cedric-SHOEDF.o: SHOEDF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SHOEDF.o `test -f 'SHOEDF.F' || echo '$(srcdir)/'`SHOEDF.F

cedric-SHOEDF.obj: SHOEDF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SHOEDF.obj `if test -f 'SHOEDF.F'; then $(CYGPATH_W) 'SHOEDF.F'; else $(CYGPATH_W) '$(srcdir)/SHOEDF.F'; fi`

cedric-SHOEDW.o: SHOEDW.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SHOEDW.o `test -f 'SHOEDW.F' || echo '$(srcdir)/'`SHOEDW.F

cedric-SHOEDW.obj: SHOEDW.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SHOEDW.obj `if test -f 'SHOEDW.F'; then $(CYGPATH_W) 'SHOEDW.F'; else $(CYGPATH_W) '$(srcdir)/SHOEDW.F'; fi`

cedric-EXTEND.o: EXTEND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-EXTEND.o `test -f 'EXTEND.F' || echo '$(srcdir)/'`EXTEND.F

cedric-EXTEND.obj: EXTEND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-EXTEND.obj `if test -f 'EXTEND.F'; then $(CYGPATH_W) 'EXTEND.F'; else $(CYGPATH_W) '$(srcdir)/EXTEND.F'; fi`

cedric-SETAXS.o: SETAXS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SETAXS.o `test -f 'SETAXS.F' || echo '$(srcdir)/'`SETAXS.F

cedric-SETAXS.obj: SETAXS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SETAXS.obj `if test -f 'SETAXS.F'; then $(CYGPATH_W) 'SETAXS.F'; else $(CYGPATH_W) '$(srcdir)/SETAXS.F'; fi`

cedric-GET3D.o: GET3D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-GET3D.o `test -f 'GET3D.F' || echo '$(srcdir)/'`GET3D.F

cedric-GET3D.obj: GET3D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-GET3D.obj `if test -f 'GET3D.F'; then $(CYGPATH_W) 'GET3D.F'; else $(CYGPATH_W) '$(srcdir)/GET3D.F'; fi`

cedric-PUT3D.o: PUT3D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PUT3D.o `test -f 'PUT3D.F' || echo '$(srcdir)/'`PUT3D.F

cedric-PUT3D.obj: PUT3D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PUT3D.obj `if test -f 'PUT3D.F'; then $(CYGPATH_W) 'PUT3D.F'; else $(CYGPATH_W) '$(srcdir)/PUT3D.F'; fi`

cedric-FILL3D.o: FILL3D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FILL3D.o `test -f 'FILL3D.F' || echo '$(srcdir)/'`FILL3D.F

cedric-FILL3D.obj: FILL3D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FILL3D.obj `if test -f 'FILL3D.F'; then $(CYGPATH_W) 'FILL3D.F'; else $(CYGPATH_W) '$(srcdir)/FILL3D.F'; fi`

cedric-DOFILT.o: DOFILT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DOFILT.o `test -f 'DOFILT.F' || echo '$(srcdir)/'`DOFILT.F

cedric-DOFILT.obj: DOFILT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DOFILT.obj `if test -f 'DOFILT.F'; then $(CYGPATH_W) 'DOFILT.F'; else $(CYGPATH_W) '$(srcdir)/DOFILT.F'; fi`

cedric-T5FLTR.o: T5FLTR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-T5FLTR.o `test -f 'T5FLTR.F' || echo '$(srcdir)/'`T5FLTR.F

cedric-T5FLTR.obj: T5FLTR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-T5FLTR.obj `if test -f 'T5FLTR.F'; then $(CYGPATH_W) 'T5FLTR.F'; else $(CYGPATH_W) '$(srcdir)/T5FLTR.F'; fi`

cedric-NEWHED.o: NEWHED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-NEWHED.o `test -f 'NEWHED.F' || echo '$(srcdir)/'`NEWHED.F

cedric-NEWHED.obj: NEWHED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-NEWHED.obj `if test -f 'NEWHED.F'; then $(CYGPATH_W) 'NEWHED.F'; else $(CYGPATH_W) '$(srcdir)/NEWHED.F'; fi`

cedric-UPDHED.o: UPDHED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-UPDHED.o `test -f 'UPDHED.F' || echo '$(srcdir)/'`UPDHED.F

cedric-UPDHED.obj: UPDHED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-UPDHED.obj `if test -f 'UPDHED.F'; then $(CYGPATH_W) 'UPDHED.F'; else $(CYGPATH_W) '$(srcdir)/UPDHED.F'; fi`

cedric-CRTMAP.o: CRTMAP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CRTMAP.o `test -f 'CRTMAP.F' || echo '$(srcdir)/'`CRTMAP.F

cedric-CRTMAP.obj: CRTMAP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CRTMAP.obj `if test -f 'CRTMAP.F'; then $(CYGPATH_W) 'CRTMAP.F'; else $(CYGPATH_W) '$(srcdir)/CRTMAP.F'; fi`

cedric-DSINIT.o: DSINIT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DSINIT.o `test -f 'DSINIT.F' || echo '$(srcdir)/'`DSINIT.F

cedric-DSINIT.obj: DSINIT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DSINIT.obj `if test -f 'DSINIT.F'; then $(CYGPATH_W) 'DSINIT.F'; else $(CYGPATH_W) '$(srcdir)/DSINIT.F'; fi`

cedric-RESHUF.o: RESHUF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-RESHUF.o `test -f 'RESHUF.F' || echo '$(srcdir)/'`RESHUF.F

cedric-RESHUF.obj: RESHUF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-RESHUF.obj `if test -f 'RESHUF.F'; then $(CYGPATH_W) 'RESHUF.F'; else $(CYGPATH_W) '$(srcdir)/RESHUF.F'; fi`

cedric-SKIPP.o: SKIPP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SKIPP.o `test -f 'SKIPP.F' || echo '$(srcdir)/'`SKIPP.F

cedric-SKIPP.obj: SKIPP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SKIPP.obj `if test -f 'SKIPP.F'; then $(CYGPATH_W) 'SKIPP.F'; else $(CYGPATH_W) '$(srcdir)/SKIPP.F'; fi`

cedric-IDCMPR.o: IDCMPR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IDCMPR.o `test -f 'IDCMPR.F' || echo '$(srcdir)/'`IDCMPR.F

cedric-IDCMPR.obj: IDCMPR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IDCMPR.obj `if test -f 'IDCMPR.F'; then $(CYGPATH_W) 'IDCMPR.F'; else $(CYGPATH_W) '$(srcdir)/IDCMPR.F'; fi`

cedric-COMCHK.o: COMCHK.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COMCHK.o `test -f 'COMCHK.F' || echo '$(srcdir)/'`COMCHK.F

cedric-COMCHK.obj: COMCHK.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COMCHK.obj `if test -f 'COMCHK.F'; then $(CYGPATH_W) 'COMCHK.F'; else $(CYGPATH_W) '$(srcdir)/COMCHK.F'; fi`

cedric-WINSET.o: WINSET.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-WINSET.o `test -f 'WINSET.F' || echo '$(srcdir)/'`WINSET.F

cedric-WINSET.obj: WINSET.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-WINSET.obj `if test -f 'WINSET.F'; then $(CYGPATH_W) 'WINSET.F'; else $(CYGPATH_W) '$(srcdir)/WINSET.F'; fi`

cedric-FLDSET.o: FLDSET.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FLDSET.o `test -f 'FLDSET.F' || echo '$(srcdir)/'`FLDSET.F

cedric-FLDSET.obj: FLDSET.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FLDSET.obj `if test -f 'FLDSET.F'; then $(CYGPATH_W) 'FLDSET.F'; else $(CYGPATH_W) '$(srcdir)/FLDSET.F'; fi`

cedric-SETVOL.o: SETVOL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SETVOL.o `test -f 'SETVOL.F' || echo '$(srcdir)/'`SETVOL.F

cedric-SETVOL.obj: SETVOL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SETVOL.obj `if test -f 'SETVOL.F'; then $(CYGPATH_W) 'SETVOL.F'; else $(CYGPATH_W) '$(srcdir)/SETVOL.F'; fi`

cedric-IMHSUM.o: IMHSUM.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IMHSUM.o `test -f 'IMHSUM.F' || echo '$(srcdir)/'`IMHSUM.F

cedric-IMHSUM.obj: IMHSUM.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IMHSUM.obj `if test -f 'IMHSUM.F'; then $(CYGPATH_W) 'IMHSUM.F'; else $(CYGPATH_W) '$(srcdir)/IMHSUM.F'; fi`

cedric-TAPMES.o: TAPMES.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-TAPMES.o `test -f 'TAPMES.F' || echo '$(srcdir)/'`TAPMES.F

cedric-TAPMES.obj: TAPMES.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-TAPMES.obj `if test -f 'TAPMES.F'; then $(CYGPATH_W) 'TAPMES.F'; else $(CYGPATH_W) '$(srcdir)/TAPMES.F'; fi`

cedric-CEDCDF.o: CEDCDF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CEDCDF.o `test -f 'CEDCDF.F' || echo '$(srcdir)/'`CEDCDF.F

cedric-CEDCDF.obj: CEDCDF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CEDCDF.obj `if test -f 'CEDCDF.F'; then $(CYGPATH_W) 'CEDCDF.F'; else $(CYGPATH_W) '$(srcdir)/CEDCDF.F'; fi`

cedric-CRTHIN.o: CRTHIN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CRTHIN.o `test -f 'CRTHIN.F' || echo '$(srcdir)/'`CRTHIN.F

cedric-CRTHIN.obj: CRTHIN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CRTHIN.obj `if test -f 'CRTHIN.F'; then $(CYGPATH_W) 'CRTHIN.F'; else $(CYGPATH_W) '$(srcdir)/CRTHIN.F'; fi`

cedric-FLDNAMOUT.o: FLDNAMOUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FLDNAMOUT.o `test -f 'FLDNAMOUT.F' || echo '$(srcdir)/'`FLDNAMOUT.F

cedric-FLDNAMOUT.obj: FLDNAMOUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-FLDNAMOUT.obj `if test -f 'FLDNAMOUT.F'; then $(CYGPATH_W) 'FLDNAMOUT.F'; else $(CYGPATH_W) '$(srcdir)/FLDNAMOUT.F'; fi`

cedric-PUTD.o: PUTD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PUTD.o `test -f 'PUTD.F' || echo '$(srcdir)/'`PUTD.F

cedric-PUTD.obj: PUTD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PUTD.obj `if test -f 'PUTD.F'; then $(CYGPATH_W) 'PUTD.F'; else $(CYGPATH_W) '$(srcdir)/PUTD.F'; fi`

cedric-GETD.o: GETD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-GETD.o `test -f 'GETD.F' || echo '$(srcdir)/'`GETD.F

cedric-GETD.obj: GETD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-GETD.obj `if test -f 'GETD.F'; then $(CYGPATH_W) 'GETD.F'; else $(CYGPATH_W) '$(srcdir)/GETD.F'; fi`

cedric-TRPCO.o: TRPCO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-TRPCO.o `test -f 'TRPCO.F' || echo '$(srcdir)/'`TRPCO.F

cedric-TRPCO.obj: TRPCO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-TRPCO.obj `if test -f 'TRPCO.F'; then $(CYGPATH_W) 'TRPCO.F'; else $(CYGPATH_W) '$(srcdir)/TRPCO.F'; fi`

cedric-LSQFIL.o: LSQFIL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LSQFIL.o `test -f 'LSQFIL.F' || echo '$(srcdir)/'`LSQFIL.F

cedric-LSQFIL.obj: LSQFIL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LSQFIL.obj `if test -f 'LSQFIL.F'; then $(CYGPATH_W) 'LSQFIL.F'; else $(CYGPATH_W) '$(srcdir)/LSQFIL.F'; fi`

cedric-SHIFTIT.o: SHIFTIT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SHIFTIT.o `test -f 'SHIFTIT.F' || echo '$(srcdir)/'`SHIFTIT.F

cedric-SHIFTIT.obj: SHIFTIT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SHIFTIT.obj `if test -f 'SHIFTIT.F'; then $(CYGPATH_W) 'SHIFTIT.F'; else $(CYGPATH_W) '$(srcdir)/SHIFTIT.F'; fi`

cedric-SHILBL.o: SHILBL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SHILBL.o `test -f 'SHILBL.F' || echo '$(srcdir)/'`SHILBL.F

cedric-SHILBL.obj: SHILBL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SHILBL.obj `if test -f 'SHILBL.F'; then $(CYGPATH_W) 'SHILBL.F'; else $(CYGPATH_W) '$(srcdir)/SHILBL.F'; fi`

cedric-SHIRBL.o: SHIRBL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SHIRBL.o `test -f 'SHIRBL.F' || echo '$(srcdir)/'`SHIRBL.F

cedric-SHIRBL.obj: SHIRBL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SHIRBL.obj `if test -f 'SHIRBL.F'; then $(CYGPATH_W) 'SHIRBL.F'; else $(CYGPATH_W) '$(srcdir)/SHIRBL.F'; fi`

cedric-IFIND.o: IFIND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IFIND.o `test -f 'IFIND.F' || echo '$(srcdir)/'`IFIND.F

cedric-IFIND.obj: IFIND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IFIND.obj `if test -f 'IFIND.F'; then $(CYGPATH_W) 'IFIND.F'; else $(CYGPATH_W) '$(srcdir)/IFIND.F'; fi`

cedric-ALTER.o: ALTER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-ALTER.o `test -f 'ALTER.F' || echo '$(srcdir)/'`ALTER.F

cedric-ALTER.obj: ALTER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-ALTER.obj `if test -f 'ALTER.F'; then $(CYGPATH_W) 'ALTER.F'; else $(CYGPATH_W) '$(srcdir)/ALTER.F'; fi`

cedric-ASDPMD.o: ASDPMD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-ASDPMD.o `test -f 'ASDPMD.F' || echo '$(srcdir)/'`ASDPMD.F

cedric-ASDPMD.obj: ASDPMD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-ASDPMD.obj `if test -f 'ASDPMD.F'; then $(CYGPATH_W) 'ASDPMD.F'; else $(CYGPATH_W) '$(srcdir)/ASDPMD.F'; fi`

cedric-REGCAL.o: REGCAL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-REGCAL.o `test -f 'REGCAL.F' || echo '$(srcdir)/'`REGCAL.F

cedric-REGCAL.obj: REGCAL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-REGCAL.obj `if test -f 'REGCAL.F'; then $(CYGPATH_W) 'REGCAL.F'; else $(CYGPATH_W) '$(srcdir)/REGCAL.F'; fi`

cedric-REGINT.o: REGINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-REGINT.o `test -f 'REGINT.F' || echo '$(srcdir)/'`REGINT.F

cedric-REGINT.obj: REGINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-REGINT.obj `if test -f 'REGINT.F'; then $(CYGPATH_W) 'REGINT.F'; else $(CYGPATH_W) '$(srcdir)/REGINT.F'; fi`

cedric-REGRZI.o: REGRZI.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-REGRZI.o `test -f 'REGRZI.F' || echo '$(srcdir)/'`REGRZI.F

cedric-REGRZI.obj: REGRZI.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-REGRZI.obj `if test -f 'REGRZI.F'; then $(CYGPATH_W) 'REGRZI.F'; else $(CYGPATH_W) '$(srcdir)/REGRZI.F'; fi`

cedric-BLHED.o: BLHED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-BLHED.o `test -f 'BLHED.F' || echo '$(srcdir)/'`BLHED.F

cedric-BLHED.obj: BLHED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-BLHED.obj `if test -f 'BLHED.F'; then $(CYGPATH_W) 'BLHED.F'; else $(CYGPATH_W) '$(srcdir)/BLHED.F'; fi`

cedric-DWITER.o: DWITER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DWITER.o `test -f 'DWITER.F' || echo '$(srcdir)/'`DWITER.F

cedric-DWITER.obj: DWITER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DWITER.obj `if test -f 'DWITER.F'; then $(CYGPATH_W) 'DWITER.F'; else $(CYGPATH_W) '$(srcdir)/DWITER.F'; fi`

cedric-VADCORD.o: VADCORD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-VADCORD.o `test -f 'VADCORD.F' || echo '$(srcdir)/'`VADCORD.F

cedric-VADCORD.obj: VADCORD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-VADCORD.obj `if test -f 'VADCORD.F'; then $(CYGPATH_W) 'VADCORD.F'; else $(CYGPATH_W) '$(srcdir)/VADCORD.F'; fi`

cedric-VAD.o: VAD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-VAD.o `test -f 'VAD.F' || echo '$(srcdir)/'`VAD.F

cedric-VAD.obj: VAD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-VAD.obj `if test -f 'VAD.F'; then $(CYGPATH_W) 'VAD.F'; else $(CYGPATH_W) '$(srcdir)/VAD.F'; fi`

cedric-VADRINGS.o: VADRINGS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-VADRINGS.o `test -f 'VADRINGS.F' || echo '$(srcdir)/'`VADRINGS.F

cedric-VADRINGS.obj: VADRINGS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-VADRINGS.obj `if test -f 'VADRINGS.F'; then $(CYGPATH_W) 'VADRINGS.F'; else $(CYGPATH_W) '$(srcdir)/VADRINGS.F'; fi`

cedric-PLANST.o: PLANST.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PLANST.o `test -f 'PLANST.F' || echo '$(srcdir)/'`PLANST.F

cedric-PLANST.obj: PLANST.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PLANST.obj `if test -f 'PLANST.F'; then $(CYGPATH_W) 'PLANST.F'; else $(CYGPATH_W) '$(srcdir)/PLANST.F'; fi`

cedric-PLNFLD.o: PLNFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PLNFLD.o `test -f 'PLNFLD.F' || echo '$(srcdir)/'`PLNFLD.F

cedric-PLNFLD.obj: PLNFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PLNFLD.obj `if test -f 'PLNFLD.F'; then $(CYGPATH_W) 'PLNFLD.F'; else $(CYGPATH_W) '$(srcdir)/PLNFLD.F'; fi`

cedric-LINFIT2.o: LINFIT2.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LINFIT2.o `test -f 'LINFIT2.F' || echo '$(srcdir)/'`LINFIT2.F

cedric-LINFIT2.obj: LINFIT2.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LINFIT2.obj `if test -f 'LINFIT2.F'; then $(CYGPATH_W) 'LINFIT2.F'; else $(CYGPATH_W) '$(srcdir)/LINFIT2.F'; fi`

cedric-LSFILW.o: LSFILW.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LSFILW.o `test -f 'LSFILW.F' || echo '$(srcdir)/'`LSFILW.F

cedric-LSFILW.obj: LSFILW.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LSFILW.obj `if test -f 'LSFILW.F'; then $(CYGPATH_W) 'LSFILW.F'; else $(CYGPATH_W) '$(srcdir)/LSFILW.F'; fi`

cedric-LSTSQR.o: LSTSQR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LSTSQR.o `test -f 'LSTSQR.F' || echo '$(srcdir)/'`LSTSQR.F

cedric-LSTSQR.obj: LSTSQR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LSTSQR.obj `if test -f 'LSTSQR.F'; then $(CYGPATH_W) 'LSTSQR.F'; else $(CYGPATH_W) '$(srcdir)/LSTSQR.F'; fi`

cedric-SETDCD.o: SETDCD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SETDCD.o `test -f 'SETDCD.F' || echo '$(srcdir)/'`SETDCD.F

cedric-SETDCD.obj: SETDCD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SETDCD.obj `if test -f 'SETDCD.F'; then $(CYGPATH_W) 'SETDCD.F'; else $(CYGPATH_W) '$(srcdir)/SETDCD.F'; fi`

cedric-GLODEC.o: GLODEC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-GLODEC.o `test -f 'GLODEC.F' || echo '$(srcdir)/'`GLODEC.F

cedric-GLODEC.obj: GLODEC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-GLODEC.obj `if test -f 'GLODEC.F'; then $(CYGPATH_W) 'GLODEC.F'; else $(CYGPATH_W) '$(srcdir)/GLODEC.F'; fi`

cedric-BNDFIL.o: BNDFIL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-BNDFIL.o `test -f 'BNDFIL.F' || echo '$(srcdir)/'`BNDFIL.F

cedric-BNDFIL.obj: BNDFIL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-BNDFIL.obj `if test -f 'BNDFIL.F'; then $(CYGPATH_W) 'BNDFIL.F'; else $(CYGPATH_W) '$(srcdir)/BNDFIL.F'; fi`

cedric-BNDVAL.o: BNDVAL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-BNDVAL.o `test -f 'BNDVAL.F' || echo '$(srcdir)/'`BNDVAL.F

cedric-BNDVAL.obj: BNDVAL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-BNDVAL.obj `if test -f 'BNDVAL.F'; then $(CYGPATH_W) 'BNDVAL.F'; else $(CYGPATH_W) '$(srcdir)/BNDVAL.F'; fi`

cedric-UNPAUT.o: UNPAUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-UNPAUT.o `test -f 'UNPAUT.F' || echo '$(srcdir)/'`UNPAUT.F

cedric-UNPAUT.obj: UNPAUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-UNPAUT.obj `if test -f 'UNPAUT.F'; then $(CYGPATH_W) 'UNPAUT.F'; else $(CYGPATH_W) '$(srcdir)/UNPAUT.F'; fi`

cedric-STRID.o: STRID.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-STRID.o `test -f 'STRID.F' || echo '$(srcdir)/'`STRID.F

cedric-STRID.obj: STRID.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-STRID.obj `if test -f 'STRID.F'; then $(CYGPATH_W) 'STRID.F'; else $(CYGPATH_W) '$(srcdir)/STRID.F'; fi`

cedric-RITER.o: RITER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-RITER.o `test -f 'RITER.F' || echo '$(srcdir)/'`RITER.F

cedric-RITER.obj: RITER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-RITER.obj `if test -f 'RITER.F'; then $(CYGPATH_W) 'RITER.F'; else $(CYGPATH_W) '$(srcdir)/RITER.F'; fi`

cedric-NEXACT.o: NEXACT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-NEXACT.o `test -f 'NEXACT.F' || echo '$(srcdir)/'`NEXACT.F

cedric-NEXACT.obj: NEXACT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-NEXACT.obj `if test -f 'NEXACT.F'; then $(CYGPATH_W) 'NEXACT.F'; else $(CYGPATH_W) '$(srcdir)/NEXACT.F'; fi`

cedric-ISUFLD.o: ISUFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-ISUFLD.o `test -f 'ISUFLD.F' || echo '$(srcdir)/'`ISUFLD.F

cedric-ISUFLD.obj: ISUFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-ISUFLD.obj `if test -f 'ISUFLD.F'; then $(CYGPATH_W) 'ISUFLD.F'; else $(CYGPATH_W) '$(srcdir)/ISUFLD.F'; fi`

cedric-CRINTRP.o: CRINTRP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CRINTRP.o `test -f 'CRINTRP.F' || echo '$(srcdir)/'`CRINTRP.F

cedric-CRINTRP.obj: CRINTRP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CRINTRP.obj `if test -f 'CRINTRP.F'; then $(CYGPATH_W) 'CRINTRP.F'; else $(CYGPATH_W) '$(srcdir)/CRINTRP.F'; fi`

cedric-EQSLV.o: EQSLV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-EQSLV.o `test -f 'EQSLV.F' || echo '$(srcdir)/'`EQSLV.F

cedric-EQSLV.obj: EQSLV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-EQSLV.obj `if test -f 'EQSLV.F'; then $(CYGPATH_W) 'EQSLV.F'; else $(CYGPATH_W) '$(srcdir)/EQSLV.F'; fi`

cedric-IFINOT.o: IFINOT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IFINOT.o `test -f 'IFINOT.F' || echo '$(srcdir)/'`IFINOT.F

cedric-IFINOT.obj: IFINOT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IFINOT.obj `if test -f 'IFINOT.F'; then $(CYGPATH_W) 'IFINOT.F'; else $(CYGPATH_W) '$(srcdir)/IFINOT.F'; fi`

cedric-DUMMY.o: DUMMY.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DUMMY.o `test -f 'DUMMY.F' || echo '$(srcdir)/'`DUMMY.F

cedric-DUMMY.obj: DUMMY.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DUMMY.obj `if test -f 'DUMMY.F'; then $(CYGPATH_W) 'DUMMY.F'; else $(CYGPATH_W) '$(srcdir)/DUMMY.F'; fi`

cedric-CEDLOG.o: CEDLOG.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CEDLOG.o `test -f 'CEDLOG.F' || echo '$(srcdir)/'`CEDLOG.F

cedric-CEDLOG.obj: CEDLOG.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CEDLOG.obj `if test -f 'CEDLOG.F'; then $(CYGPATH_W) 'CEDLOG.F'; else $(CYGPATH_W) '$(srcdir)/CEDLOG.F'; fi`

cedric-GRIDAIR.o: GRIDAIR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-GRIDAIR.o `test -f 'GRIDAIR.F' || echo '$(srcdir)/'`GRIDAIR.F

cedric-GRIDAIR.obj: GRIDAIR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-GRIDAIR.obj `if test -f 'GRIDAIR.F'; then $(CYGPATH_W) 'GRIDAIR.F'; else $(CYGPATH_W) '$(srcdir)/GRIDAIR.F'; fi`

cedric-CEDMDV.o: CEDMDV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CEDMDV.o `test -f 'CEDMDV.F' || echo '$(srcdir)/'`CEDMDV.F

cedric-CEDMDV.obj: CEDMDV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CEDMDV.obj `if test -f 'CEDMDV.F'; then $(CYGPATH_W) 'CEDMDV.F'; else $(CYGPATH_W) '$(srcdir)/CEDMDV.F'; fi`

cedric-RELXUV.o: RELXUV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-RELXUV.o `test -f 'RELXUV.F' || echo '$(srcdir)/'`RELXUV.F

cedric-RELXUV.obj: RELXUV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-RELXUV.obj `if test -f 'RELXUV.F'; then $(CYGPATH_W) 'RELXUV.F'; else $(CYGPATH_W) '$(srcdir)/RELXUV.F'; fi`

cedric-PPI_IFIND.o: PPI_IFIND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PPI_IFIND.o `test -f 'PPI_IFIND.F' || echo '$(srcdir)/'`PPI_IFIND.F

cedric-PPI_IFIND.obj: PPI_IFIND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PPI_IFIND.obj `if test -f 'PPI_IFIND.F'; then $(CYGPATH_W) 'PPI_IFIND.F'; else $(CYGPATH_W) '$(srcdir)/PPI_IFIND.F'; fi`

cedric-PPI_MAJMIN.o: PPI_MAJMIN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PPI_MAJMIN.o `test -f 'PPI_MAJMIN.F' || echo '$(srcdir)/'`PPI_MAJMIN.F

cedric-PPI_MAJMIN.obj: PPI_MAJMIN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-PPI_MAJMIN.obj `if test -f 'PPI_MAJMIN.F'; then $(CYGPATH_W) 'PPI_MAJMIN.F'; else $(CYGPATH_W) '$(srcdir)/PPI_MAJMIN.F'; fi`

cedric-USTOPO.o: USTOPO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-USTOPO.o `test -f 'USTOPO.F' || echo '$(srcdir)/'`USTOPO.F

cedric-USTOPO.obj: USTOPO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-USTOPO.obj `if test -f 'USTOPO.F'; then $(CYGPATH_W) 'USTOPO.F'; else $(CYGPATH_W) '$(srcdir)/USTOPO.F'; fi`

cedric-RANF.o: RANF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-RANF.o `test -f 'RANF.F' || echo '$(srcdir)/'`RANF.F

cedric-RANF.obj: RANF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-RANF.obj `if test -f 'RANF.F'; then $(CYGPATH_W) 'RANF.F'; else $(CYGPATH_W) '$(srcdir)/RANF.F'; fi`

cedric-SOUND.o: SOUND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SOUND.o `test -f 'SOUND.F' || echo '$(srcdir)/'`SOUND.F

cedric-SOUND.obj: SOUND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SOUND.obj `if test -f 'SOUND.F'; then $(CYGPATH_W) 'SOUND.F'; else $(CYGPATH_W) '$(srcdir)/SOUND.F'; fi`

cedric-DIVZERO.o: DIVZERO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DIVZERO.o `test -f 'DIVZERO.F' || echo '$(srcdir)/'`DIVZERO.F

cedric-DIVZERO.obj: DIVZERO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DIVZERO.obj `if test -f 'DIVZERO.F'; then $(CYGPATH_W) 'DIVZERO.F'; else $(CYGPATH_W) '$(srcdir)/DIVZERO.F'; fi`

cedric-ROVECT.o: ROVECT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-ROVECT.o `test -f 'ROVECT.F' || echo '$(srcdir)/'`ROVECT.F

cedric-ROVECT.obj: ROVECT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-ROVECT.obj `if test -f 'ROVECT.F'; then $(CYGPATH_W) 'ROVECT.F'; else $(CYGPATH_W) '$(srcdir)/ROVECT.F'; fi`

cedric-RVTOPO.o: RVTOPO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-RVTOPO.o `test -f 'RVTOPO.F' || echo '$(srcdir)/'`RVTOPO.F

cedric-RVTOPO.obj: RVTOPO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-RVTOPO.obj `if test -f 'RVTOPO.F'; then $(CYGPATH_W) 'RVTOPO.F'; else $(CYGPATH_W) '$(srcdir)/RVTOPO.F'; fi`

cedric-COINTRP.o: COINTRP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COINTRP.o `test -f 'COINTRP.F' || echo '$(srcdir)/'`COINTRP.F

cedric-COINTRP.obj: COINTRP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-COINTRP.obj `if test -f 'COINTRP.F'; then $(CYGPATH_W) 'COINTRP.F'; else $(CYGPATH_W) '$(srcdir)/COINTRP.F'; fi`

cedric-ICONSC.o: ICONSC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-ICONSC.o `test -f 'ICONSC.F' || echo '$(srcdir)/'`ICONSC.F

cedric-ICONSC.obj: ICONSC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-ICONSC.obj `if test -f 'ICONSC.F'; then $(CYGPATH_W) 'ICONSC.F'; else $(CYGPATH_W) '$(srcdir)/ICONSC.F'; fi`

cedric-AIRACCUM.o: AIRACCUM.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-AIRACCUM.o `test -f 'AIRACCUM.F' || echo '$(srcdir)/'`AIRACCUM.F

cedric-AIRACCUM.obj: AIRACCUM.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-AIRACCUM.obj `if test -f 'AIRACCUM.F'; then $(CYGPATH_W) 'AIRACCUM.F'; else $(CYGPATH_W) '$(srcdir)/AIRACCUM.F'; fi`

cedric-AIROUT.o: AIROUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-AIROUT.o `test -f 'AIROUT.F' || echo '$(srcdir)/'`AIROUT.F

cedric-AIROUT.obj: AIROUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-AIROUT.obj `if test -f 'AIROUT.F'; then $(CYGPATH_W) 'AIROUT.F'; else $(CYGPATH_W) '$(srcdir)/AIROUT.F'; fi`

cedric-LAPSOL.o: LAPSOL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LAPSOL.o `test -f 'LAPSOL.F' || echo '$(srcdir)/'`LAPSOL.F

cedric-LAPSOL.obj: LAPSOL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-LAPSOL.obj `if test -f 'LAPSOL.F'; then $(CYGPATH_W) 'LAPSOL.F'; else $(CYGPATH_W) '$(srcdir)/LAPSOL.F'; fi`

cedric-CORCAL.o: CORCAL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CORCAL.o `test -f 'CORCAL.F' || echo '$(srcdir)/'`CORCAL.F

cedric-CORCAL.obj: CORCAL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CORCAL.obj `if test -f 'CORCAL.F'; then $(CYGPATH_W) 'CORCAL.F'; else $(CYGPATH_W) '$(srcdir)/CORCAL.F'; fi`

cedric-BLDDES.o: BLDDES.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-BLDDES.o `test -f 'BLDDES.F' || echo '$(srcdir)/'`BLDDES.F

cedric-BLDDES.obj: BLDDES.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-BLDDES.obj `if test -f 'BLDDES.F'; then $(CYGPATH_W) 'BLDDES.F'; else $(CYGPATH_W) '$(srcdir)/BLDDES.F'; fi`

cedric-REDHED.o: REDHED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-REDHED.o `test -f 'REDHED.F' || echo '$(srcdir)/'`REDHED.F

cedric-REDHED.obj: REDHED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-REDHED.obj `if test -f 'REDHED.F'; then $(CYGPATH_W) 'REDHED.F'; else $(CYGPATH_W) '$(srcdir)/REDHED.F'; fi`

cedric-UNFSLP.o: UNFSLP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-UNFSLP.o `test -f 'UNFSLP.F' || echo '$(srcdir)/'`UNFSLP.F

cedric-UNFSLP.obj: UNFSLP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-UNFSLP.obj `if test -f 'UNFSLP.F'; then $(CYGPATH_W) 'UNFSLP.F'; else $(CYGPATH_W) '$(srcdir)/UNFSLP.F'; fi`

cedric-DIFADV.o: DIFADV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DIFADV.o `test -f 'DIFADV.F' || echo '$(srcdir)/'`DIFADV.F

cedric-DIFADV.obj: DIFADV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DIFADV.obj `if test -f 'DIFADV.F'; then $(CYGPATH_W) 'DIFADV.F'; else $(CYGPATH_W) '$(srcdir)/DIFADV.F'; fi`

cedric-DOSHFT.o: DOSHFT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DOSHFT.o `test -f 'DOSHFT.F' || echo '$(srcdir)/'`DOSHFT.F

cedric-DOSHFT.obj: DOSHFT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DOSHFT.obj `if test -f 'DOSHFT.F'; then $(CYGPATH_W) 'DOSHFT.F'; else $(CYGPATH_W) '$(srcdir)/DOSHFT.F'; fi`

cedric-DMPCHAR.o: DMPCHAR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DMPCHAR.o `test -f 'DMPCHAR.F' || echo '$(srcdir)/'`DMPCHAR.F

cedric-DMPCHAR.obj: DMPCHAR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DMPCHAR.obj `if test -f 'DMPCHAR.F'; then $(CYGPATH_W) 'DMPCHAR.F'; else $(CYGPATH_W) '$(srcdir)/DMPCHAR.F'; fi`

cedric-UNPFOR.o: UNPFOR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-UNPFOR.o `test -f 'UNPFOR.F' || echo '$(srcdir)/'`UNPFOR.F

cedric-UNPFOR.obj: UNPFOR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-UNPFOR.obj `if test -f 'UNPFOR.F'; then $(CYGPATH_W) 'UNPFOR.F'; else $(CYGPATH_W) '$(srcdir)/UNPFOR.F'; fi`

cedric-SYNNER.o: SYNNER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SYNNER.o `test -f 'SYNNER.F' || echo '$(srcdir)/'`SYNNER.F

cedric-SYNNER.obj: SYNNER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-SYNNER.obj `if test -f 'SYNNER.F'; then $(CYGPATH_W) 'SYNNER.F'; else $(CYGPATH_W) '$(srcdir)/SYNNER.F'; fi`

cedric-DSPSYN.o: DSPSYN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DSPSYN.o `test -f 'DSPSYN.F' || echo '$(srcdir)/'`DSPSYN.F

cedric-DSPSYN.obj: DSPSYN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DSPSYN.obj `if test -f 'DSPSYN.F'; then $(CYGPATH_W) 'DSPSYN.F'; else $(CYGPATH_W) '$(srcdir)/DSPSYN.F'; fi`

cedric-IDSYND.o: IDSYND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IDSYND.o `test -f 'IDSYND.F' || echo '$(srcdir)/'`IDSYND.F

cedric-IDSYND.obj: IDSYND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IDSYND.obj `if test -f 'IDSYND.F'; then $(CYGPATH_W) 'IDSYND.F'; else $(CYGPATH_W) '$(srcdir)/IDSYND.F'; fi`

cedric-THERMO.o: THERMO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-THERMO.o `test -f 'THERMO.F' || echo '$(srcdir)/'`THERMO.F

cedric-THERMO.obj: THERMO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-THERMO.obj `if test -f 'THERMO.F'; then $(CYGPATH_W) 'THERMO.F'; else $(CYGPATH_W) '$(srcdir)/THERMO.F'; fi`

cedric-CALUVW.o: CALUVW.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CALUVW.o `test -f 'CALUVW.F' || echo '$(srcdir)/'`CALUVW.F

cedric-CALUVW.obj: CALUVW.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-CALUVW.obj `if test -f 'CALUVW.F'; then $(CYGPATH_W) 'CALUVW.F'; else $(CYGPATH_W) '$(srcdir)/CALUVW.F'; fi`

cedric-IABPCK.o: IABPCK.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IABPCK.o `test -f 'IABPCK.F' || echo '$(srcdir)/'`IABPCK.F

cedric-IABPCK.obj: IABPCK.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IABPCK.obj `if test -f 'IABPCK.F'; then $(CYGPATH_W) 'IABPCK.F'; else $(CYGPATH_W) '$(srcdir)/IABPCK.F'; fi`

cedric-IGET16.o: IGET16.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IGET16.o `test -f 'IGET16.F' || echo '$(srcdir)/'`IGET16.F

cedric-IGET16.obj: IGET16.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-IGET16.obj `if test -f 'IGET16.F'; then $(CYGPATH_W) 'IGET16.F'; else $(CYGPATH_W) '$(srcdir)/IGET16.F'; fi`

cedric-KARDIN.o: KARDIN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-KARDIN.o `test -f 'KARDIN.F' || echo '$(srcdir)/'`KARDIN.F

cedric-KARDIN.obj: KARDIN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-KARDIN.obj `if test -f 'KARDIN.F'; then $(CYGPATH_W) 'KARDIN.F'; else $(CYGPATH_W) '$(srcdir)/KARDIN.F'; fi`

cedric-EXPAND.o: EXPAND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-EXPAND.o `test -f 'EXPAND.F' || echo '$(srcdir)/'`EXPAND.F

cedric-EXPAND.obj: EXPAND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-EXPAND.obj `if test -f 'EXPAND.F'; then $(CYGPATH_W) 'EXPAND.F'; else $(CYGPATH_W) '$(srcdir)/EXPAND.F'; fi`

cedric-VALUE.o: VALUE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-VALUE.o `test -f 'VALUE.F' || echo '$(srcdir)/'`VALUE.F

cedric-VALUE.obj: VALUE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-VALUE.obj `if test -f 'VALUE.F'; then $(CYGPATH_W) 'VALUE.F'; else $(CYGPATH_W) '$(srcdir)/VALUE.F'; fi`

cedric-DEFINE.o: DEFINE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DEFINE.o `test -f 'DEFINE.F' || echo '$(srcdir)/'`DEFINE.F

cedric-DEFINE.obj: DEFINE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-DEFINE.obj `if test -f 'DEFINE.F'; then $(CYGPATH_W) 'DEFINE.F'; else $(CYGPATH_W) '$(srcdir)/DEFINE.F'; fi`

cedric-RDKARD.o: RDKARD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-RDKARD.o `test -f 'RDKARD.F' || echo '$(srcdir)/'`RDKARD.F

cedric-RDKARD.obj: RDKARD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-RDKARD.obj `if test -f 'RDKARD.F'; then $(CYGPATH_W) 'RDKARD.F'; else $(CYGPATH_W) '$(srcdir)/RDKARD.F'; fi`

gcedric-CEDRIC.o: CEDRIC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CEDRIC.o `test -f 'CEDRIC.F' || echo '$(srcdir)/'`CEDRIC.F

gcedric-CEDRIC.obj: CEDRIC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CEDRIC.obj `if test -f 'CEDRIC.F'; then $(CYGPATH_W) 'CEDRIC.F'; else $(CYGPATH_W) '$(srcdir)/CEDRIC.F'; fi`

gcedric-SYMINT.o: SYMINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SYMINT.o `test -f 'SYMINT.F' || echo '$(srcdir)/'`SYMINT.F

gcedric-SYMINT.obj: SYMINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SYMINT.obj `if test -f 'SYMINT.F'; then $(CYGPATH_W) 'SYMINT.F'; else $(CYGPATH_W) '$(srcdir)/SYMINT.F'; fi`

gcedric-VERSOUT.o: VERSOUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-VERSOUT.o `test -f 'VERSOUT.F' || echo '$(srcdir)/'`VERSOUT.F

gcedric-VERSOUT.obj: VERSOUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-VERSOUT.obj `if test -f 'VERSOUT.F'; then $(CYGPATH_W) 'VERSOUT.F'; else $(CYGPATH_W) '$(srcdir)/VERSOUT.F'; fi`

gcedric-CEDUTIL.o: CEDUTIL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CEDUTIL.o `test -f 'CEDUTIL.F' || echo '$(srcdir)/'`CEDUTIL.F

gcedric-CEDUTIL.obj: CEDUTIL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CEDUTIL.obj `if test -f 'CEDUTIL.F'; then $(CYGPATH_W) 'CEDUTIL.F'; else $(CYGPATH_W) '$(srcdir)/CEDUTIL.F'; fi`

gcedric-LOCATE.o: LOCATE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LOCATE.o `test -f 'LOCATE.F' || echo '$(srcdir)/'`LOCATE.F

gcedric-LOCATE.obj: LOCATE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LOCATE.obj `if test -f 'LOCATE.F'; then $(CYGPATH_W) 'LOCATE.F'; else $(CYGPATH_W) '$(srcdir)/LOCATE.F'; fi`

gcedric-CEDERX.o: CEDERX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CEDERX.o `test -f 'CEDERX.F' || echo '$(srcdir)/'`CEDERX.F

gcedric-CEDERX.obj: CEDERX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CEDERX.obj `if test -f 'CEDERX.F'; then $(CYGPATH_W) 'CEDERX.F'; else $(CYGPATH_W) '$(srcdir)/CEDERX.F'; fi`

gcedric-FLUSH_STDOUT.o: FLUSH_STDOUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FLUSH_STDOUT.o `test -f 'FLUSH_STDOUT.F' || echo '$(srcdir)/'`FLUSH_STDOUT.F

gcedric-FLUSH_STDOUT.obj: FLUSH_STDOUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FLUSH_STDOUT.obj `if test -f 'FLUSH_STDOUT.F'; then $(CYGPATH_W) 'FLUSH_STDOUT.F'; else $(CYGPATH_W) '$(srcdir)/FLUSH_STDOUT.F'; fi`

gcedric-SETBAD.o: SETBAD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SETBAD.o `test -f 'SETBAD.F' || echo '$(srcdir)/'`SETBAD.F

gcedric-SETBAD.obj: SETBAD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SETBAD.obj `if test -f 'SETBAD.F'; then $(CYGPATH_W) 'SETBAD.F'; else $(CYGPATH_W) '$(srcdir)/SETBAD.F'; fi`

gcedric-CHANGE.o: CHANGE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CHANGE.o `test -f 'CHANGE.F' || echo '$(srcdir)/'`CHANGE.F

gcedric-CHANGE.obj: CHANGE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CHANGE.obj `if test -f 'CHANGE.F'; then $(CYGPATH_W) 'CHANGE.F'; else $(CYGPATH_W) '$(srcdir)/CHANGE.F'; fi`

gcedric-COMMNT.o: COMMNT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COMMNT.o `test -f 'COMMNT.F' || echo '$(srcdir)/'`COMMNT.F

gcedric-COMMNT.obj: COMMNT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COMMNT.obj `if test -f 'COMMNT.F'; then $(CYGPATH_W) 'COMMNT.F'; else $(CYGPATH_W) '$(srcdir)/COMMNT.F'; fi`

gcedric-INTGRT.o: INTGRT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-INTGRT.o `test -f 'INTGRT.F' || echo '$(srcdir)/'`INTGRT.F

gcedric-INTGRT.obj: INTGRT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-INTGRT.obj `if test -f 'INTGRT.F'; then $(CYGPATH_W) 'INTGRT.F'; else $(CYGPATH_W) '$(srcdir)/INTGRT.F'; fi`

gcedric-CREATE.o: CREATE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CREATE.o `test -f 'CREATE.F' || echo '$(srcdir)/'`CREATE.F

gcedric-CREATE.obj: CREATE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CREATE.obj `if test -f 'CREATE.F'; then $(CYGPATH_W) 'CREATE.F'; else $(CYGPATH_W) '$(srcdir)/CREATE.F'; fi`

gcedric-FILTER.o: FILTER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FILTER.o `test -f 'FILTER.F' || echo '$(srcdir)/'`FILTER.F

gcedric-FILTER.obj: FILTER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FILTER.obj `if test -f 'FILTER.F'; then $(CYGPATH_W) 'FILTER.F'; else $(CYGPATH_W) '$(srcdir)/FILTER.F'; fi`

gcedric-FIXIDS.o: FIXIDS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FIXIDS.o `test -f 'FIXIDS.F' || echo '$(srcdir)/'`FIXIDS.F

gcedric-FIXIDS.obj: FIXIDS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FIXIDS.obj `if test -f 'FIXIDS.F'; then $(CYGPATH_W) 'FIXIDS.F'; else $(CYGPATH_W) '$(srcdir)/FIXIDS.F'; fi`

gcedric-READVL.o: READVL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-READVL.o `test -f 'READVL.F' || echo '$(srcdir)/'`READVL.F

gcedric-READVL.obj: READVL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-READVL.obj `if test -f 'READVL.F'; then $(CYGPATH_W) 'READVL.F'; else $(CYGPATH_W) '$(srcdir)/READVL.F'; fi`

gcedric-PATCHR.o: PATCHR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PATCHR.o `test -f 'PATCHR.F' || echo '$(srcdir)/'`PATCHR.F

gcedric-PATCHR.obj: PATCHR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PATCHR.obj `if test -f 'PATCHR.F'; then $(CYGPATH_W) 'PATCHR.F'; else $(CYGPATH_W) '$(srcdir)/PATCHR.F'; fi`

gcedric-STATS.o: STATS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-STATS.o `test -f 'STATS.F' || echo '$(srcdir)/'`STATS.F

gcedric-STATS.obj: STATS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-STATS.obj `if test -f 'STATS.F'; then $(CYGPATH_W) 'STATS.F'; else $(CYGPATH_W) '$(srcdir)/STATS.F'; fi`

gcedric-STATZI.o: STATZI.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-STATZI.o `test -f 'STATZI.F' || echo '$(srcdir)/'`STATZI.F

gcedric-STATZI.obj: STATZI.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-STATZI.obj `if test -f 'STATZI.F'; then $(CYGPATH_W) 'STATZI.F'; else $(CYGPATH_W) '$(srcdir)/STATZI.F'; fi`

gcedric-STINT.o: STINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-STINT.o `test -f 'STINT.F' || echo '$(srcdir)/'`STINT.F

gcedric-STINT.obj: STINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-STINT.obj `if test -f 'STINT.F'; then $(CYGPATH_W) 'STINT.F'; else $(CYGPATH_W) '$(srcdir)/STINT.F'; fi`

gcedric-FUNCTN.o: FUNCTN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FUNCTN.o `test -f 'FUNCTN.F' || echo '$(srcdir)/'`FUNCTN.F

gcedric-FUNCTN.obj: FUNCTN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FUNCTN.obj `if test -f 'FUNCTN.F'; then $(CYGPATH_W) 'FUNCTN.F'; else $(CYGPATH_W) '$(srcdir)/FUNCTN.F'; fi`

gcedric-FUNCTS.o: FUNCTS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FUNCTS.o `test -f 'FUNCTS.F' || echo '$(srcdir)/'`FUNCTS.F

gcedric-FUNCTS.obj: FUNCTS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FUNCTS.obj `if test -f 'FUNCTS.F'; then $(CYGPATH_W) 'FUNCTS.F'; else $(CYGPATH_W) '$(srcdir)/FUNCTS.F'; fi`

gcedric-DSFSTK.o: DSFSTK.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DSFSTK.o `test -f 'DSFSTK.F' || echo '$(srcdir)/'`DSFSTK.F

gcedric-DSFSTK.obj: DSFSTK.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DSFSTK.obj `if test -f 'DSFSTK.F'; then $(CYGPATH_W) 'DSFSTK.F'; else $(CYGPATH_W) '$(srcdir)/DSFSTK.F'; fi`

gcedric-WINDFD.o: WINDFD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-WINDFD.o `test -f 'WINDFD.F' || echo '$(srcdir)/'`WINDFD.F

gcedric-WINDFD.obj: WINDFD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-WINDFD.obj `if test -f 'WINDFD.F'; then $(CYGPATH_W) 'WINDFD.F'; else $(CYGPATH_W) '$(srcdir)/WINDFD.F'; fi`

gcedric-TRANSF.o: TRANSF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-TRANSF.o `test -f 'TRANSF.F' || echo '$(srcdir)/'`TRANSF.F

gcedric-TRANSF.obj: TRANSF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-TRANSF.obj `if test -f 'TRANSF.F'; then $(CYGPATH_W) 'TRANSF.F'; else $(CYGPATH_W) '$(srcdir)/TRANSF.F'; fi`

gcedric-DIGITP.o: DIGITP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DIGITP.o `test -f 'DIGITP.F' || echo '$(srcdir)/'`DIGITP.F

gcedric-DIGITP.obj: DIGITP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DIGITP.obj `if test -f 'DIGITP.F'; then $(CYGPATH_W) 'DIGITP.F'; else $(CYGPATH_W) '$(srcdir)/DIGITP.F'; fi`

gcedric-REMAP.o: REMAP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-REMAP.o `test -f 'REMAP.F' || echo '$(srcdir)/'`REMAP.F

gcedric-REMAP.obj: REMAP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-REMAP.obj `if test -f 'REMAP.F'; then $(CYGPATH_W) 'REMAP.F'; else $(CYGPATH_W) '$(srcdir)/REMAP.F'; fi`

gcedric-SAMPLR.o: SAMPLR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SAMPLR.o `test -f 'SAMPLR.F' || echo '$(srcdir)/'`SAMPLR.F

gcedric-SAMPLR.obj: SAMPLR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SAMPLR.obj `if test -f 'SAMPLR.F'; then $(CYGPATH_W) 'SAMPLR.F'; else $(CYGPATH_W) '$(srcdir)/SAMPLR.F'; fi`

gcedric-SHFTER.o: SHFTER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SHFTER.o `test -f 'SHFTER.F' || echo '$(srcdir)/'`SHFTER.F

gcedric-SHFTER.obj: SHFTER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SHFTER.obj `if test -f 'SHFTER.F'; then $(CYGPATH_W) 'SHFTER.F'; else $(CYGPATH_W) '$(srcdir)/SHFTER.F'; fi`

gcedric-SYNDRV.o: SYNDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SYNDRV.o `test -f 'SYNDRV.F' || echo '$(srcdir)/'`SYNDRV.F

gcedric-SYNDRV.obj: SYNDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SYNDRV.obj `if test -f 'SYNDRV.F'; then $(CYGPATH_W) 'SYNDRV.F'; else $(CYGPATH_W) '$(srcdir)/SYNDRV.F'; fi`

gcedric-DESYNR.o: DESYNR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DESYNR.o `test -f 'DESYNR.F' || echo '$(srcdir)/'`DESYNR.F

gcedric-DESYNR.obj: DESYNR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DESYNR.obj `if test -f 'DESYNR.F'; then $(CYGPATH_W) 'DESYNR.F'; else $(CYGPATH_W) '$(srcdir)/DESYNR.F'; fi`

gcedric-UNFOLD.o: UNFOLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-UNFOLD.o `test -f 'UNFOLD.F' || echo '$(srcdir)/'`UNFOLD.F

gcedric-UNFOLD.obj: UNFOLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-UNFOLD.obj `if test -f 'UNFOLD.F'; then $(CYGPATH_W) 'UNFOLD.F'; else $(CYGPATH_W) '$(srcdir)/UNFOLD.F'; fi`

gcedric-WINDIJ.o: WINDIJ.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-WINDIJ.o `test -f 'WINDIJ.F' || echo '$(srcdir)/'`WINDIJ.F

gcedric-WINDIJ.obj: WINDIJ.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-WINDIJ.obj `if test -f 'WINDIJ.F'; then $(CYGPATH_W) 'WINDIJ.F'; else $(CYGPATH_W) '$(srcdir)/WINDIJ.F'; fi`

gcedric-WRITVL.o: WRITVL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-WRITVL.o `test -f 'WRITVL.F' || echo '$(srcdir)/'`WRITVL.F

gcedric-WRITVL.obj: WRITVL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-WRITVL.obj `if test -f 'WRITVL.F'; then $(CYGPATH_W) 'WRITVL.F'; else $(CYGPATH_W) '$(srcdir)/WRITVL.F'; fi`

gcedric-CROSS.o: CROSS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CROSS.o `test -f 'CROSS.F' || echo '$(srcdir)/'`CROSS.F

gcedric-CROSS.obj: CROSS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CROSS.obj `if test -f 'CROSS.F'; then $(CYGPATH_W) 'CROSS.F'; else $(CYGPATH_W) '$(srcdir)/CROSS.F'; fi`

gcedric-REGRES.o: REGRES.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-REGRES.o `test -f 'REGRES.F' || echo '$(srcdir)/'`REGRES.F

gcedric-REGRES.obj: REGRES.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-REGRES.obj `if test -f 'REGRES.F'; then $(CYGPATH_W) 'REGRES.F'; else $(CYGPATH_W) '$(srcdir)/REGRES.F'; fi`

gcedric-LAPDRV.o: LAPDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LAPDRV.o `test -f 'LAPDRV.F' || echo '$(srcdir)/'`LAPDRV.F

gcedric-LAPDRV.obj: LAPDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LAPDRV.obj `if test -f 'LAPDRV.F'; then $(CYGPATH_W) 'LAPDRV.F'; else $(CYGPATH_W) '$(srcdir)/LAPDRV.F'; fi`

gcedric-RLXDRV.o: RLXDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RLXDRV.o `test -f 'RLXDRV.F' || echo '$(srcdir)/'`RLXDRV.F

gcedric-RLXDRV.obj: RLXDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RLXDRV.obj `if test -f 'RLXDRV.F'; then $(CYGPATH_W) 'RLXDRV.F'; else $(CYGPATH_W) '$(srcdir)/RLXDRV.F'; fi`

gcedric-MS2DRV.o: MS2DRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-MS2DRV.o `test -f 'MS2DRV.F' || echo '$(srcdir)/'`MS2DRV.F

gcedric-MS2DRV.obj: MS2DRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-MS2DRV.obj `if test -f 'MS2DRV.F'; then $(CYGPATH_W) 'MS2DRV.F'; else $(CYGPATH_W) '$(srcdir)/MS2DRV.F'; fi`

gcedric-COORD.o: COORD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COORD.o `test -f 'COORD.F' || echo '$(srcdir)/'`COORD.F

gcedric-COORD.obj: COORD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COORD.obj `if test -f 'COORD.F'; then $(CYGPATH_W) 'COORD.F'; else $(CYGPATH_W) '$(srcdir)/COORD.F'; fi`

gcedric-FLAT.o: FLAT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FLAT.o `test -f 'FLAT.F' || echo '$(srcdir)/'`FLAT.F

gcedric-FLAT.obj: FLAT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FLAT.obj `if test -f 'FLAT.F'; then $(CYGPATH_W) 'FLAT.F'; else $(CYGPATH_W) '$(srcdir)/FLAT.F'; fi`

gcedric-READAIR.o: READAIR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-READAIR.o `test -f 'READAIR.F' || echo '$(srcdir)/'`READAIR.F

gcedric-READAIR.obj: READAIR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-READAIR.obj `if test -f 'READAIR.F'; then $(CYGPATH_W) 'READAIR.F'; else $(CYGPATH_W) '$(srcdir)/READAIR.F'; fi`

gcedric-READSTA.o: READSTA.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-READSTA.o `test -f 'READSTA.F' || echo '$(srcdir)/'`READSTA.F

gcedric-READSTA.obj: READSTA.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-READSTA.obj `if test -f 'READSTA.F'; then $(CYGPATH_W) 'READSTA.F'; else $(CYGPATH_W) '$(srcdir)/READSTA.F'; fi`

gcedric-LAT_LON.o: LAT_LON.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LAT_LON.o `test -f 'LAT_LON.F' || echo '$(srcdir)/'`LAT_LON.F

gcedric-LAT_LON.obj: LAT_LON.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LAT_LON.obj `if test -f 'LAT_LON.F'; then $(CYGPATH_W) 'LAT_LON.F'; else $(CYGPATH_W) '$(srcdir)/LAT_LON.F'; fi`

gcedric-VADDRV.o: VADDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-VADDRV.o `test -f 'VADDRV.F' || echo '$(srcdir)/'`VADDRV.F

gcedric-VADDRV.obj: VADDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-VADDRV.obj `if test -f 'VADDRV.F'; then $(CYGPATH_W) 'VADDRV.F'; else $(CYGPATH_W) '$(srcdir)/VADDRV.F'; fi`

gcedric-SAVVAD.o: SAVVAD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SAVVAD.o `test -f 'SAVVAD.F' || echo '$(srcdir)/'`SAVVAD.F

gcedric-SAVVAD.obj: SAVVAD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SAVVAD.obj `if test -f 'SAVVAD.F'; then $(CYGPATH_W) 'SAVVAD.F'; else $(CYGPATH_W) '$(srcdir)/SAVVAD.F'; fi`

gcedric-GETNLD.o: GETNLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GETNLD.o `test -f 'GETNLD.F' || echo '$(srcdir)/'`GETNLD.F

gcedric-GETNLD.obj: GETNLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GETNLD.obj `if test -f 'GETNLD.F'; then $(CYGPATH_W) 'GETNLD.F'; else $(CYGPATH_W) '$(srcdir)/GETNLD.F'; fi`

gcedric-GETLMA.o: GETLMA.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GETLMA.o `test -f 'GETLMA.F' || echo '$(srcdir)/'`GETLMA.F

gcedric-GETLMA.obj: GETLMA.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GETLMA.obj `if test -f 'GETLMA.F'; then $(CYGPATH_W) 'GETLMA.F'; else $(CYGPATH_W) '$(srcdir)/GETLMA.F'; fi`

gcedric-COPCX.o: COPCX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COPCX.o `test -f 'COPCX.F' || echo '$(srcdir)/'`COPCX.F

gcedric-COPCX.obj: COPCX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COPCX.obj `if test -f 'COPCX.F'; then $(CYGPATH_W) 'COPCX.F'; else $(CYGPATH_W) '$(srcdir)/COPCX.F'; fi`

gcedric-COPRX.o: COPRX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COPRX.o `test -f 'COPRX.F' || echo '$(srcdir)/'`COPRX.F

gcedric-COPRX.obj: COPRX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COPRX.obj `if test -f 'COPRX.F'; then $(CYGPATH_W) 'COPRX.F'; else $(CYGPATH_W) '$(srcdir)/COPRX.F'; fi`

gcedric-COPIX.o: COPIX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COPIX.o `test -f 'COPIX.F' || echo '$(srcdir)/'`COPIX.F

gcedric-COPIX.obj: COPIX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COPIX.obj `if test -f 'COPIX.F'; then $(CYGPATH_W) 'COPIX.F'; else $(CYGPATH_W) '$(srcdir)/COPIX.F'; fi`

gcedric-COPIRX.o: COPIRX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COPIRX.o `test -f 'COPIRX.F' || echo '$(srcdir)/'`COPIRX.F

gcedric-COPIRX.obj: COPIRX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COPIRX.obj `if test -f 'COPIRX.F'; then $(CYGPATH_W) 'COPIRX.F'; else $(CYGPATH_W) '$(srcdir)/COPIRX.F'; fi`

gcedric-COPCIX.o: COPCIX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COPCIX.o `test -f 'COPCIX.F' || echo '$(srcdir)/'`COPCIX.F

gcedric-COPCIX.obj: COPCIX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COPCIX.obj `if test -f 'COPCIX.F'; then $(CYGPATH_W) 'COPCIX.F'; else $(CYGPATH_W) '$(srcdir)/COPCIX.F'; fi`

gcedric-CONCHAR.o: CONCHAR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CONCHAR.o `test -f 'CONCHAR.F' || echo '$(srcdir)/'`CONCHAR.F

gcedric-CONCHAR.obj: CONCHAR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CONCHAR.obj `if test -f 'CONCHAR.F'; then $(CYGPATH_W) 'CONCHAR.F'; else $(CYGPATH_W) '$(srcdir)/CONCHAR.F'; fi`

gcedric-SELDEV.o: SELDEV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SELDEV.o `test -f 'SELDEV.F' || echo '$(srcdir)/'`SELDEV.F

gcedric-SELDEV.obj: SELDEV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SELDEV.obj `if test -f 'SELDEV.F'; then $(CYGPATH_W) 'SELDEV.F'; else $(CYGPATH_W) '$(srcdir)/SELDEV.F'; fi`

gcedric-IFINDC.o: IFINDC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IFINDC.o `test -f 'IFINDC.F' || echo '$(srcdir)/'`IFINDC.F

gcedric-IFINDC.obj: IFINDC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IFINDC.obj `if test -f 'IFINDC.F'; then $(CYGPATH_W) 'IFINDC.F'; else $(CYGPATH_W) '$(srcdir)/IFINDC.F'; fi`

gcedric-IADFLD.o: IADFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IADFLD.o `test -f 'IADFLD.F' || echo '$(srcdir)/'`IADFLD.F

gcedric-IADFLD.obj: IADFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IADFLD.obj `if test -f 'IADFLD.F'; then $(CYGPATH_W) 'IADFLD.F'; else $(CYGPATH_W) '$(srcdir)/IADFLD.F'; fi`

gcedric-LOCFLDID.o: LOCFLDID.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LOCFLDID.o `test -f 'LOCFLDID.F' || echo '$(srcdir)/'`LOCFLDID.F

gcedric-LOCFLDID.obj: LOCFLDID.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LOCFLDID.obj `if test -f 'LOCFLDID.F'; then $(CYGPATH_W) 'LOCFLDID.F'; else $(CYGPATH_W) '$(srcdir)/LOCFLDID.F'; fi`

gcedric-LOCINT.o: LOCINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LOCINT.o `test -f 'LOCINT.F' || echo '$(srcdir)/'`LOCINT.F

gcedric-LOCINT.obj: LOCINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LOCINT.obj `if test -f 'LOCINT.F'; then $(CYGPATH_W) 'LOCINT.F'; else $(CYGPATH_W) '$(srcdir)/LOCINT.F'; fi`

gcedric-LOCFLD.o: LOCFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LOCFLD.o `test -f 'LOCFLD.F' || echo '$(srcdir)/'`LOCFLD.F

gcedric-LOCFLD.obj: LOCFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LOCFLD.obj `if test -f 'LOCFLD.F'; then $(CYGPATH_W) 'LOCFLD.F'; else $(CYGPATH_W) '$(srcdir)/LOCFLD.F'; fi`

gcedric-FETCHD.o: FETCHD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FETCHD.o `test -f 'FETCHD.F' || echo '$(srcdir)/'`FETCHD.F

gcedric-FETCHD.obj: FETCHD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FETCHD.obj `if test -f 'FETCHD.F'; then $(CYGPATH_W) 'FETCHD.F'; else $(CYGPATH_W) '$(srcdir)/FETCHD.F'; fi`

gcedric-FETCHZ.o: FETCHZ.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FETCHZ.o `test -f 'FETCHZ.F' || echo '$(srcdir)/'`FETCHZ.F

gcedric-FETCHZ.obj: FETCHZ.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FETCHZ.obj `if test -f 'FETCHZ.F'; then $(CYGPATH_W) 'FETCHZ.F'; else $(CYGPATH_W) '$(srcdir)/FETCHZ.F'; fi`

gcedric-PLACED.o: PLACED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLACED.o `test -f 'PLACED.F' || echo '$(srcdir)/'`PLACED.F

gcedric-PLACED.obj: PLACED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLACED.obj `if test -f 'PLACED.F'; then $(CYGPATH_W) 'PLACED.F'; else $(CYGPATH_W) '$(srcdir)/PLACED.F'; fi`

gcedric-LL2XY.o: LL2XY.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LL2XY.o `test -f 'LL2XY.F' || echo '$(srcdir)/'`LL2XY.F

gcedric-LL2XY.obj: LL2XY.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LL2XY.obj `if test -f 'LL2XY.F'; then $(CYGPATH_W) 'LL2XY.F'; else $(CYGPATH_W) '$(srcdir)/LL2XY.F'; fi`

gcedric-LL2XYDRV.o: LL2XYDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LL2XYDRV.o `test -f 'LL2XYDRV.F' || echo '$(srcdir)/'`LL2XYDRV.F

gcedric-LL2XYDRV.obj: LL2XYDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LL2XYDRV.obj `if test -f 'LL2XYDRV.F'; then $(CYGPATH_W) 'LL2XYDRV.F'; else $(CYGPATH_W) '$(srcdir)/LL2XYDRV.F'; fi`

gcedric-LLINTRP.o: LLINTRP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LLINTRP.o `test -f 'LLINTRP.F' || echo '$(srcdir)/'`LLINTRP.F

gcedric-LLINTRP.obj: LLINTRP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LLINTRP.obj `if test -f 'LLINTRP.F'; then $(CYGPATH_W) 'LLINTRP.F'; else $(CYGPATH_W) '$(srcdir)/LLINTRP.F'; fi`

gcedric-XY2LLDRV.o: XY2LLDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-XY2LLDRV.o `test -f 'XY2LLDRV.F' || echo '$(srcdir)/'`XY2LLDRV.F

gcedric-XY2LLDRV.obj: XY2LLDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-XY2LLDRV.obj `if test -f 'XY2LLDRV.F'; then $(CYGPATH_W) 'XY2LLDRV.F'; else $(CYGPATH_W) '$(srcdir)/XY2LLDRV.F'; fi`

gcedric-XY2LL.o: XY2LL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-XY2LL.o `test -f 'XY2LL.F' || echo '$(srcdir)/'`XY2LL.F

gcedric-XY2LL.obj: XY2LL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-XY2LL.obj `if test -f 'XY2LL.F'; then $(CYGPATH_W) 'XY2LL.F'; else $(CYGPATH_W) '$(srcdir)/XY2LL.F'; fi`

gcedric-CONFLD.o: CONFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CONFLD.o `test -f 'CONFLD.F' || echo '$(srcdir)/'`CONFLD.F

gcedric-CONFLD.obj: CONFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CONFLD.obj `if test -f 'CONFLD.F'; then $(CYGPATH_W) 'CONFLD.F'; else $(CYGPATH_W) '$(srcdir)/CONFLD.F'; fi`

gcedric-PCONVG.o: PCONVG.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PCONVG.o `test -f 'PCONVG.F' || echo '$(srcdir)/'`PCONVG.F

gcedric-PCONVG.obj: PCONVG.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PCONVG.obj `if test -f 'PCONVG.F'; then $(CYGPATH_W) 'PCONVG.F'; else $(CYGPATH_W) '$(srcdir)/PCONVG.F'; fi`

gcedric-SHOEDF.o: SHOEDF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SHOEDF.o `test -f 'SHOEDF.F' || echo '$(srcdir)/'`SHOEDF.F

gcedric-SHOEDF.obj: SHOEDF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SHOEDF.obj `if test -f 'SHOEDF.F'; then $(CYGPATH_W) 'SHOEDF.F'; else $(CYGPATH_W) '$(srcdir)/SHOEDF.F'; fi`

gcedric-SHOEDW.o: SHOEDW.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SHOEDW.o `test -f 'SHOEDW.F' || echo '$(srcdir)/'`SHOEDW.F

gcedric-SHOEDW.obj: SHOEDW.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SHOEDW.obj `if test -f 'SHOEDW.F'; then $(CYGPATH_W) 'SHOEDW.F'; else $(CYGPATH_W) '$(srcdir)/SHOEDW.F'; fi`

gcedric-EXTEND.o: EXTEND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-EXTEND.o `test -f 'EXTEND.F' || echo '$(srcdir)/'`EXTEND.F

gcedric-EXTEND.obj: EXTEND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-EXTEND.obj `if test -f 'EXTEND.F'; then $(CYGPATH_W) 'EXTEND.F'; else $(CYGPATH_W) '$(srcdir)/EXTEND.F'; fi`

gcedric-SETAXS.o: SETAXS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SETAXS.o `test -f 'SETAXS.F' || echo '$(srcdir)/'`SETAXS.F

gcedric-SETAXS.obj: SETAXS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SETAXS.obj `if test -f 'SETAXS.F'; then $(CYGPATH_W) 'SETAXS.F'; else $(CYGPATH_W) '$(srcdir)/SETAXS.F'; fi`

gcedric-GET3D.o: GET3D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GET3D.o `test -f 'GET3D.F' || echo '$(srcdir)/'`GET3D.F

gcedric-GET3D.obj: GET3D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GET3D.obj `if test -f 'GET3D.F'; then $(CYGPATH_W) 'GET3D.F'; else $(CYGPATH_W) '$(srcdir)/GET3D.F'; fi`

gcedric-PUT3D.o: PUT3D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PUT3D.o `test -f 'PUT3D.F' || echo '$(srcdir)/'`PUT3D.F

gcedric-PUT3D.obj: PUT3D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PUT3D.obj `if test -f 'PUT3D.F'; then $(CYGPATH_W) 'PUT3D.F'; else $(CYGPATH_W) '$(srcdir)/PUT3D.F'; fi`

gcedric-FILL3D.o: FILL3D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FILL3D.o `test -f 'FILL3D.F' || echo '$(srcdir)/'`FILL3D.F

gcedric-FILL3D.obj: FILL3D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FILL3D.obj `if test -f 'FILL3D.F'; then $(CYGPATH_W) 'FILL3D.F'; else $(CYGPATH_W) '$(srcdir)/FILL3D.F'; fi`

gcedric-DOFILT.o: DOFILT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DOFILT.o `test -f 'DOFILT.F' || echo '$(srcdir)/'`DOFILT.F

gcedric-DOFILT.obj: DOFILT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DOFILT.obj `if test -f 'DOFILT.F'; then $(CYGPATH_W) 'DOFILT.F'; else $(CYGPATH_W) '$(srcdir)/DOFILT.F'; fi`

gcedric-T5FLTR.o: T5FLTR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-T5FLTR.o `test -f 'T5FLTR.F' || echo '$(srcdir)/'`T5FLTR.F

gcedric-T5FLTR.obj: T5FLTR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-T5FLTR.obj `if test -f 'T5FLTR.F'; then $(CYGPATH_W) 'T5FLTR.F'; else $(CYGPATH_W) '$(srcdir)/T5FLTR.F'; fi`

gcedric-NEWHED.o: NEWHED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-NEWHED.o `test -f 'NEWHED.F' || echo '$(srcdir)/'`NEWHED.F

gcedric-NEWHED.obj: NEWHED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-NEWHED.obj `if test -f 'NEWHED.F'; then $(CYGPATH_W) 'NEWHED.F'; else $(CYGPATH_W) '$(srcdir)/NEWHED.F'; fi`

gcedric-UPDHED.o: UPDHED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-UPDHED.o `test -f 'UPDHED.F' || echo '$(srcdir)/'`UPDHED.F

gcedric-UPDHED.obj: UPDHED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-UPDHED.obj `if test -f 'UPDHED.F'; then $(CYGPATH_W) 'UPDHED.F'; else $(CYGPATH_W) '$(srcdir)/UPDHED.F'; fi`

gcedric-CRTMAP.o: CRTMAP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CRTMAP.o `test -f 'CRTMAP.F' || echo '$(srcdir)/'`CRTMAP.F

gcedric-CRTMAP.obj: CRTMAP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CRTMAP.obj `if test -f 'CRTMAP.F'; then $(CYGPATH_W) 'CRTMAP.F'; else $(CYGPATH_W) '$(srcdir)/CRTMAP.F'; fi`

gcedric-DSINIT.o: DSINIT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DSINIT.o `test -f 'DSINIT.F' || echo '$(srcdir)/'`DSINIT.F

gcedric-DSINIT.obj: DSINIT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DSINIT.obj `if test -f 'DSINIT.F'; then $(CYGPATH_W) 'DSINIT.F'; else $(CYGPATH_W) '$(srcdir)/DSINIT.F'; fi`

gcedric-RESHUF.o: RESHUF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RESHUF.o `test -f 'RESHUF.F' || echo '$(srcdir)/'`RESHUF.F

gcedric-RESHUF.obj: RESHUF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RESHUF.obj `if test -f 'RESHUF.F'; then $(CYGPATH_W) 'RESHUF.F'; else $(CYGPATH_W) '$(srcdir)/RESHUF.F'; fi`

gcedric-SKIPP.o: SKIPP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SKIPP.o `test -f 'SKIPP.F' || echo '$(srcdir)/'`SKIPP.F

gcedric-SKIPP.obj: SKIPP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SKIPP.obj `if test -f 'SKIPP.F'; then $(CYGPATH_W) 'SKIPP.F'; else $(CYGPATH_W) '$(srcdir)/SKIPP.F'; fi`

gcedric-IDCMPR.o: IDCMPR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IDCMPR.o `test -f 'IDCMPR.F' || echo '$(srcdir)/'`IDCMPR.F

gcedric-IDCMPR.obj: IDCMPR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IDCMPR.obj `if test -f 'IDCMPR.F'; then $(CYGPATH_W) 'IDCMPR.F'; else $(CYGPATH_W) '$(srcdir)/IDCMPR.F'; fi`

gcedric-COMCHK.o: COMCHK.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COMCHK.o `test -f 'COMCHK.F' || echo '$(srcdir)/'`COMCHK.F

gcedric-COMCHK.obj: COMCHK.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COMCHK.obj `if test -f 'COMCHK.F'; then $(CYGPATH_W) 'COMCHK.F'; else $(CYGPATH_W) '$(srcdir)/COMCHK.F'; fi`

gcedric-WINSET.o: WINSET.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-WINSET.o `test -f 'WINSET.F' || echo '$(srcdir)/'`WINSET.F

gcedric-WINSET.obj: WINSET.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-WINSET.obj `if test -f 'WINSET.F'; then $(CYGPATH_W) 'WINSET.F'; else $(CYGPATH_W) '$(srcdir)/WINSET.F'; fi`

gcedric-FLDSET.o: FLDSET.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FLDSET.o `test -f 'FLDSET.F' || echo '$(srcdir)/'`FLDSET.F

gcedric-FLDSET.obj: FLDSET.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FLDSET.obj `if test -f 'FLDSET.F'; then $(CYGPATH_W) 'FLDSET.F'; else $(CYGPATH_W) '$(srcdir)/FLDSET.F'; fi`

gcedric-SETVOL.o: SETVOL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SETVOL.o `test -f 'SETVOL.F' || echo '$(srcdir)/'`SETVOL.F

gcedric-SETVOL.obj: SETVOL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SETVOL.obj `if test -f 'SETVOL.F'; then $(CYGPATH_W) 'SETVOL.F'; else $(CYGPATH_W) '$(srcdir)/SETVOL.F'; fi`

gcedric-IMHSUM.o: IMHSUM.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IMHSUM.o `test -f 'IMHSUM.F' || echo '$(srcdir)/'`IMHSUM.F

gcedric-IMHSUM.obj: IMHSUM.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IMHSUM.obj `if test -f 'IMHSUM.F'; then $(CYGPATH_W) 'IMHSUM.F'; else $(CYGPATH_W) '$(srcdir)/IMHSUM.F'; fi`

gcedric-TAPMES.o: TAPMES.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-TAPMES.o `test -f 'TAPMES.F' || echo '$(srcdir)/'`TAPMES.F

gcedric-TAPMES.obj: TAPMES.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-TAPMES.obj `if test -f 'TAPMES.F'; then $(CYGPATH_W) 'TAPMES.F'; else $(CYGPATH_W) '$(srcdir)/TAPMES.F'; fi`

gcedric-CEDCDF.o: CEDCDF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CEDCDF.o `test -f 'CEDCDF.F' || echo '$(srcdir)/'`CEDCDF.F

gcedric-CEDCDF.obj: CEDCDF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CEDCDF.obj `if test -f 'CEDCDF.F'; then $(CYGPATH_W) 'CEDCDF.F'; else $(CYGPATH_W) '$(srcdir)/CEDCDF.F'; fi`

gcedric-CRTHIN.o: CRTHIN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CRTHIN.o `test -f 'CRTHIN.F' || echo '$(srcdir)/'`CRTHIN.F

gcedric-CRTHIN.obj: CRTHIN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CRTHIN.obj `if test -f 'CRTHIN.F'; then $(CYGPATH_W) 'CRTHIN.F'; else $(CYGPATH_W) '$(srcdir)/CRTHIN.F'; fi`

gcedric-FLDNAMOUT.o: FLDNAMOUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FLDNAMOUT.o `test -f 'FLDNAMOUT.F' || echo '$(srcdir)/'`FLDNAMOUT.F

gcedric-FLDNAMOUT.obj: FLDNAMOUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FLDNAMOUT.obj `if test -f 'FLDNAMOUT.F'; then $(CYGPATH_W) 'FLDNAMOUT.F'; else $(CYGPATH_W) '$(srcdir)/FLDNAMOUT.F'; fi`

gcedric-PUTD.o: PUTD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PUTD.o `test -f 'PUTD.F' || echo '$(srcdir)/'`PUTD.F

gcedric-PUTD.obj: PUTD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PUTD.obj `if test -f 'PUTD.F'; then $(CYGPATH_W) 'PUTD.F'; else $(CYGPATH_W) '$(srcdir)/PUTD.F'; fi`

gcedric-GETD.o: GETD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GETD.o `test -f 'GETD.F' || echo '$(srcdir)/'`GETD.F

gcedric-GETD.obj: GETD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GETD.obj `if test -f 'GETD.F'; then $(CYGPATH_W) 'GETD.F'; else $(CYGPATH_W) '$(srcdir)/GETD.F'; fi`

gcedric-TRPCO.o: TRPCO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-TRPCO.o `test -f 'TRPCO.F' || echo '$(srcdir)/'`TRPCO.F

gcedric-TRPCO.obj: TRPCO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-TRPCO.obj `if test -f 'TRPCO.F'; then $(CYGPATH_W) 'TRPCO.F'; else $(CYGPATH_W) '$(srcdir)/TRPCO.F'; fi`

gcedric-LSQFIL.o: LSQFIL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LSQFIL.o `test -f 'LSQFIL.F' || echo '$(srcdir)/'`LSQFIL.F

gcedric-LSQFIL.obj: LSQFIL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LSQFIL.obj `if test -f 'LSQFIL.F'; then $(CYGPATH_W) 'LSQFIL.F'; else $(CYGPATH_W) '$(srcdir)/LSQFIL.F'; fi`

gcedric-SHIFTIT.o: SHIFTIT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SHIFTIT.o `test -f 'SHIFTIT.F' || echo '$(srcdir)/'`SHIFTIT.F

gcedric-SHIFTIT.obj: SHIFTIT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SHIFTIT.obj `if test -f 'SHIFTIT.F'; then $(CYGPATH_W) 'SHIFTIT.F'; else $(CYGPATH_W) '$(srcdir)/SHIFTIT.F'; fi`

gcedric-SHILBL.o: SHILBL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SHILBL.o `test -f 'SHILBL.F' || echo '$(srcdir)/'`SHILBL.F

gcedric-SHILBL.obj: SHILBL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SHILBL.obj `if test -f 'SHILBL.F'; then $(CYGPATH_W) 'SHILBL.F'; else $(CYGPATH_W) '$(srcdir)/SHILBL.F'; fi`

gcedric-SHIRBL.o: SHIRBL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SHIRBL.o `test -f 'SHIRBL.F' || echo '$(srcdir)/'`SHIRBL.F

gcedric-SHIRBL.obj: SHIRBL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SHIRBL.obj `if test -f 'SHIRBL.F'; then $(CYGPATH_W) 'SHIRBL.F'; else $(CYGPATH_W) '$(srcdir)/SHIRBL.F'; fi`

gcedric-IFIND.o: IFIND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IFIND.o `test -f 'IFIND.F' || echo '$(srcdir)/'`IFIND.F

gcedric-IFIND.obj: IFIND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IFIND.obj `if test -f 'IFIND.F'; then $(CYGPATH_W) 'IFIND.F'; else $(CYGPATH_W) '$(srcdir)/IFIND.F'; fi`

gcedric-ALTER.o: ALTER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ALTER.o `test -f 'ALTER.F' || echo '$(srcdir)/'`ALTER.F

gcedric-ALTER.obj: ALTER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ALTER.obj `if test -f 'ALTER.F'; then $(CYGPATH_W) 'ALTER.F'; else $(CYGPATH_W) '$(srcdir)/ALTER.F'; fi`

gcedric-ASDPMD.o: ASDPMD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ASDPMD.o `test -f 'ASDPMD.F' || echo '$(srcdir)/'`ASDPMD.F

gcedric-ASDPMD.obj: ASDPMD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ASDPMD.obj `if test -f 'ASDPMD.F'; then $(CYGPATH_W) 'ASDPMD.F'; else $(CYGPATH_W) '$(srcdir)/ASDPMD.F'; fi`

gcedric-REGCAL.o: REGCAL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-REGCAL.o `test -f 'REGCAL.F' || echo '$(srcdir)/'`REGCAL.F

gcedric-REGCAL.obj: REGCAL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-REGCAL.obj `if test -f 'REGCAL.F'; then $(CYGPATH_W) 'REGCAL.F'; else $(CYGPATH_W) '$(srcdir)/REGCAL.F'; fi`

gcedric-REGINT.o: REGINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-REGINT.o `test -f 'REGINT.F' || echo '$(srcdir)/'`REGINT.F

gcedric-REGINT.obj: REGINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-REGINT.obj `if test -f 'REGINT.F'; then $(CYGPATH_W) 'REGINT.F'; else $(CYGPATH_W) '$(srcdir)/REGINT.F'; fi`

gcedric-REGRZI.o: REGRZI.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-REGRZI.o `test -f 'REGRZI.F' || echo '$(srcdir)/'`REGRZI.F

gcedric-REGRZI.obj: REGRZI.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-REGRZI.obj `if test -f 'REGRZI.F'; then $(CYGPATH_W) 'REGRZI.F'; else $(CYGPATH_W) '$(srcdir)/REGRZI.F'; fi`

gcedric-BLHED.o: BLHED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-BLHED.o `test -f 'BLHED.F' || echo '$(srcdir)/'`BLHED.F

gcedric-BLHED.obj: BLHED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-BLHED.obj `if test -f 'BLHED.F'; then $(CYGPATH_W) 'BLHED.F'; else $(CYGPATH_W) '$(srcdir)/BLHED.F'; fi`

gcedric-DWITER.o: DWITER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DWITER.o `test -f 'DWITER.F' || echo '$(srcdir)/'`DWITER.F

gcedric-DWITER.obj: DWITER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DWITER.obj `if test -f 'DWITER.F'; then $(CYGPATH_W) 'DWITER.F'; else $(CYGPATH_W) '$(srcdir)/DWITER.F'; fi`

gcedric-VADCORD.o: VADCORD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-VADCORD.o `test -f 'VADCORD.F' || echo '$(srcdir)/'`VADCORD.F

gcedric-VADCORD.obj: VADCORD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-VADCORD.obj `if test -f 'VADCORD.F'; then $(CYGPATH_W) 'VADCORD.F'; else $(CYGPATH_W) '$(srcdir)/VADCORD.F'; fi`

gcedric-VAD.o: VAD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-VAD.o `test -f 'VAD.F' || echo '$(srcdir)/'`VAD.F

gcedric-VAD.obj: VAD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-VAD.obj `if test -f 'VAD.F'; then $(CYGPATH_W) 'VAD.F'; else $(CYGPATH_W) '$(srcdir)/VAD.F'; fi`

gcedric-VADRINGS.o: VADRINGS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-VADRINGS.o `test -f 'VADRINGS.F' || echo '$(srcdir)/'`VADRINGS.F

gcedric-VADRINGS.obj: VADRINGS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-VADRINGS.obj `if test -f 'VADRINGS.F'; then $(CYGPATH_W) 'VADRINGS.F'; else $(CYGPATH_W) '$(srcdir)/VADRINGS.F'; fi`

gcedric-PLANST.o: PLANST.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLANST.o `test -f 'PLANST.F' || echo '$(srcdir)/'`PLANST.F

gcedric-PLANST.obj: PLANST.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLANST.obj `if test -f 'PLANST.F'; then $(CYGPATH_W) 'PLANST.F'; else $(CYGPATH_W) '$(srcdir)/PLANST.F'; fi`

gcedric-PLNFLD.o: PLNFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLNFLD.o `test -f 'PLNFLD.F' || echo '$(srcdir)/'`PLNFLD.F

gcedric-PLNFLD.obj: PLNFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLNFLD.obj `if test -f 'PLNFLD.F'; then $(CYGPATH_W) 'PLNFLD.F'; else $(CYGPATH_W) '$(srcdir)/PLNFLD.F'; fi`

gcedric-LINFIT2.o: LINFIT2.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LINFIT2.o `test -f 'LINFIT2.F' || echo '$(srcdir)/'`LINFIT2.F

gcedric-LINFIT2.obj: LINFIT2.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LINFIT2.obj `if test -f 'LINFIT2.F'; then $(CYGPATH_W) 'LINFIT2.F'; else $(CYGPATH_W) '$(srcdir)/LINFIT2.F'; fi`

gcedric-LSFILW.o: LSFILW.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LSFILW.o `test -f 'LSFILW.F' || echo '$(srcdir)/'`LSFILW.F

gcedric-LSFILW.obj: LSFILW.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LSFILW.obj `if test -f 'LSFILW.F'; then $(CYGPATH_W) 'LSFILW.F'; else $(CYGPATH_W) '$(srcdir)/LSFILW.F'; fi`

gcedric-LSTSQR.o: LSTSQR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LSTSQR.o `test -f 'LSTSQR.F' || echo '$(srcdir)/'`LSTSQR.F

gcedric-LSTSQR.obj: LSTSQR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LSTSQR.obj `if test -f 'LSTSQR.F'; then $(CYGPATH_W) 'LSTSQR.F'; else $(CYGPATH_W) '$(srcdir)/LSTSQR.F'; fi`

gcedric-SETDCD.o: SETDCD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SETDCD.o `test -f 'SETDCD.F' || echo '$(srcdir)/'`SETDCD.F

gcedric-SETDCD.obj: SETDCD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SETDCD.obj `if test -f 'SETDCD.F'; then $(CYGPATH_W) 'SETDCD.F'; else $(CYGPATH_W) '$(srcdir)/SETDCD.F'; fi`

gcedric-GLODEC.o: GLODEC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GLODEC.o `test -f 'GLODEC.F' || echo '$(srcdir)/'`GLODEC.F

gcedric-GLODEC.obj: GLODEC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GLODEC.obj `if test -f 'GLODEC.F'; then $(CYGPATH_W) 'GLODEC.F'; else $(CYGPATH_W) '$(srcdir)/GLODEC.F'; fi`

gcedric-BNDFIL.o: BNDFIL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-BNDFIL.o `test -f 'BNDFIL.F' || echo '$(srcdir)/'`BNDFIL.F

gcedric-BNDFIL.obj: BNDFIL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-BNDFIL.obj `if test -f 'BNDFIL.F'; then $(CYGPATH_W) 'BNDFIL.F'; else $(CYGPATH_W) '$(srcdir)/BNDFIL.F'; fi`

gcedric-BNDVAL.o: BNDVAL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-BNDVAL.o `test -f 'BNDVAL.F' || echo '$(srcdir)/'`BNDVAL.F

gcedric-BNDVAL.obj: BNDVAL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-BNDVAL.obj `if test -f 'BNDVAL.F'; then $(CYGPATH_W) 'BNDVAL.F'; else $(CYGPATH_W) '$(srcdir)/BNDVAL.F'; fi`

gcedric-UNPAUT.o: UNPAUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-UNPAUT.o `test -f 'UNPAUT.F' || echo '$(srcdir)/'`UNPAUT.F

gcedric-UNPAUT.obj: UNPAUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-UNPAUT.obj `if test -f 'UNPAUT.F'; then $(CYGPATH_W) 'UNPAUT.F'; else $(CYGPATH_W) '$(srcdir)/UNPAUT.F'; fi`

gcedric-STRID.o: STRID.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-STRID.o `test -f 'STRID.F' || echo '$(srcdir)/'`STRID.F

gcedric-STRID.obj: STRID.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-STRID.obj `if test -f 'STRID.F'; then $(CYGPATH_W) 'STRID.F'; else $(CYGPATH_W) '$(srcdir)/STRID.F'; fi`

gcedric-RITER.o: RITER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RITER.o `test -f 'RITER.F' || echo '$(srcdir)/'`RITER.F

gcedric-RITER.obj: RITER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RITER.obj `if test -f 'RITER.F'; then $(CYGPATH_W) 'RITER.F'; else $(CYGPATH_W) '$(srcdir)/RITER.F'; fi`

gcedric-NEXACT.o: NEXACT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-NEXACT.o `test -f 'NEXACT.F' || echo '$(srcdir)/'`NEXACT.F

gcedric-NEXACT.obj: NEXACT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-NEXACT.obj `if test -f 'NEXACT.F'; then $(CYGPATH_W) 'NEXACT.F'; else $(CYGPATH_W) '$(srcdir)/NEXACT.F'; fi`

gcedric-ISUFLD.o: ISUFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ISUFLD.o `test -f 'ISUFLD.F' || echo '$(srcdir)/'`ISUFLD.F

gcedric-ISUFLD.obj: ISUFLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ISUFLD.obj `if test -f 'ISUFLD.F'; then $(CYGPATH_W) 'ISUFLD.F'; else $(CYGPATH_W) '$(srcdir)/ISUFLD.F'; fi`

gcedric-CRINTRP.o: CRINTRP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CRINTRP.o `test -f 'CRINTRP.F' || echo '$(srcdir)/'`CRINTRP.F

gcedric-CRINTRP.obj: CRINTRP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CRINTRP.obj `if test -f 'CRINTRP.F'; then $(CYGPATH_W) 'CRINTRP.F'; else $(CYGPATH_W) '$(srcdir)/CRINTRP.F'; fi`

gcedric-EQSLV.o: EQSLV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-EQSLV.o `test -f 'EQSLV.F' || echo '$(srcdir)/'`EQSLV.F

gcedric-EQSLV.obj: EQSLV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-EQSLV.obj `if test -f 'EQSLV.F'; then $(CYGPATH_W) 'EQSLV.F'; else $(CYGPATH_W) '$(srcdir)/EQSLV.F'; fi`

gcedric-IFINOT.o: IFINOT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IFINOT.o `test -f 'IFINOT.F' || echo '$(srcdir)/'`IFINOT.F

gcedric-IFINOT.obj: IFINOT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IFINOT.obj `if test -f 'IFINOT.F'; then $(CYGPATH_W) 'IFINOT.F'; else $(CYGPATH_W) '$(srcdir)/IFINOT.F'; fi`

gcedric-DUMMY.o: DUMMY.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DUMMY.o `test -f 'DUMMY.F' || echo '$(srcdir)/'`DUMMY.F

gcedric-DUMMY.obj: DUMMY.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DUMMY.obj `if test -f 'DUMMY.F'; then $(CYGPATH_W) 'DUMMY.F'; else $(CYGPATH_W) '$(srcdir)/DUMMY.F'; fi`

gcedric-CEDLOG.o: CEDLOG.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CEDLOG.o `test -f 'CEDLOG.F' || echo '$(srcdir)/'`CEDLOG.F

gcedric-CEDLOG.obj: CEDLOG.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CEDLOG.obj `if test -f 'CEDLOG.F'; then $(CYGPATH_W) 'CEDLOG.F'; else $(CYGPATH_W) '$(srcdir)/CEDLOG.F'; fi`

gcedric-GRIDAIR.o: GRIDAIR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GRIDAIR.o `test -f 'GRIDAIR.F' || echo '$(srcdir)/'`GRIDAIR.F

gcedric-GRIDAIR.obj: GRIDAIR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GRIDAIR.obj `if test -f 'GRIDAIR.F'; then $(CYGPATH_W) 'GRIDAIR.F'; else $(CYGPATH_W) '$(srcdir)/GRIDAIR.F'; fi`

gcedric-CEDMDV.o: CEDMDV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CEDMDV.o `test -f 'CEDMDV.F' || echo '$(srcdir)/'`CEDMDV.F

gcedric-CEDMDV.obj: CEDMDV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CEDMDV.obj `if test -f 'CEDMDV.F'; then $(CYGPATH_W) 'CEDMDV.F'; else $(CYGPATH_W) '$(srcdir)/CEDMDV.F'; fi`

gcedric-RELXUV.o: RELXUV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RELXUV.o `test -f 'RELXUV.F' || echo '$(srcdir)/'`RELXUV.F

gcedric-RELXUV.obj: RELXUV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RELXUV.obj `if test -f 'RELXUV.F'; then $(CYGPATH_W) 'RELXUV.F'; else $(CYGPATH_W) '$(srcdir)/RELXUV.F'; fi`

gcedric-PPI_IFIND.o: PPI_IFIND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PPI_IFIND.o `test -f 'PPI_IFIND.F' || echo '$(srcdir)/'`PPI_IFIND.F

gcedric-PPI_IFIND.obj: PPI_IFIND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PPI_IFIND.obj `if test -f 'PPI_IFIND.F'; then $(CYGPATH_W) 'PPI_IFIND.F'; else $(CYGPATH_W) '$(srcdir)/PPI_IFIND.F'; fi`

gcedric-PPI_MAJMIN.o: PPI_MAJMIN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PPI_MAJMIN.o `test -f 'PPI_MAJMIN.F' || echo '$(srcdir)/'`PPI_MAJMIN.F

gcedric-PPI_MAJMIN.obj: PPI_MAJMIN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PPI_MAJMIN.obj `if test -f 'PPI_MAJMIN.F'; then $(CYGPATH_W) 'PPI_MAJMIN.F'; else $(CYGPATH_W) '$(srcdir)/PPI_MAJMIN.F'; fi`

gcedric-USTOPO.o: USTOPO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-USTOPO.o `test -f 'USTOPO.F' || echo '$(srcdir)/'`USTOPO.F

gcedric-USTOPO.obj: USTOPO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-USTOPO.obj `if test -f 'USTOPO.F'; then $(CYGPATH_W) 'USTOPO.F'; else $(CYGPATH_W) '$(srcdir)/USTOPO.F'; fi`

gcedric-RANF.o: RANF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RANF.o `test -f 'RANF.F' || echo '$(srcdir)/'`RANF.F

gcedric-RANF.obj: RANF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RANF.obj `if test -f 'RANF.F'; then $(CYGPATH_W) 'RANF.F'; else $(CYGPATH_W) '$(srcdir)/RANF.F'; fi`

gcedric-SOUND.o: SOUND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SOUND.o `test -f 'SOUND.F' || echo '$(srcdir)/'`SOUND.F

gcedric-SOUND.obj: SOUND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SOUND.obj `if test -f 'SOUND.F'; then $(CYGPATH_W) 'SOUND.F'; else $(CYGPATH_W) '$(srcdir)/SOUND.F'; fi`

gcedric-DIVZERO.o: DIVZERO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DIVZERO.o `test -f 'DIVZERO.F' || echo '$(srcdir)/'`DIVZERO.F

gcedric-DIVZERO.obj: DIVZERO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DIVZERO.obj `if test -f 'DIVZERO.F'; then $(CYGPATH_W) 'DIVZERO.F'; else $(CYGPATH_W) '$(srcdir)/DIVZERO.F'; fi`

gcedric-ROVECT.o: ROVECT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ROVECT.o `test -f 'ROVECT.F' || echo '$(srcdir)/'`ROVECT.F

gcedric-ROVECT.obj: ROVECT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ROVECT.obj `if test -f 'ROVECT.F'; then $(CYGPATH_W) 'ROVECT.F'; else $(CYGPATH_W) '$(srcdir)/ROVECT.F'; fi`

gcedric-RVTOPO.o: RVTOPO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RVTOPO.o `test -f 'RVTOPO.F' || echo '$(srcdir)/'`RVTOPO.F

gcedric-RVTOPO.obj: RVTOPO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RVTOPO.obj `if test -f 'RVTOPO.F'; then $(CYGPATH_W) 'RVTOPO.F'; else $(CYGPATH_W) '$(srcdir)/RVTOPO.F'; fi`

gcedric-COINTRP.o: COINTRP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COINTRP.o `test -f 'COINTRP.F' || echo '$(srcdir)/'`COINTRP.F

gcedric-COINTRP.obj: COINTRP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COINTRP.obj `if test -f 'COINTRP.F'; then $(CYGPATH_W) 'COINTRP.F'; else $(CYGPATH_W) '$(srcdir)/COINTRP.F'; fi`

gcedric-ICONSC.o: ICONSC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ICONSC.o `test -f 'ICONSC.F' || echo '$(srcdir)/'`ICONSC.F

gcedric-ICONSC.obj: ICONSC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ICONSC.obj `if test -f 'ICONSC.F'; then $(CYGPATH_W) 'ICONSC.F'; else $(CYGPATH_W) '$(srcdir)/ICONSC.F'; fi`

gcedric-AIRACCUM.o: AIRACCUM.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-AIRACCUM.o `test -f 'AIRACCUM.F' || echo '$(srcdir)/'`AIRACCUM.F

gcedric-AIRACCUM.obj: AIRACCUM.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-AIRACCUM.obj `if test -f 'AIRACCUM.F'; then $(CYGPATH_W) 'AIRACCUM.F'; else $(CYGPATH_W) '$(srcdir)/AIRACCUM.F'; fi`

gcedric-AIROUT.o: AIROUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-AIROUT.o `test -f 'AIROUT.F' || echo '$(srcdir)/'`AIROUT.F

gcedric-AIROUT.obj: AIROUT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-AIROUT.obj `if test -f 'AIROUT.F'; then $(CYGPATH_W) 'AIROUT.F'; else $(CYGPATH_W) '$(srcdir)/AIROUT.F'; fi`

gcedric-LAPSOL.o: LAPSOL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LAPSOL.o `test -f 'LAPSOL.F' || echo '$(srcdir)/'`LAPSOL.F

gcedric-LAPSOL.obj: LAPSOL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LAPSOL.obj `if test -f 'LAPSOL.F'; then $(CYGPATH_W) 'LAPSOL.F'; else $(CYGPATH_W) '$(srcdir)/LAPSOL.F'; fi`

gcedric-CORCAL.o: CORCAL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CORCAL.o `test -f 'CORCAL.F' || echo '$(srcdir)/'`CORCAL.F

gcedric-CORCAL.obj: CORCAL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CORCAL.obj `if test -f 'CORCAL.F'; then $(CYGPATH_W) 'CORCAL.F'; else $(CYGPATH_W) '$(srcdir)/CORCAL.F'; fi`

gcedric-BLDDES.o: BLDDES.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-BLDDES.o `test -f 'BLDDES.F' || echo '$(srcdir)/'`BLDDES.F

gcedric-BLDDES.obj: BLDDES.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-BLDDES.obj `if test -f 'BLDDES.F'; then $(CYGPATH_W) 'BLDDES.F'; else $(CYGPATH_W) '$(srcdir)/BLDDES.F'; fi`

gcedric-REDHED.o: REDHED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-REDHED.o `test -f 'REDHED.F' || echo '$(srcdir)/'`REDHED.F

gcedric-REDHED.obj: REDHED.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-REDHED.obj `if test -f 'REDHED.F'; then $(CYGPATH_W) 'REDHED.F'; else $(CYGPATH_W) '$(srcdir)/REDHED.F'; fi`

gcedric-UNFSLP.o: UNFSLP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-UNFSLP.o `test -f 'UNFSLP.F' || echo '$(srcdir)/'`UNFSLP.F

gcedric-UNFSLP.obj: UNFSLP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-UNFSLP.obj `if test -f 'UNFSLP.F'; then $(CYGPATH_W) 'UNFSLP.F'; else $(CYGPATH_W) '$(srcdir)/UNFSLP.F'; fi`

gcedric-DIFADV.o: DIFADV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DIFADV.o `test -f 'DIFADV.F' || echo '$(srcdir)/'`DIFADV.F

gcedric-DIFADV.obj: DIFADV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DIFADV.obj `if test -f 'DIFADV.F'; then $(CYGPATH_W) 'DIFADV.F'; else $(CYGPATH_W) '$(srcdir)/DIFADV.F'; fi`

gcedric-DOSHFT.o: DOSHFT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DOSHFT.o `test -f 'DOSHFT.F' || echo '$(srcdir)/'`DOSHFT.F

gcedric-DOSHFT.obj: DOSHFT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DOSHFT.obj `if test -f 'DOSHFT.F'; then $(CYGPATH_W) 'DOSHFT.F'; else $(CYGPATH_W) '$(srcdir)/DOSHFT.F'; fi`

gcedric-DMPCHAR.o: DMPCHAR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DMPCHAR.o `test -f 'DMPCHAR.F' || echo '$(srcdir)/'`DMPCHAR.F

gcedric-DMPCHAR.obj: DMPCHAR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DMPCHAR.obj `if test -f 'DMPCHAR.F'; then $(CYGPATH_W) 'DMPCHAR.F'; else $(CYGPATH_W) '$(srcdir)/DMPCHAR.F'; fi`

gcedric-UNPFOR.o: UNPFOR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-UNPFOR.o `test -f 'UNPFOR.F' || echo '$(srcdir)/'`UNPFOR.F

gcedric-UNPFOR.obj: UNPFOR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-UNPFOR.obj `if test -f 'UNPFOR.F'; then $(CYGPATH_W) 'UNPFOR.F'; else $(CYGPATH_W) '$(srcdir)/UNPFOR.F'; fi`

gcedric-SYNNER.o: SYNNER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SYNNER.o `test -f 'SYNNER.F' || echo '$(srcdir)/'`SYNNER.F

gcedric-SYNNER.obj: SYNNER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SYNNER.obj `if test -f 'SYNNER.F'; then $(CYGPATH_W) 'SYNNER.F'; else $(CYGPATH_W) '$(srcdir)/SYNNER.F'; fi`

gcedric-DSPSYN.o: DSPSYN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DSPSYN.o `test -f 'DSPSYN.F' || echo '$(srcdir)/'`DSPSYN.F

gcedric-DSPSYN.obj: DSPSYN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DSPSYN.obj `if test -f 'DSPSYN.F'; then $(CYGPATH_W) 'DSPSYN.F'; else $(CYGPATH_W) '$(srcdir)/DSPSYN.F'; fi`

gcedric-IDSYND.o: IDSYND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IDSYND.o `test -f 'IDSYND.F' || echo '$(srcdir)/'`IDSYND.F

gcedric-IDSYND.obj: IDSYND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IDSYND.obj `if test -f 'IDSYND.F'; then $(CYGPATH_W) 'IDSYND.F'; else $(CYGPATH_W) '$(srcdir)/IDSYND.F'; fi`

gcedric-THERMO.o: THERMO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-THERMO.o `test -f 'THERMO.F' || echo '$(srcdir)/'`THERMO.F

gcedric-THERMO.obj: THERMO.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-THERMO.obj `if test -f 'THERMO.F'; then $(CYGPATH_W) 'THERMO.F'; else $(CYGPATH_W) '$(srcdir)/THERMO.F'; fi`

gcedric-CALUVW.o: CALUVW.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CALUVW.o `test -f 'CALUVW.F' || echo '$(srcdir)/'`CALUVW.F

gcedric-CALUVW.obj: CALUVW.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CALUVW.obj `if test -f 'CALUVW.F'; then $(CYGPATH_W) 'CALUVW.F'; else $(CYGPATH_W) '$(srcdir)/CALUVW.F'; fi`

gcedric-IABPCK.o: IABPCK.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IABPCK.o `test -f 'IABPCK.F' || echo '$(srcdir)/'`IABPCK.F

gcedric-IABPCK.obj: IABPCK.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IABPCK.obj `if test -f 'IABPCK.F'; then $(CYGPATH_W) 'IABPCK.F'; else $(CYGPATH_W) '$(srcdir)/IABPCK.F'; fi`

gcedric-IGET16.o: IGET16.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IGET16.o `test -f 'IGET16.F' || echo '$(srcdir)/'`IGET16.F

gcedric-IGET16.obj: IGET16.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IGET16.obj `if test -f 'IGET16.F'; then $(CYGPATH_W) 'IGET16.F'; else $(CYGPATH_W) '$(srcdir)/IGET16.F'; fi`

gcedric-KARDIN.o: KARDIN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-KARDIN.o `test -f 'KARDIN.F' || echo '$(srcdir)/'`KARDIN.F

gcedric-KARDIN.obj: KARDIN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-KARDIN.obj `if test -f 'KARDIN.F'; then $(CYGPATH_W) 'KARDIN.F'; else $(CYGPATH_W) '$(srcdir)/KARDIN.F'; fi`

gcedric-EXPAND.o: EXPAND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-EXPAND.o `test -f 'EXPAND.F' || echo '$(srcdir)/'`EXPAND.F

gcedric-EXPAND.obj: EXPAND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-EXPAND.obj `if test -f 'EXPAND.F'; then $(CYGPATH_W) 'EXPAND.F'; else $(CYGPATH_W) '$(srcdir)/EXPAND.F'; fi`

gcedric-VALUE.o: VALUE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-VALUE.o `test -f 'VALUE.F' || echo '$(srcdir)/'`VALUE.F

gcedric-VALUE.obj: VALUE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-VALUE.obj `if test -f 'VALUE.F'; then $(CYGPATH_W) 'VALUE.F'; else $(CYGPATH_W) '$(srcdir)/VALUE.F'; fi`

gcedric-DEFINE.o: DEFINE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DEFINE.o `test -f 'DEFINE.F' || echo '$(srcdir)/'`DEFINE.F

gcedric-DEFINE.obj: DEFINE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DEFINE.obj `if test -f 'DEFINE.F'; then $(CYGPATH_W) 'DEFINE.F'; else $(CYGPATH_W) '$(srcdir)/DEFINE.F'; fi`

gcedric-RDKARD.o: RDKARD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RDKARD.o `test -f 'RDKARD.F' || echo '$(srcdir)/'`RDKARD.F

gcedric-RDKARD.obj: RDKARD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RDKARD.obj `if test -f 'RDKARD.F'; then $(CYGPATH_W) 'RDKARD.F'; else $(CYGPATH_W) '$(srcdir)/RDKARD.F'; fi`

gcedric-BCKGRND.o: BCKGRND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-BCKGRND.o `test -f 'BCKGRND.F' || echo '$(srcdir)/'`BCKGRND.F

gcedric-BCKGRND.obj: BCKGRND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-BCKGRND.obj `if test -f 'BCKGRND.F'; then $(CYGPATH_W) 'BCKGRND.F'; else $(CYGPATH_W) '$(srcdir)/BCKGRND.F'; fi`

gcedric-BLKDAT.o: BLKDAT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-BLKDAT.o `test -f 'BLKDAT.F' || echo '$(srcdir)/'`BLKDAT.F

gcedric-BLKDAT.obj: BLKDAT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-BLKDAT.obj `if test -f 'BLKDAT.F'; then $(CYGPATH_W) 'BLKDAT.F'; else $(CYGPATH_W) '$(srcdir)/BLKDAT.F'; fi`

gcedric-CODER.o: CODER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CODER.o `test -f 'CODER.F' || echo '$(srcdir)/'`CODER.F

gcedric-CODER.obj: CODER.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CODER.obj `if test -f 'CODER.F'; then $(CYGPATH_W) 'CODER.F'; else $(CYGPATH_W) '$(srcdir)/CODER.F'; fi`

gcedric-COLRAM.o: COLRAM.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COLRAM.o `test -f 'COLRAM.F' || echo '$(srcdir)/'`COLRAM.F

gcedric-COLRAM.obj: COLRAM.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-COLRAM.obj `if test -f 'COLRAM.F'; then $(CYGPATH_W) 'COLRAM.F'; else $(CYGPATH_W) '$(srcdir)/COLRAM.F'; fi`

gcedric-CONTHALF.o: CONTHALF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CONTHALF.o `test -f 'CONTHALF.F' || echo '$(srcdir)/'`CONTHALF.F

gcedric-CONTHALF.obj: CONTHALF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CONTHALF.obj `if test -f 'CONTHALF.F'; then $(CYGPATH_W) 'CONTHALF.F'; else $(CYGPATH_W) '$(srcdir)/CONTHALF.F'; fi`

gcedric-CORR.o: CORR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CORR.o `test -f 'CORR.F' || echo '$(srcdir)/'`CORR.F

gcedric-CORR.obj: CORR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-CORR.obj `if test -f 'CORR.F'; then $(CYGPATH_W) 'CORR.F'; else $(CYGPATH_W) '$(srcdir)/CORR.F'; fi`

gcedric-DATASND.o: DATASND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DATASND.o `test -f 'DATASND.F' || echo '$(srcdir)/'`DATASND.F

gcedric-DATASND.obj: DATASND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DATASND.obj `if test -f 'DATASND.F'; then $(CYGPATH_W) 'DATASND.F'; else $(CYGPATH_W) '$(srcdir)/DATASND.F'; fi`

gcedric-DFCLRS.o: DFCLRS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DFCLRS.o `test -f 'DFCLRS.F' || echo '$(srcdir)/'`DFCLRS.F

gcedric-DFCLRS.obj: DFCLRS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DFCLRS.obj `if test -f 'DFCLRS.F'; then $(CYGPATH_W) 'DFCLRS.F'; else $(CYGPATH_W) '$(srcdir)/DFCLRS.F'; fi`

gcedric-DMPFLOAT.o: DMPFLOAT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DMPFLOAT.o `test -f 'DMPFLOAT.F' || echo '$(srcdir)/'`DMPFLOAT.F

gcedric-DMPFLOAT.obj: DMPFLOAT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DMPFLOAT.obj `if test -f 'DMPFLOAT.F'; then $(CYGPATH_W) 'DMPFLOAT.F'; else $(CYGPATH_W) '$(srcdir)/DMPFLOAT.F'; fi`

gcedric-DMPINTGR.o: DMPINTGR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DMPINTGR.o `test -f 'DMPINTGR.F' || echo '$(srcdir)/'`DMPINTGR.F

gcedric-DMPINTGR.obj: DMPINTGR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DMPINTGR.obj `if test -f 'DMPINTGR.F'; then $(CYGPATH_W) 'DMPINTGR.F'; else $(CYGPATH_W) '$(srcdir)/DMPINTGR.F'; fi`

gcedric-DSP3D.o: DSP3D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DSP3D.o `test -f 'DSP3D.F' || echo '$(srcdir)/'`DSP3D.F

gcedric-DSP3D.obj: DSP3D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DSP3D.obj `if test -f 'DSP3D.F'; then $(CYGPATH_W) 'DSP3D.F'; else $(CYGPATH_W) '$(srcdir)/DSP3D.F'; fi`

gcedric-DSPCOD.o: DSPCOD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DSPCOD.o `test -f 'DSPCOD.F' || echo '$(srcdir)/'`DSPCOD.F

gcedric-DSPCOD.obj: DSPCOD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DSPCOD.obj `if test -f 'DSPCOD.F'; then $(CYGPATH_W) 'DSPCOD.F'; else $(CYGPATH_W) '$(srcdir)/DSPCOD.F'; fi`

gcedric-DSPSRF.o: DSPSRF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DSPSRF.o `test -f 'DSPSRF.F' || echo '$(srcdir)/'`DSPSRF.F

gcedric-DSPSRF.obj: DSPSRF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-DSPSRF.obj `if test -f 'DSPSRF.F'; then $(CYGPATH_W) 'DSPSRF.F'; else $(CYGPATH_W) '$(srcdir)/DSPSRF.F'; fi`

gcedric-FAREA.o: FAREA.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FAREA.o `test -f 'FAREA.F' || echo '$(srcdir)/'`FAREA.F

gcedric-FAREA.obj: FAREA.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FAREA.obj `if test -f 'FAREA.F'; then $(CYGPATH_W) 'FAREA.F'; else $(CYGPATH_W) '$(srcdir)/FAREA.F'; fi`

gcedric-FEETCL.o: FEETCL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FEETCL.o `test -f 'FEETCL.F' || echo '$(srcdir)/'`FEETCL.F

gcedric-FEETCL.obj: FEETCL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FEETCL.obj `if test -f 'FEETCL.F'; then $(CYGPATH_W) 'FEETCL.F'; else $(CYGPATH_W) '$(srcdir)/FEETCL.F'; fi`

gcedric-FORADV.o: FORADV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FORADV.o `test -f 'FORADV.F' || echo '$(srcdir)/'`FORADV.F

gcedric-FORADV.obj: FORADV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FORADV.obj `if test -f 'FORADV.F'; then $(CYGPATH_W) 'FORADV.F'; else $(CYGPATH_W) '$(srcdir)/FORADV.F'; fi`

gcedric-FUNK.o: FUNK.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FUNK.o `test -f 'FUNK.F' || echo '$(srcdir)/'`FUNK.F

gcedric-FUNK.obj: FUNK.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-FUNK.obj `if test -f 'FUNK.F'; then $(CYGPATH_W) 'FUNK.F'; else $(CYGPATH_W) '$(srcdir)/FUNK.F'; fi`

gcedric-genmap.o: genmap.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-genmap.o `test -f 'genmap.F' || echo '$(srcdir)/'`genmap.F

gcedric-genmap.obj: genmap.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-genmap.obj `if test -f 'genmap.F'; then $(CYGPATH_W) 'genmap.F'; else $(CYGPATH_W) '$(srcdir)/genmap.F'; fi`

gcedric-GETLEN.o: GETLEN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GETLEN.o `test -f 'GETLEN.F' || echo '$(srcdir)/'`GETLEN.F

gcedric-GETLEN.obj: GETLEN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GETLEN.obj `if test -f 'GETLEN.F'; then $(CYGPATH_W) 'GETLEN.F'; else $(CYGPATH_W) '$(srcdir)/GETLEN.F'; fi`

gcedric-GETSND.o: GETSND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GETSND.o `test -f 'GETSND.F' || echo '$(srcdir)/'`GETSND.F

gcedric-GETSND.obj: GETSND.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GETSND.obj `if test -f 'GETSND.F'; then $(CYGPATH_W) 'GETSND.F'; else $(CYGPATH_W) '$(srcdir)/GETSND.F'; fi`

gcedric-GUIPROC.o: GUIPROC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GUIPROC.o `test -f 'GUIPROC.F' || echo '$(srcdir)/'`GUIPROC.F

gcedric-GUIPROC.obj: GUIPROC.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-GUIPROC.obj `if test -f 'GUIPROC.F'; then $(CYGPATH_W) 'GUIPROC.F'; else $(CYGPATH_W) '$(srcdir)/GUIPROC.F'; fi`

gcedric-HDUMP.o: HDUMP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-HDUMP.o `test -f 'HDUMP.F' || echo '$(srcdir)/'`HDUMP.F

gcedric-HDUMP.obj: HDUMP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-HDUMP.obj `if test -f 'HDUMP.F'; then $(CYGPATH_W) 'HDUMP.F'; else $(CYGPATH_W) '$(srcdir)/HDUMP.F'; fi`

gcedric-HISTGR.o: HISTGR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-HISTGR.o `test -f 'HISTGR.F' || echo '$(srcdir)/'`HISTGR.F

gcedric-HISTGR.obj: HISTGR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-HISTGR.obj `if test -f 'HISTGR.F'; then $(CYGPATH_W) 'HISTGR.F'; else $(CYGPATH_W) '$(srcdir)/HISTGR.F'; fi`

gcedric-HMARKS.o: HMARKS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-HMARKS.o `test -f 'HMARKS.F' || echo '$(srcdir)/'`HMARKS.F

gcedric-HMARKS.obj: HMARKS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-HMARKS.obj `if test -f 'HMARKS.F'; then $(CYGPATH_W) 'HMARKS.F'; else $(CYGPATH_W) '$(srcdir)/HMARKS.F'; fi`

gcedric-HSTGRM.o: HSTGRM.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-HSTGRM.o `test -f 'HSTGRM.F' || echo '$(srcdir)/'`HSTGRM.F

gcedric-HSTGRM.obj: HSTGRM.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-HSTGRM.obj `if test -f 'HSTGRM.F'; then $(CYGPATH_W) 'HSTGRM.F'; else $(CYGPATH_W) '$(srcdir)/HSTGRM.F'; fi`

gcedric-HSTINT.o: HSTINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-HSTINT.o `test -f 'HSTINT.F' || echo '$(srcdir)/'`HSTINT.F

gcedric-HSTINT.obj: HSTINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-HSTINT.obj `if test -f 'HSTINT.F'; then $(CYGPATH_W) 'HSTINT.F'; else $(CYGPATH_W) '$(srcdir)/HSTINT.F'; fi`

gcedric-HSTLBL.o: HSTLBL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-HSTLBL.o `test -f 'HSTLBL.F' || echo '$(srcdir)/'`HSTLBL.F

gcedric-HSTLBL.obj: HSTLBL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-HSTLBL.obj `if test -f 'HSTLBL.F'; then $(CYGPATH_W) 'HSTLBL.F'; else $(CYGPATH_W) '$(srcdir)/HSTLBL.F'; fi`

gcedric-HSTLST.o: HSTLST.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-HSTLST.o `test -f 'HSTLST.F' || echo '$(srcdir)/'`HSTLST.F

gcedric-HSTLST.obj: HSTLST.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-HSTLST.obj `if test -f 'HSTLST.F'; then $(CYGPATH_W) 'HSTLST.F'; else $(CYGPATH_W) '$(srcdir)/HSTLST.F'; fi`

gcedric-ICTMOD.o: ICTMOD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ICTMOD.o `test -f 'ICTMOD.F' || echo '$(srcdir)/'`ICTMOD.F

gcedric-ICTMOD.obj: ICTMOD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ICTMOD.obj `if test -f 'ICTMOD.F'; then $(CYGPATH_W) 'ICTMOD.F'; else $(CYGPATH_W) '$(srcdir)/ICTMOD.F'; fi`

gcedric-ISGFXY.o: ISGFXY.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ISGFXY.o `test -f 'ISGFXY.F' || echo '$(srcdir)/'`ISGFXY.F

gcedric-ISGFXY.obj: ISGFXY.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ISGFXY.obj `if test -f 'ISGFXY.F'; then $(CYGPATH_W) 'ISGFXY.F'; else $(CYGPATH_W) '$(srcdir)/ISGFXY.F'; fi`

gcedric-ISOSRF.o: ISOSRF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ISOSRF.o `test -f 'ISOSRF.F' || echo '$(srcdir)/'`ISOSRF.F

gcedric-ISOSRF.obj: ISOSRF.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ISOSRF.obj `if test -f 'ISOSRF.F'; then $(CYGPATH_W) 'ISOSRF.F'; else $(CYGPATH_W) '$(srcdir)/ISOSRF.F'; fi`

gcedric-ISST3D.o: ISST3D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ISST3D.o `test -f 'ISST3D.F' || echo '$(srcdir)/'`ISST3D.F

gcedric-ISST3D.obj: ISST3D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-ISST3D.obj `if test -f 'ISST3D.F'; then $(CYGPATH_W) 'ISST3D.F'; else $(CYGPATH_W) '$(srcdir)/ISST3D.F'; fi`

gcedric-IVBGEN.o: IVBGEN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IVBGEN.o `test -f 'IVBGEN.F' || echo '$(srcdir)/'`IVBGEN.F

gcedric-IVBGEN.obj: IVBGEN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-IVBGEN.obj `if test -f 'IVBGEN.F'; then $(CYGPATH_W) 'IVBGEN.F'; else $(CYGPATH_W) '$(srcdir)/IVBGEN.F'; fi`

gcedric-KILDAT.o: KILDAT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-KILDAT.o `test -f 'KILDAT.F' || echo '$(srcdir)/'`KILDAT.F

gcedric-KILDAT.obj: KILDAT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-KILDAT.obj `if test -f 'KILDAT.F'; then $(CYGPATH_W) 'KILDAT.F'; else $(CYGPATH_W) '$(srcdir)/KILDAT.F'; fi`

gcedric-KNTOCR.o: KNTOCR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-KNTOCR.o `test -f 'KNTOCR.F' || echo '$(srcdir)/'`KNTOCR.F

gcedric-KNTOCR.obj: KNTOCR.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-KNTOCR.obj `if test -f 'KNTOCR.F'; then $(CYGPATH_W) 'KNTOCR.F'; else $(CYGPATH_W) '$(srcdir)/KNTOCR.F'; fi`

gcedric-LABBOX.o: LABBOX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LABBOX.o `test -f 'LABBOX.F' || echo '$(srcdir)/'`LABBOX.F

gcedric-LABBOX.obj: LABBOX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LABBOX.obj `if test -f 'LABBOX.F'; then $(CYGPATH_W) 'LABBOX.F'; else $(CYGPATH_W) '$(srcdir)/LABBOX.F'; fi`

gcedric-LBFILL.o: LBFILL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LBFILL.o `test -f 'LBFILL.F' || echo '$(srcdir)/'`LBFILL.F

gcedric-LBFILL.obj: LBFILL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-LBFILL.obj `if test -f 'LBFILL.F'; then $(CYGPATH_W) 'LBFILL.F'; else $(CYGPATH_W) '$(srcdir)/LBFILL.F'; fi`

gcedric-MAJMIN.o: MAJMIN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-MAJMIN.o `test -f 'MAJMIN.F' || echo '$(srcdir)/'`MAJMIN.F

gcedric-MAJMIN.obj: MAJMIN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-MAJMIN.obj `if test -f 'MAJMIN.F'; then $(CYGPATH_W) 'MAJMIN.F'; else $(CYGPATH_W) '$(srcdir)/MAJMIN.F'; fi`

gcedric-MAXZ.o: MAXZ.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-MAXZ.o `test -f 'MAXZ.F' || echo '$(srcdir)/'`MAXZ.F

gcedric-MAXZ.obj: MAXZ.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-MAXZ.obj `if test -f 'MAXZ.F'; then $(CYGPATH_W) 'MAXZ.F'; else $(CYGPATH_W) '$(srcdir)/MAXZ.F'; fi`

gcedric-MEDHST.o: MEDHST.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-MEDHST.o `test -f 'MEDHST.F' || echo '$(srcdir)/'`MEDHST.F

gcedric-MEDHST.obj: MEDHST.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-MEDHST.obj `if test -f 'MEDHST.F'; then $(CYGPATH_W) 'MEDHST.F'; else $(CYGPATH_W) '$(srcdir)/MEDHST.F'; fi`

gcedric-MINMAX.o: MINMAX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-MINMAX.o `test -f 'MINMAX.F' || echo '$(srcdir)/'`MINMAX.F

gcedric-MINMAX.obj: MINMAX.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-MINMAX.obj `if test -f 'MINMAX.F'; then $(CYGPATH_W) 'MINMAX.F'; else $(CYGPATH_W) '$(srcdir)/MINMAX.F'; fi`

gcedric-MYFRAME.o: MYFRAME.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-MYFRAME.o `test -f 'MYFRAME.F' || echo '$(srcdir)/'`MYFRAME.F

gcedric-MYFRAME.obj: MYFRAME.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-MYFRAME.obj `if test -f 'MYFRAME.F'; then $(CYGPATH_W) 'MYFRAME.F'; else $(CYGPATH_W) '$(srcdir)/MYFRAME.F'; fi`

gcedric-MY_PLCHMQ.o: MY_PLCHMQ.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-MY_PLCHMQ.o `test -f 'MY_PLCHMQ.F' || echo '$(srcdir)/'`MY_PLCHMQ.F

gcedric-MY_PLCHMQ.obj: MY_PLCHMQ.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-MY_PLCHMQ.obj `if test -f 'MY_PLCHMQ.F'; then $(CYGPATH_W) 'MY_PLCHMQ.F'; else $(CYGPATH_W) '$(srcdir)/MY_PLCHMQ.F'; fi`

gcedric-OVSETP.o: OVSETP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-OVSETP.o `test -f 'OVSETP.F' || echo '$(srcdir)/'`OVSETP.F

gcedric-OVSETP.obj: OVSETP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-OVSETP.obj `if test -f 'OVSETP.F'; then $(CYGPATH_W) 'OVSETP.F'; else $(CYGPATH_W) '$(srcdir)/OVSETP.F'; fi`

gcedric-PLOTAD.o: PLOTAD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLOTAD.o `test -f 'PLOTAD.F' || echo '$(srcdir)/'`PLOTAD.F

gcedric-PLOTAD.obj: PLOTAD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLOTAD.obj `if test -f 'PLOTAD.F'; then $(CYGPATH_W) 'PLOTAD.F'; else $(CYGPATH_W) '$(srcdir)/PLOTAD.F'; fi`

gcedric-PLOTCH.o: PLOTCH.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLOTCH.o `test -f 'PLOTCH.F' || echo '$(srcdir)/'`PLOTCH.F

gcedric-PLOTCH.obj: PLOTCH.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLOTCH.obj `if test -f 'PLOTCH.F'; then $(CYGPATH_W) 'PLOTCH.F'; else $(CYGPATH_W) '$(srcdir)/PLOTCH.F'; fi`

gcedric-PLTACT.o: PLTACT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLTACT.o `test -f 'PLTACT.F' || echo '$(srcdir)/'`PLTACT.F

gcedric-PLTACT.obj: PLTACT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLTACT.obj `if test -f 'PLTACT.F'; then $(CYGPATH_W) 'PLTACT.F'; else $(CYGPATH_W) '$(srcdir)/PLTACT.F'; fi`

gcedric-PLTDRV.o: PLTDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLTDRV.o `test -f 'PLTDRV.F' || echo '$(srcdir)/'`PLTDRV.F

gcedric-PLTDRV.obj: PLTDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLTDRV.obj `if test -f 'PLTDRV.F'; then $(CYGPATH_W) 'PLTDRV.F'; else $(CYGPATH_W) '$(srcdir)/PLTDRV.F'; fi`

gcedric-PLTHIST.o: PLTHIST.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLTHIST.o `test -f 'PLTHIST.F' || echo '$(srcdir)/'`PLTHIST.F

gcedric-PLTHIST.obj: PLTHIST.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLTHIST.obj `if test -f 'PLTHIST.F'; then $(CYGPATH_W) 'PLTHIST.F'; else $(CYGPATH_W) '$(srcdir)/PLTHIST.F'; fi`

gcedric-PLTLMA.o: PLTLMA.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLTLMA.o `test -f 'PLTLMA.F' || echo '$(srcdir)/'`PLTLMA.F

gcedric-PLTLMA.obj: PLTLMA.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLTLMA.obj `if test -f 'PLTLMA.F'; then $(CYGPATH_W) 'PLTLMA.F'; else $(CYGPATH_W) '$(srcdir)/PLTLMA.F'; fi`

gcedric-PLTNLD.o: PLTNLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLTNLD.o `test -f 'PLTNLD.F' || echo '$(srcdir)/'`PLTNLD.F

gcedric-PLTNLD.obj: PLTNLD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLTNLD.obj `if test -f 'PLTNLD.F'; then $(CYGPATH_W) 'PLTNLD.F'; else $(CYGPATH_W) '$(srcdir)/PLTNLD.F'; fi`

gcedric-PLTSTA.o: PLTSTA.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLTSTA.o `test -f 'PLTSTA.F' || echo '$(srcdir)/'`PLTSTA.F

gcedric-PLTSTA.obj: PLTSTA.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLTSTA.obj `if test -f 'PLTSTA.F'; then $(CYGPATH_W) 'PLTSTA.F'; else $(CYGPATH_W) '$(srcdir)/PLTSTA.F'; fi`

gcedric-PLTVAD.o: PLTVAD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLTVAD.o `test -f 'PLTVAD.F' || echo '$(srcdir)/'`PLTVAD.F

gcedric-PLTVAD.obj: PLTVAD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-PLTVAD.obj `if test -f 'PLTVAD.F'; then $(CYGPATH_W) 'PLTVAD.F'; else $(CYGPATH_W) '$(srcdir)/PLTVAD.F'; fi`

gcedric-RCPU_XY.o: RCPU_XY.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RCPU_XY.o `test -f 'RCPU_XY.F' || echo '$(srcdir)/'`RCPU_XY.F

gcedric-RCPU_XY.obj: RCPU_XY.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RCPU_XY.obj `if test -f 'RCPU_XY.F'; then $(CYGPATH_W) 'RCPU_XY.F'; else $(CYGPATH_W) '$(srcdir)/RCPU_XY.F'; fi`

gcedric-REMINT.o: REMINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-REMINT.o `test -f 'REMINT.F' || echo '$(srcdir)/'`REMINT.F

gcedric-REMINT.obj: REMINT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-REMINT.obj `if test -f 'REMINT.F'; then $(CYGPATH_W) 'REMINT.F'; else $(CYGPATH_W) '$(srcdir)/REMINT.F'; fi`

gcedric-REMPOS.o: REMPOS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-REMPOS.o `test -f 'REMPOS.F' || echo '$(srcdir)/'`REMPOS.F

gcedric-REMPOS.obj: REMPOS.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-REMPOS.obj `if test -f 'REMPOS.F'; then $(CYGPATH_W) 'REMPOS.F'; else $(CYGPATH_W) '$(srcdir)/REMPOS.F'; fi`

gcedric-RGINI.o: RGINI.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RGINI.o `test -f 'RGINI.F' || echo '$(srcdir)/'`RGINI.F

gcedric-RGINI.obj: RGINI.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-RGINI.obj `if test -f 'RGINI.F'; then $(CYGPATH_W) 'RGINI.F'; else $(CYGPATH_W) '$(srcdir)/RGINI.F'; fi`

gcedric-SCLCAL.o: SCLCAL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SCLCAL.o `test -f 'SCLCAL.F' || echo '$(srcdir)/'`SCLCAL.F

gcedric-SCLCAL.obj: SCLCAL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SCLCAL.obj `if test -f 'SCLCAL.F'; then $(CYGPATH_W) 'SCLCAL.F'; else $(CYGPATH_W) '$(srcdir)/SCLCAL.F'; fi`

gcedric-SCTDSP.o: SCTDSP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SCTDSP.o `test -f 'SCTDSP.F' || echo '$(srcdir)/'`SCTDSP.F

gcedric-SCTDSP.obj: SCTDSP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SCTDSP.obj `if test -f 'SCTDSP.F'; then $(CYGPATH_W) 'SCTDSP.F'; else $(CYGPATH_W) '$(srcdir)/SCTDSP.F'; fi`

gcedric-SETCNT.o: SETCNT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SETCNT.o `test -f 'SETCNT.F' || echo '$(srcdir)/'`SETCNT.F

gcedric-SETCNT.obj: SETCNT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SETCNT.obj `if test -f 'SETCNT.F'; then $(CYGPATH_W) 'SETCNT.F'; else $(CYGPATH_W) '$(srcdir)/SETCNT.F'; fi`

gcedric-SETCOL.o: SETCOL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SETCOL.o `test -f 'SETCOL.F' || echo '$(srcdir)/'`SETCOL.F

gcedric-SETCOL.obj: SETCOL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SETCOL.obj `if test -f 'SETCOL.F'; then $(CYGPATH_W) 'SETCOL.F'; else $(CYGPATH_W) '$(srcdir)/SETCOL.F'; fi`

gcedric-SETLIN.o: SETLIN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SETLIN.o `test -f 'SETLIN.F' || echo '$(srcdir)/'`SETLIN.F

gcedric-SETLIN.obj: SETLIN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SETLIN.obj `if test -f 'SETLIN.F'; then $(CYGPATH_W) 'SETLIN.F'; else $(CYGPATH_W) '$(srcdir)/SETLIN.F'; fi`

gcedric-SETPAT.o: SETPAT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SETPAT.o `test -f 'SETPAT.F' || echo '$(srcdir)/'`SETPAT.F

gcedric-SETPAT.obj: SETPAT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SETPAT.obj `if test -f 'SETPAT.F'; then $(CYGPATH_W) 'SETPAT.F'; else $(CYGPATH_W) '$(srcdir)/SETPAT.F'; fi`

gcedric-SHADAM.o: SHADAM.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SHADAM.o `test -f 'SHADAM.F' || echo '$(srcdir)/'`SHADAM.F

gcedric-SHADAM.obj: SHADAM.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SHADAM.obj `if test -f 'SHADAM.F'; then $(CYGPATH_W) 'SHADAM.F'; else $(CYGPATH_W) '$(srcdir)/SHADAM.F'; fi`

gcedric-SIMPLDIG.o: SIMPLDIG.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SIMPLDIG.o `test -f 'SIMPLDIG.F' || echo '$(srcdir)/'`SIMPLDIG.F

gcedric-SIMPLDIG.obj: SIMPLDIG.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SIMPLDIG.obj `if test -f 'SIMPLDIG.F'; then $(CYGPATH_W) 'SIMPLDIG.F'; else $(CYGPATH_W) '$(srcdir)/SIMPLDIG.F'; fi`

gcedric-SMTH1D.o: SMTH1D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SMTH1D.o `test -f 'SMTH1D.F' || echo '$(srcdir)/'`SMTH1D.F

gcedric-SMTH1D.obj: SMTH1D.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SMTH1D.obj `if test -f 'SMTH1D.F'; then $(CYGPATH_W) 'SMTH1D.F'; else $(CYGPATH_W) '$(srcdir)/SMTH1D.F'; fi`

gcedric-SRFACE.o: SRFACE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SRFACE.o `test -f 'SRFACE.F' || echo '$(srcdir)/'`SRFACE.F

gcedric-SRFACE.obj: SRFACE.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SRFACE.obj `if test -f 'SRFACE.F'; then $(CYGPATH_W) 'SRFACE.F'; else $(CYGPATH_W) '$(srcdir)/SRFACE.F'; fi`

gcedric-SRFGK.o: SRFGK.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SRFGK.o `test -f 'SRFGK.F' || echo '$(srcdir)/'`SRFGK.F

gcedric-SRFGK.obj: SRFGK.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-SRFGK.obj `if test -f 'SRFGK.F'; then $(CYGPATH_W) 'SRFGK.F'; else $(CYGPATH_W) '$(srcdir)/SRFGK.F'; fi`

gcedric-STPDRV.o: STPDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-STPDRV.o `test -f 'STPDRV.F' || echo '$(srcdir)/'`STPDRV.F

gcedric-STPDRV.obj: STPDRV.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-STPDRV.obj `if test -f 'STPDRV.F'; then $(CYGPATH_W) 'STPDRV.F'; else $(CYGPATH_W) '$(srcdir)/STPDRV.F'; fi`

gcedric-STPLOT.o: STPLOT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-STPLOT.o `test -f 'STPLOT.F' || echo '$(srcdir)/'`STPLOT.F

gcedric-STPLOT.obj: STPLOT.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-STPLOT.obj `if test -f 'STPLOT.F'; then $(CYGPATH_W) 'STPLOT.F'; else $(CYGPATH_W) '$(srcdir)/STPLOT.F'; fi`

gcedric-STPOBD.o: STPOBD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-STPOBD.o `test -f 'STPOBD.F' || echo '$(srcdir)/'`STPOBD.F

gcedric-STPOBD.obj: STPOBD.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-STPOBD.obj `if test -f 'STPOBD.F'; then $(CYGPATH_W) 'STPOBD.F'; else $(CYGPATH_W) '$(srcdir)/STPOBD.F'; fi`

gcedric-STRMLN.o: STRMLN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-STRMLN.o `test -f 'STRMLN.F' || echo '$(srcdir)/'`STRMLN.F

gcedric-STRMLN.obj: STRMLN.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-STRMLN.obj `if test -f 'STRMLN.F'; then $(CYGPATH_W) 'STRMLN.F'; else $(CYGPATH_W) '$(srcdir)/STRMLN.F'; fi`

gcedric-TSTCOL.o: TSTCOL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-TSTCOL.o `test -f 'TSTCOL.F' || echo '$(srcdir)/'`TSTCOL.F

gcedric-TSTCOL.obj: TSTCOL.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-TSTCOL.obj `if test -f 'TSTCOL.F'; then $(CYGPATH_W) 'TSTCOL.F'; else $(CYGPATH_W) '$(srcdir)/TSTCOL.F'; fi`

gcedric-VECDRW.o: VECDRW.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-VECDRW.o `test -f 'VECDRW.F' || echo '$(srcdir)/'`VECDRW.F

gcedric-VECDRW.obj: VECDRW.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-VECDRW.obj `if test -f 'VECDRW.F'; then $(CYGPATH_W) 'VECDRW.F'; else $(CYGPATH_W) '$(srcdir)/VECDRW.F'; fi`

gcedric-VECDSP.o: VECDSP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-VECDSP.o `test -f 'VECDSP.F' || echo '$(srcdir)/'`VECDSP.F

gcedric-VECDSP.obj: VECDSP.F
	$(F77) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-VECDSP.obj `if test -f 'VECDSP.F'; then $(CYGPATH_W) 'VECDSP.F'; else $(CYGPATH_W) '$(srcdir)/VECDSP.F'; fi`
.F.f:
	$(F77COMPILE) -F $<

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

logic32.o: gbytes/logic32.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT logic32.o -MD -MP -MF $(DEPDIR)/logic32.Tpo -c -o logic32.o `test -f 'gbytes/logic32.c' || echo '$(srcdir)/'`gbytes/logic32.c
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/logic32.Tpo $(DEPDIR)/logic32.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='gbytes/logic32.c' object='logic32.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o logic32.o `test -f 'gbytes/logic32.c' || echo '$(srcdir)/'`gbytes/logic32.c

logic32.obj: gbytes/logic32.c
@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT logic32.obj -MD -MP -MF $(DEPDIR)/logic32.Tpo -c -o logic32.obj `if test -f 'gbytes/logic32.c'; then $(CYGPATH_W) 'gbytes/logic32.c'; else $(CYGPATH_W) '$(srcdir)/gbytes/logic32.c'; fi`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/logic32.Tpo $(DEPDIR)/logic32.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='gbytes/logic32.c' object='logic32.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o logic32.obj `if test -f 'gbytes/logic32.c'; then $(CYGPATH_W) 'gbytes/logic32.c'; else $(CYGPATH_W) '$(srcdir)/gbytes/logic32.c'; fi`

.f.o:
	$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

cedric-gbytes.o: gbytes/gbytes.f
	$(F77) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-gbytes.o `test -f 'gbytes/gbytes.f' || echo '$(srcdir)/'`gbytes/gbytes.f

cedric-gbytes.obj: gbytes/gbytes.f
	$(F77) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-gbytes.obj `if test -f 'gbytes/gbytes.f'; then $(CYGPATH_W) 'gbytes/gbytes.f'; else $(CYGPATH_W) '$(srcdir)/gbytes/gbytes.f'; fi`

cedric-sbytes.o: gbytes/sbytes.f
	$(F77) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-sbytes.o `test -f 'gbytes/sbytes.f' || echo '$(srcdir)/'`gbytes/sbytes.f

cedric-sbytes.obj: gbytes/sbytes.f
	$(F77) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-sbytes.obj `if test -f 'gbytes/sbytes.f'; then $(CYGPATH_W) 'gbytes/sbytes.f'; else $(CYGPATH_W) '$(srcdir)/gbytes/sbytes.f'; fi`

cedric-i1mach.o: gbytes/i1mach.f
	$(F77) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-i1mach.o `test -f 'gbytes/i1mach.f' || echo '$(srcdir)/'`gbytes/i1mach.f

cedric-i1mach.obj: gbytes/i1mach.f
	$(F77) $(cedric_FFLAGS) $(FFLAGS) -c -o cedric-i1mach.obj `if test -f 'gbytes/i1mach.f'; then $(CYGPATH_W) 'gbytes/i1mach.f'; else $(CYGPATH_W) '$(srcdir)/gbytes/i1mach.f'; fi`

gcedric-gbytes.o: gbytes/gbytes.f
	$(F77) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-gbytes.o `test -f 'gbytes/gbytes.f' || echo '$(srcdir)/'`gbytes/gbytes.f

gcedric-gbytes.obj: gbytes/gbytes.f
	$(F77) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-gbytes.obj `if test -f 'gbytes/gbytes.f'; then $(CYGPATH_W) 'gbytes/gbytes.f'; else $(CYGPATH_W) '$(srcdir)/gbytes/gbytes.f'; fi`

gcedric-sbytes.o: gbytes/sbytes.f
	$(F77) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-sbytes.o `test -f 'gbytes/sbytes.f' || echo '$(srcdir)/'`gbytes/sbytes.f

gcedric-sbytes.obj: gbytes/sbytes.f
	$(F77) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-sbytes.obj `if test -f 'gbytes/sbytes.f'; then $(CYGPATH_W) 'gbytes/sbytes.f'; else $(CYGPATH_W) '$(srcdir)/gbytes/sbytes.f'; fi`

gcedric-i1mach.o: gbytes/i1mach.f
	$(F77) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-i1mach.o `test -f 'gbytes/i1mach.f' || echo '$(srcdir)/'`gbytes/i1mach.f

gcedric-i1mach.obj: gbytes/i1mach.f
	$(F77) $(gcedric_FFLAGS) $(FFLAGS) -c -o gcedric-i1mach.obj `if test -f 'gbytes/i1mach.f'; then $(CYGPATH_W) 'gbytes/i1mach.f'; else $(CYGPATH_W) '$(srcdir)/gbytes/i1mach.f'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic cscopelist ctags distclean distclean-compile \
	distclean-generic distclean-hdr distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
