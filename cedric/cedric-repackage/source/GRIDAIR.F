      SUBROUTINE GRIDAIR(XACT,YACT,ZACT,UACT,VACT,WACT,NACT,RBUF,IBUF,
     X                   BEGACT,DELACT,NAMOUT,NST)
C
C     THIS SUBROUTINE HANDLES THE GRIDDING OF AIRCRAFT DATA READ
C     FROM AN ASCII FILE VIA THE READAIR COMMAND.
C
C     XACT    - AIRCRAFT X LOCATIONS 
C     YACT    - AIRCRAFT Y LOCATIONS 
C     ZACT    - AIRCRAFT Z LOCATIONS 
C     UACT    - U COMPONENT OF WIND AT AIRCRAFT LOCATIONS
C     VACT    - V COMPONENT OF WIND AT AIRCRAFT LOCATIONS
C     WACT    - W COMPONENT OF WIND AT AIRCRAFT LOCATIONS
C     NACT    - NUMBER OF POSITIONS FOR WHICH WE HAVE DATA
C     RBUF    - SCRATCH ARRAY
C     ASPD    - ADVECTION SPEED
C     ADIR    - ADVECTION DIRECTION. NOTE: ADVECTION VECTOR IS ALWAYS
C               THE DIRECTION FROM WHICH THE WIND IS COMING AND RELATIVE
C               TO TRUE NORTH.
C     ATIM    - TIME TO WHICH ADVECTION IS DONE
C     BEGACT  - START TIME OF AIRCRAFT DATA
C     DELACT  - TIME BETWEEN AIRCRAFT DATA
C     NAMOUT  - ARRAY OF FIELD NAMES FOR OUTPUT GRIDDED FIELDS


      INCLUDE 'CEDRIC.INC'
      PARAMETER (MXL=20000,NFLDS=3,MXPT=5000)
      COMMON /VOLUME/ INPID(NID),ID(NID),NAMF(4,NFMAX),SCLFLD(NFMAX),
     X     IRCP(NFMAX),MAPVID(NFMAX,2),CSP(3,3),NCX(3),
     X     NCXORD(3),NFL,NPLANE,BAD
      CHARACTER*2 NAMF
      DIMENSION XACT(MXL),YACT(MXL),ZACT(MXL),UACT(MXL),VACT(MXL),
     X          WACT(MXL),RBUF(1),IBUF(1)
      DIMENSION IX(MXPT),IY(MXPT),IZ(MXPT),FIELD(MXPT,NFLDS),
     X          ICNT(MXPT)
      CHARACTER*2 NAME(4)
      CHARACTER*8 NAMOUT(3),CTEMP
      DATA DTR/0.0174533/


      DO I=1,MXPT
         IX(I)=0
         IY(I)=0
         IZ(I)=0
      END DO
      NPT=0

      IUOFLD=0
      IVOFLD=0
      IWOFLD=0
      IF (NAMOUT(1).EQ.' ') IUOFLD=-1
      IF (NAMOUT(2).EQ.' ') IVOFLD=-1
      IF (NAMOUT(3).EQ.' ') IWOFLD=-1
      DO I=1,NFMAX
         WRITE(CTEMP,50)(NAMF(J,I),J=1,4)
 50      FORMAT(4A2)
         IF (CTEMP.EQ.NAMOUT(1) .AND. NAMOUT(1).NE.' ') IUOFLD=I
         IF (CTEMP.EQ.NAMOUT(2) .AND. NAMOUT(2).NE.' ') IVOFLD=I
         IF (CTEMP.EQ.NAMOUT(3) .AND. NAMOUT(3).NE.' ') IWOFLD=I
      END DO
C
C     CHECK FOR MISSING OUTPUT VECTOR COMPONENTS AND CREATE NEW FIELDS IF NEC.
C
      IF (IUOFLD.EQ.0) THEN
         CTEMP=NAMOUT(1)
         DO 70 I=1,4
            K=(I*2)-1
            READ(CTEMP(K:K+1),72)NAME(I)
 72         FORMAT(A2)
 70      CONTINUE
         ISCL=100
         J=IADFLD(NAME,ISCL,6)
         IF (J.LT.0) RETURN
         IUOFLD=J
      END IF
      IF (IVOFLD.EQ.0) THEN
         CTEMP=NAMOUT(2)
         DO 75 I=1,4
            K=(I*2)-1
            READ(CTEMP(K:K+1),72)NAME(I)
 75      CONTINUE
         ISCL=100
         J=IADFLD(NAME,ISCL,6)
         IF (J.LT.0) RETURN
         IVOFLD=J
      END IF
      IF (IWOFLD.EQ.0) THEN
         CTEMP=NAMOUT(3)
         DO 80 I=1,4
            K=(I*2)-1
            READ(CTEMP(K:K+1),72)NAME(I)
 80      CONTINUE
         ISCL=100
         J=IADFLD(NAME,ISCL,6)
         IF (J.LT.0) RETURN
         IWOFLD=J
      END IF

      IF (IUOFLD.NE.-1) IUOFLD=MAPVID(IUOFLD,1)
      IF (IVOFLD.NE.-1) IVOFLD=MAPVID(IVOFLD,1)
      IF (IWOFLD.NE.-1) IWOFLD=MAPVID(IWOFLD,1)


C     MOVE TO NEAREST GRID POINT
      NX=NCX(1)
      NY=NCX(2)
      NZ=NCX(3)
      DO 20 I=1,NACT
         IXLOC=NINT((XACT(I)-CSP(1,1))/CSP(3,1) + 1)
         IYLOC=NINT((YACT(I)-CSP(1,2))/CSP(3,2) + 1)
         IZLOC=NINT((ZACT(I)-CSP(1,3))/CSP(3,3) + 1)
         IF (IXLOC.LT.1 .OR. IXLOC.GT.NX .OR.
     X       IYLOC.LT.1 .OR. IYLOC.GT.NY .OR.
     X       IZLOC.LT.1 .OR. IZLOC.GT.NZ) GOTO 20
         IF (NPT.GT.0) THEN
C     SEE IF GRID POINT IS ALREADY BEING ACCUMULATED TO
            LOC=0
            DO J=1,NPT
               IF (IX(J).EQ.IXLOC .AND. IY(J).EQ.IYLOC .AND.
     X             IZ(J).EQ.IZLOC) THEN
                  LOC=J
               END IF
            END DO
         ELSE
C     FIRST POINT
            LOC=0
         END IF
C     DO THE ACTUAL ACCUMULATING
         IF (LOC.EQ.0) THEN
            NPT=NPT+1
            IF (NPT.GT.MXPT) THEN
               WRITE(*,25)MXPT
 25            FORMAT(/,5X,'+++INTERNAL BUFFER OVERFLOWED IN GRIDAIR.',
     X              ' CONTACT SOFTWARE ENGINEER+++')
               CALL FLUSH_STDOUT
            END IF
            ICNT(NPT)=1
            IX(NPT)=IXLOC
            IY(NPT)=IYLOC
            IZ(NPT)=IZLOC
         ELSE
            ICNT(LOC)=ICNT(LOC)+1
         END IF
         IF (IUOFLD.NE.-1) THEN
            CALL AIRACCUM(UACT,LOC,NPT,FIELD,1,IX,IY,IZ,
     X                    IXLOC,IYLOC,IZLOC,I,ICNT)
         END IF
         IF (IVOFLD.NE.-1) THEN
            CALL AIRACCUM(VACT,LOC,NPT,FIELD,2,IX,IY,IZ,
     X                    IXLOC,IYLOC,IZLOC,I,ICNT)
         END IF
         IF (IWOFLD.NE.-1) THEN
            CALL AIRACCUM(WACT,LOC,NPT,FIELD,3,IX,IY,IZ,
     X                    IXLOC,IYLOC,IZLOC,I,ICNT)
         END IF
 20   CONTINUE

C     AVERAGE DATA
      DO I=1,NPT
         IF (IUOFLD.NE.-1) FIELD(I,1)=FIELD(I,1)/ICNT(I)
         IF (IVOFLD.NE.-1) FIELD(I,2)=FIELD(I,2)/ICNT(I)
         IF (IWOFLD.NE.-1) FIELD(I,3)=FIELD(I,3)/ICNT(I)
      END DO

      NX=NCX(1)
      NY=NCX(2)
      IF (IUOFLD.NE.-1) THEN
         CALL AIROUT(FIELD,IX,IY,IZ,NPT,RBUF,IBUF,1,IUOFLD,NX,NY,NST)
         IF (NST.NE.0) RETURN
      END IF
      IF (IVOFLD.NE.-1) THEN
         CALL AIROUT(FIELD,IX,IY,IZ,NPT,RBUF,IBUF,2,IVOFLD,NX,NY,NST)
         IF (NST.NE.0) RETURN
      END IF
      IF (IWOFLD.NE.-1) THEN
         CALL AIROUT(FIELD,IX,IY,IZ,NPT,RBUF,IBUF,3,IWOFLD,NX,NY,NST)
         IF (NST.NE.0) RETURN
      END IF
      RETURN

      END













