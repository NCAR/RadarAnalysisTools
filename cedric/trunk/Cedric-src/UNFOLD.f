      SUBROUTINE UNFOLD(KRD,IBUF,OBUF,RBUF,IPR,NST)
C
C        PERFORMS UNFOLDING FUNCTIONS ON TWO CONSTANT Z-PLANE DATA
C
C     Parameters for UNFOLD command:
C        P02 = NAMOUF and P03 = NAMINF
C                    *--P04--*--P05--*--P06--*--P07--*--P08--
C     (1) AUTO     - AUTO     LOCDIM  MINPTS  MAXDEV  VNYQ
C     (2) FORCE    - FORCEIN  VNYQ    VREF    VMIN    VMAX
C                  - FORCEOUT VNYQ    VREF    VMIN    VMAX
C     (3) AUTOTEMP - AUTOTEMP NAMTPF  VNYQ    ISPCNX  LEVEL
C     (4) AUTOFILL - AUTOFILL NAMTPF  VNYQ    ISPCNX  LEVEL
C     (5) AUTOSLOP - AUTOSLOP NAMTPF  VNYQ    ISPCNX  LEVEL
C     (6) FORTEMP  - FORTEMP  NAMTPF  VNYQ
C
C          IBUF- SCRATCH BUFFER F0R I/O
C          OBUF- AUXILLIARY BUFFER FOR DATA MANIPULATION
C          RBUF- I/O DATA BUFFER
C        MAXPLN- MAXIMUM DIMENSION OF RBUF,OBUF
C           IPR- PRINT FILE UNIT NUMBER
C           NST- STATUS FLAG:  0- O.K.
C
      INCLUDE 'CEDRIC.INC'      
      DIMENSION IBUF(MAXPLN),OBUF(MAXPLN),RBUF(MAXPLN,2),FLOPAR(5),
     X          PAR(4),NAX(3)
      CHARACTER*(*) KRD(10)
      CHARACTER*8 CTEMP,IPAR(4),IMUNF(6),INOUT(2),MUN,IFORC,BLANK
      COMMON /LEVELS/ VALLEV(MAXZLEV),VALNYQ(MAXZLEV),VNYQ_VOL
      COMMON /AXUNTS/ IUNAXS,LABAXS(3,3),SCLAXS(3,3),AXNAM(3)
      CHARACTER*4 AXNAM
      CHARACTER*3 INOYES(2)
      CHARACTER*2 NAMOUF(4),NAMINF(4),NAMTPF(4)
      COMMON /VOLUME/ INPID(NID),ID(NID),NAMF(4,NFMAX),SCLFLD(NFMAX),
     X                IRCP(NFMAX),MAPVID(NFMAX,2),CSP(3,3),NCX(3),
     X                NCXORD(3),NFL,NPLANE,BAD
      CHARACTER*2 NAMF,IBL
      COMMON /EDINFO/ IEDW(2,3),PEDW(2,3)
      CHARACTER IACT(2)*12
      CHARACTER*1 IFAX,INSID,IDST,IWOP,IREG,ISPAC
      LOGICAL NEWJ
      EQUIVALENCE (FLOPAR(1),  SD),(FLOPAR(2),VNYQ),(FLOPAR(3),VREF),
     X            (FLOPAR(4),VMIN),(FLOPAR(5),VMAX)
      EQUIVALENCE (NCX(1),NX),(NCX(2),NY),(NCX(3),NZ)
      EQUIVALENCE (NAX(1),I1),(NAX(2),I2),(NAX(3),I3)
      DATA IMUNF/'AUTO','FORCE','AUTOTEMP','AUTOFILL',
     X           'AUTOSLOP','FORTEMP'/
      DATA INOUT/ 'OUTSIDE','INSIDE' /
      DATA INSID,IDST/'I','D'/
      DATA IACT/' DEACTIVATED',' ACTIVATED'/
      DATA IBL/'  '/
      DATA BLANK/'        '/
C
C        INITIALIZATION OF UNFOLDING PARAMETERS
C
      DO I=1,4
         IPAR(I)=BLANK
         PAR(I)=0.0
      END DO
      DO I=1,5
         FLOPAR(I)=0.0
      END DO
      VNYQ_INP=0.0

      READ (KRD,100)NAMOUF,NAMINF,MUN,IPAR,IFAX,IWOP
C  100 FORMAT(8X,8A2,A8,4A8,A1,7X,A1)
 100  FORMAT(/4A2/4A2/A8/A8/A8/A8/A8/A1/A1)
      IFLD=LOCFLDID(NAMINF,ID(176),5,NFL,4)
      IF(IFLD.EQ.0) THEN
         CALL CEDERX(501,1)
         RETURN
      END IF
      IF(NAMOUF(1).EQ.IBL) CALL COPCX(NAMOUF,NAMINF,4)
      IV=MAPVID(IFLD,2)
      ISCL=SCLFLD(IV)
      I=IADFLD(NAMOUF,ISCL,IPR)
      IF (I.LT.0) RETURN
      IF(I.EQ.0) THEN
         NEWJ=.FALSE.
      ELSE
         NEWJ=.TRUE.
         IFLD=LOCFLDID(NAMINF,ID(176),5,NFL,4)
      END IF
      JFLD=LOCFLDID(NAMOUF,ID(176),5,NFL,4)
      CALL SETAXS(NAX,IFAX,IPR)
      N1=NCX(I1)
      N2=NCX(I2)
      N3=NCX(I3)
      NPLIN=N1*N2
      CALL WINSET(IEDW,PEDW,IWOP)
C
C     DETERMINE UNFOLDING METHOD
C     CHECK FOR FORCED UNFOLDING- DECODE IREG (INSIDE/OUTSIDE FLAG)
C
      WRITE (CTEMP,120)MUN
 120  FORMAT(A8)
      READ (CTEMP,106)IFORC,IREG
  106 FORMAT(A5,A1)
      I=IFINDC(IFORC,IMUNF,6,0)
      IF(I.EQ.2) MUN=IFORC
      IOPT=IFINDC(MUN,IMUNF,6,0)
      IF(IOPT.EQ.0) THEN
         CALL CEDERX(510,1)
         RETURN
      END IF
      IF(IOPT.LE.2) THEN
C
C        NO TEMPLATE SPECIFIED
C
         READ (IPAR,101)(PAR(I),I=1,4)
C  101    FORMAT(4F8.0)
 101     FORMAT(F8.0/F8.0/F8.0/F8.0)
      ELSE
C
C        TEMPLATE FIELD UNFOLDING
C
         READ (IPAR(1),102)(NAMTPF(I),I=1,4)
  102    FORMAT(4A2)
         MFLD=LOCFLDID(NAMTPF,ID(176),5,NFL,4)
         IF(MFLD.EQ.0) THEN
            CALL CEDERX(511,1)
            RETURN
         END IF
         READ (IPAR,103)PAR(2),ISPAC,PAR(4)
C  103    FORMAT(F8.0,A1,7X,F8.0)
 103     FORMAT(/F8.0/A1/F8.0)
         IFET=MFLD
      END IF

      VNYQ_ID=FLOAT(ID(304))/ID(68)
      SD=VNYQ_ID*0.50
      NBOX=3
      NMIN=4
      INOD=1
      L1=1
      ISLOP=0
      IFILTM=0

      print *,'UNFOLD: method=',imunf(iopt)
      print *,'UNFOLD: par=',par
      print *,'UNFOLD: ipar=',ipar
      print *,'UNFOLD: flopar=',flopar
      print *,' '

C
C     IOPT: (1) AUTO,     (2) FORCE,    (3) AUTOTEMP,
C           (4) AUTOFILL, (5) AUTOSLOP, (6) FORTEMP
C
      GO TO (40,50,60,60,60,60), IOPT

   40 CONTINUE
C
C        AUTO: SET PARAMETERS FOR AUTOMATIC UNFOLDING
C
      ITYP=0
      DO 45 IP=1,4
         I=PAR(IP)
         IF(IP.EQ.1) THEN
            IF(MOD(I,2).EQ.1) NBOX=I
         ELSE IF(IP.EQ.2) THEN
            IF(I.GT.0) NMIN=I
         ELSE IF(IP.GE.3) THEN
            IF(PAR(IP).GT.0.0) FLOPAR(IP-2)=PAR(IP)
         END IF
   45 CONTINUE
      IF(PAR(4).GT.0.0) VNYQ_INP=PAR(4)
      print *,'UNFOLD: auto, vnyq_inp=',vnyq_inp
      GO TO 81

   50 CONTINUE
C
C        FORCEIN/OUT: SET PARAMETERS FOR FORCED UNFOLDING
C
      ITYP=2
      DO 55 IP=1,4
         FLOPAR(IP+1)=PAR(IP)
   55 CONTINUE
      IF(IREG.EQ.INSID) INOD=2
      IF(PAR(1).GT.0.0) VNYQ_INP=PAR(1)
      print *,'UNFOLD: force, vnyq_inp=',vnyq_inp
      GO TO 81

   60 CONTINUE
C
C        AUTOTEMP, AUTOFILL, AUTOSLOP, FORTEMP:
C           SET PARAMETERS FOR TEMPLATE UNFOLDING
C
      IF(PAR(2).GT.0.0) VNYQ_INP=PAR(2)
      print *,'UNFOLD: template, vnyq_inp=',vnyq_inp
      IF(IOPT.EQ.6) GO TO 80
      IF(IOPT.EQ.4) IFILTM=1
      IF(IOPT.EQ.5) ISLOP=1
      IF(ISPAC.EQ.IDST) THEN
C
C        DISTANCE SPACE
C
         DKM=PAR(4)/SCLAXS(I3,IUNAXS)
         LTEM=(DKM-CSP(1,I3))/CSP(3,I3) + 1.5
      ELSE
C
C        INDEX SPACE
C
         LTEM=PAR(4)
      END IF
      IF(LTEM.LT.IEDW(1,I3).OR.LTEM.GT.IEDW(2,I3)) LTEM=IEDW(1,I3)
      IF(IOPT.EQ.5.AND.LTEM.GE.N3) LTEM=N3-1
      L1=LTEM
      ATEM=(CSP(1,I3)+(LTEM-1)*CSP(3,I3))*SCLAXS(I3,IUNAXS)

   80 CONTINUE
      ITYP=IFILTM+2
   81 CONTINUE

      print *,'UNFOLD: after 81'
      print *,'UNFOLD: method=',imunf(iopt)
      print *,'UNFOLD: par=',par
      print *,'UNFOLD: ipar=',ipar
      print *,'UNFOLD: flopar=',flopar
      print *,' '
C
C        INITIATE THE VELOCITY UNFOLDING PROCESS
C
C
C        ESTABLISH REGION OVER WHICH TO UNFOLD
C
      IADJ=NBOX/2
      JBEG=IEDW(1,I2)
      JEND=IEDW(2,I2)
      IBEG=IEDW(1,I1)
      IEND=IEDW(2,I1)
      VPTS=NMIN
C
C        SEND A SUMMARY OF THIS EDITING STEP TO THE PRINT FILE
C
      IF(VNYQ_INP.GT.0.0)THEN
         VNYQ=VNYQ_INP
      END IF
      IF(VNYQ.EQ.0.0)VNYQ=VNYQ_VOL
      IF(VNYQ.EQ.0.0)VNYQ=VNYQ_ID

      CALL SHOEDW(IPR)
      CALL SHOEDF(IPR)
      WRITE(IPR,108) (NAMINF(I),I=1,4),(NAMOUF(I),I=1,4)
 108  FORMAT(/'  INPUT FIELD: ',4A2/' OUTPUT FIELD: ',4A2)
      IF(IOPT.EQ.1)WRITE(IPR,104)NBOX,NBOX,NMIN,SD,VNYQ
 104  FORMAT(/3X,'AUTOMATIC UNFOLDING-  PARAMETERS ...'/
     X 8X,'1- DIMENSION OF DECIMATION REGION:',15X,'(',I2,' BY )',I4/
     X 8X,'2- MINIMUM ACCEPTABLE NUMBER OF POINTS IN THE REGION:',I8/
     X 8X,'3-         MAXIMUM DEVIATION OF VALUES FROM THE MEAN:',F8.2/
     X 8X,'4-   NYQUIST VELOCITY (M/S) TO BE USED FOR UNFOLDING:',F8.2)
      IF(IOPT.EQ.2)WRITE(IPR,105)(FLOPAR(I),I=2,5),INOUT(INOD)
 105  FORMAT(/3X,'FORCED UNFOLDING-  PARAMETERS ...'/
     X 8X,'1-           NYQUIST VELOCITY (M/S):',F7.2/
     X 8X,'2-         REFERENCE VELOCITY (M/S):',F7.2/
     X 8X,'3- MINIMUM VALUE OF VELOCITY WINDOW:',F7.2/
     X 8X,'4- MAXIMUM VALUE OF VELOCITY WINDOW:',F7.2/
     X 8X,'5- UNFOLD VELOCITIES THAT ARE ',A8,'THE VELOCITY WINDOW')
      IF(IOPT.GE.3.AND.IOPT.LE.5) WRITE(IPR,117)
     X(NAMTPF(I),I=1,4),INOYES(IFILTM+1),VNYQ,LTEM,ATEM,LABAXS(3,IUNAXS)
     X,IACT(ISLOP+1)
 117  FORMAT(/3X,'AUTOMATIC TEMPLATE FIELD UNFOLDING-  PARAMETERS ...'/
     X 8X,'1-      TEMPLATE FIELD NAME: ',4A2/
     X 8X,'2- DATA FILLING OF TEMPLATE: ',A3/
     X 8X,'3-   NYQUIST VELOCITY (M/S): ',F7.2/
     X 8X,'4-        START AT PLANE',I3,':',F7.2,1X,A4/
     X 8X,'5-    SLOPE PRESERVATION IS:',A12)
      IF(IOPT.EQ.6)WRITE(IPR,110)(NAMTPF(I),I=1,4),VNYQ
 110  FORMAT(/3X,'FORCED TEMPLATE FIELD UNFOLDING-  PARAMETERS ...'/
     X 8X,'1-    TEMPLATE FIELD NAME: ',4A2/
     X 8X,'2- NYQUIST VELOCITY (M/S): ',F7.2)
      IDIR=1
      L2=N3
   82 CONTINUE
C
C        LOOP THROUGH CONSTANT-Z PLANES
C
      print *,'UNFOLD: level header VNYQs=',(valnyq(l),l=l1,l2)

      DO 89 L=L1,L2
         LEV=L
         IF(IDIR.LT.0) LEV=L2-L+1
         IF(LEV.GE.IEDW(1,I3).AND.LEV.LE.IEDW(2,I3)) GO TO 84
C
C           PLANE IS OUTSIDE EDITING WINDOW
C
            IF(.NOT.NEWJ) GO TO 89
               CALL FETCHD(IEDFL,ID,LEV,IFLD,IBUF,RBUF,
     X                     NIX,NIY,I3,BAD,ZLEV,NST)
               GO TO 88
   84    CONTINUE

      IF(VNYQ_INP.EQ.0.0)VNYQ=VALNYQ(LEV)
      IF(VNYQ.EQ.0.0)VNYQ=VNYQ_VOL
      IF(VNYQ.EQ.0.0)VNYQ=VNYQ_ID

      IF(VNYQ.EQ.0.0)THEN
         print *,' '
         print *,'++++ UNFOLD STOP: Unfolding Nyquist velocity = 0 ++++'
         print *,' '
         STOP
      END IF

      SD=VNYQ*0.50
      ZLEV=VALLEV(LEV)

      write(*,1770)lev,zlev,vnyq_vol,valnyq(lev),vnyq_inp,vnyq
 1770 format('   UNFOLD: nlev,zlev,vnyq vol-lev-inp=',i5,4f10.3,
     +     ' will use vnyq=',f10.3)

      IF(IOPT.NE.5) GO TO 85
C
C        AUTOSLOP OPTION- ORGANIZE TEMPLATE AND UNFOLD
C
         IF(LEV.EQ.LTEM) THEN
            IF(IDIR.GT.0) THEN
               CALL FETCHD(IEDFL,ID,LEV,MFLD,IBUF,OBUF,
     X                     NIX,NIY,I3,BAD,ZLEV,NST)
               CALL COPRX(RBUF(1,2),OBUF,NPLIN)
            ELSE
               CALL FETCHD(IEDFL,ID,LEV+1,JFLD,IBUF,RBUF(1,1),
     X                     NIX,NIY,I3,BAD,ZLEV,NST)
               CALL FETCHD(IEDFL,ID,LEV,JFLD,IBUF,RBUF(1,2),
     X                     NIX,NIY,I3,BAD,ZLEV,NST)
               CALL UNFSLP(RBUF(1,2),RBUF(1,1),OBUF,N1,N2,
     X                     IBEG,IEND,JBEG,JEND,VNYQ,BAD,1)
               GO TO 89
            END IF
         END IF
C
C            PERFORM THE UNFOLDING OF THIS LEVEL- AUTOSLOP METHOD
C
         CALL FETCHD(IEDFL,ID,LEV,IFLD,IBUF,RBUF,
     X               NIX,NIY,I3,BAD,ZLEV,NST)
         CALL UNFSLP(RBUF(1,1),RBUF(1,2),OBUF,N1,N2,
     X               IBEG,IEND,JBEG,JEND,VNYQ,BAD,0)
         GO TO 88
   85 CONTINUE
C
C           PROCEED WITH THE UNFOLDING OF THIS PLANE
C
         CALL FETCHD(IEDFL,ID,LEV,IFLD,IBUF,RBUF,NIX,NIY,I3,BAD,
     X               ZLEV,NST)
         IF(IOPT.NE.2) GO TO 86
C
C           FORCED UNFOLDING- DIRECTLY ALTER THE BUFFER CONTENTS
C
            CALL UNPFOR(RBUF,N1,N2,IBEG,IEND,JBEG,JEND,
     X                  VREF,VNYQ,VMIN,VMAX,BAD,INOD)
            GO TO 88
   86    CONTINUE
         IF(IOPT.EQ.1) THEN
C
C           AUTOMATIC UNFOLDING- DECIMATE THE INPUT DATA
C
            CALL COPRX(OBUF,RBUF,NPLIN)
         ELSE IF(IOPT.EQ.6.OR.((IOPT.EQ.3.OR.IOPT.EQ.4).AND.
     X                                         LEV.EQ.LTEM)) THEN
C
C           TEMPLATE FIELD UNFOLDING- FETCH TEMPLATE
C
            CALL FETCHD(IEDFL,ID,LEV,IFET,IBUF,OBUF,
     X                  NIX,NIY,I3,BAD,ZLEV,NST)
            IF(IDIR.LT.0.AND.LEV.EQ.LTEM) GO TO 89
         END IF
         CALL UNPAUT(RBUF,OBUF,N1,N2,IBEG,IEND,JBEG,JEND,IADJ,
     X               VNYQ,VPTS,SD,BAD,ITYP)
   88    CONTINUE
C
C           FINISHED WITH UNFOLDING THIS PLANE- WRITE OUT RESULTS
C
         CALL PLACED(IEDFL,ID,LEV,JFLD,IBUF,RBUF,N1,N2,I3,BAD,NST)
   89 CONTINUE
      IF((IOPT.GE.3.AND.IOPT.LE.5).AND.IDIR.GE.0) THEN
C
C         AUTOMATIC TEMPLATE UNFOLDING-
C         RESET LOOP PARAMETERS AND UNFOLD FROM TOP TO BOTTOM.
C
         IF(LTEM.EQ.1) GO TO 90
         IDIR=-1
         L1=1
         L2=LTEM
         IFET=JFLD
         GO TO 82
      END IF
   90 CONTINUE
      NST=0
      RETURN
      END
