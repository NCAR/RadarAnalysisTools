      SUBROUTINE WINDIJ(KRD,IOPT)
C
C        ESTABLISHES A WINDOW IN THREE DIMENSIONS (X,Y AND Z)
C                    IOPT=1, RESET TO FULL EXTENT OF DATA STRUCTURE
C                        =0, PERMIT THE USER TO SPECIFY THE WINDOW
C

      INCLUDE 'CEDRIC.INC'      
      COMMON /VOLUME/ INPID(NID),ID(NID),NAMF(4,NFMAX),SCLFLD(NFMAX),
     X                IRCP(NFMAX),MAPVID(NFMAX,2),CSP(3,3),NCX(3),
     X                NCXORD(3),NFL,NPLANE,BAD
      CHARACTER*2 NAMF
      COMMON /AXUNTS/ IUNAXS,LABAXS(3,3),SCLAXS(3,3),AXNAM(3)
      CHARACTER*4 AXNAM
      COMMON /LEVELS/ VALLEV(MAXZLEV),VALNYQ(MAXZLEV),VNYQ_VOL
      COMMON /UNITS/ LIN,LOUT,LPR,LSPOOL
      COMMON /SETWND/ ISETW(2,3),PSETW(2,3),ISETFL(NFMAX)
      CHARACTER*1 JTAB(3),JTYP,IBL
      CHARACTER*8 CTEMP,DW(2,3),KRD(8)
      CHARACTER*64 DUMKRD
      DIMENSION PLASK(2,3),LAX(3)
      DATA JTAB/'I','D','F'/
C
C        WINDOWING MAY BE DONE IN EITHER INDEX OR DISTANCE SPACE
C
      DATA LAX/'X','Y','Z'/
      DATA IBL/' '/
      MLEV=MAXZLEV
      J=3

      IF(IOPT.NE.0) GO TO 10
C
C        DECODE WINDOW CARD AND SEE WHICH TYPE OF UPDATE IS DESIRED
C

      WRITE (DUMKRD,250)KRD
 250  FORMAT(8A8)
      READ (DUMKRD,100)JTYP, ((DW(I,J),I=1,2),J=1,3)
 100  FORMAT(8X,A1,7X,6A8)
      J=IFINDC(JTYP,JTAB,3,0)
      IF(J.LE.0) J=3
   10 CONTINUE
      DO 20 L=1,3
      IF(J.EQ.3) GO TO 15
      IF(DW(1,L).EQ.IBL.AND.DW(2,L).EQ.IBL) GO TO 15
      WRITE (CTEMP,150)DW(1,L)
      READ (CTEMP,104)D1
      WRITE (CTEMP,150)DW(2,L)
 150  FORMAT(A8)
      READ (CTEMP,104)D2
  104 FORMAT(F8.0)
      IF(J.EQ.1) THEN
C
C        HERE IF INDEX SPACE
C
         I=D1
         IF(I.LE.0) I=1
         IF(I.GT.NCX(L)) I=NCX(L)
          ISETW(1,L)=I
         I=D2
         IF(I.LE.0) I=1
         IF(I.GT.NCX(L)) I=NCX(L)
          ISETW(2,L)=I
         PSETW(1,L)=CSP(1,L)+(ISETW(1,L)-1)*CSP(3,L)
         PSETW(2,L)=CSP(1,L)+(ISETW(2,L)-1)*CSP(3,L)
      ELSE
C
C        HERE IF DISTANCE SPACE
C
         PSETW(1,L)=D1/SCLAXS(L,IUNAXS)
         PSETW(2,L)=D2/SCLAXS(L,IUNAXS)
         DIV=1.0
         IF(CSP(3,L).GT.0.0) DIV=1./CSP(3,L)

         IF (L.EQ.3) THEN
            ISETW(1,L)=LOCINT(PSETW(1,L),VALLEV,MLEV,1,1)
            IF (ISETW(1,L).EQ.0) 
     X           ISETW(1,L)=(PSETW(1,L)-CSP(1,L))*DIV + 1.5
            ISETW(2,L)=LOCINT(PSETW(2,L),VALLEV,MLEV,1,1)
            IF (ISETW(2,L).EQ.0) 
     X           ISETW(2,L)=(PSETW(2,L)-CSP(1,L))*DIV + 1.5
         ELSE
            ISETW(1,L)=(PSETW(1,L)-CSP(1,L))*DIV + 1.5
            ISETW(2,L)=(PSETW(2,L)-CSP(1,L))*DIV + 1.5
         END IF
         IF(ISETW(1,L).LE.0) ISETW(1,L)=1
         IF(ISETW(2,L).GT.NCX(L)) ISETW(2,L)=NCX(L)
      END IF
      GO TO 20
   15 CONTINUE
C
C        RESET TO FULL WINDOW
C
         ISETW(1,L)=1
         ISETW(2,L)=NCX(L)
         PSETW(1,L)=CSP(1,L)
         PSETW(2,L)=CSP(2,L)
   20 CONTINUE
C
C        SUMMARIZE THE NEW WINDOW
C
      WRITE(LPR,101)
  101 FORMAT(/' CURRENT WINDOW LOOKS LIKE THIS:'
     X       /18X,'INDICES',19X,'DISTANCES'
     X       /' AXIS  POSN.    MIN     MAX',10X,
     X        'MIN       MAX    UNITS')
      DO 30 I=1,3
      PLASK(1,I)=PSETW(1,I)*SCLAXS(I,IUNAXS)
      PLASK(2,I)=PSETW(2,I)*SCLAXS(I,IUNAXS)
      WRITE(LPR,102) AXNAM(I),NCXORD(I),ISETW(1,I),ISETW(2,I),
     X          PLASK(1,I),PLASK(2,I),LABAXS(I,IUNAXS)
  102 FORMAT(3X,A1,4X,I2,6X,I3,5X,I3,7X,F7.2,3X,F7.2,4X,A4)
   30 CONTINUE
      RETURN
      END
