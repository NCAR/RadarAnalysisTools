c
c----------------------------------------------------------------------X
c
      SUBROUTINE SAVSCAT(INDAT,NAMFLD,IFLD,NFLDS,SRMN,SRMX,SAMN,SAMX,
     X     SZMN,SZMX,ISKP,JSKP,NAS,IXNAM,XFMN,XFMX,IYNAM,YFMN,YFMX,
     X     SLOP,YCEPT,RLAG,ALAG,NSMX,MXF,MSKP,NSKP,SMATCH,REFCOLR)
C
C  CONTINUE READING PLTSCAT STACK FOR PAIRS OF FIELDS TO BE PLOTTED
C
C     NAS       - NUMBER OF SCATTERGRAMS TO BE PLOTTED
C     SRMN,SRMX - MINIMUM AND MAXIMUM RANGE  (KM) FOR ACCUMULATING SCATTERGRAM
C     SAMN,SAMX -    "     "     "    ANGLE (DEG)  "        "           "
C     SZMN,SZMX -    "     "     "    HEIGHT (KM)  "        "           "
C     ISKP,JSKP - PER-SCAN           RANGE AND ANGLE SKIPPING FACTORS
C     MSKP,NSKP - VOLUME-ACCUMULATED   "    "    "       "       "
C     SMATCH    - Match angular skipping factor to range skipping factor
C     REFCOLR   - Color to be used for reference lines
C     IXNAM     - NAME OF THE FIELD TO BE PLOTTED ALONG THE ABSCISSA (X)
C     XFMN,XFMX - MINIMUM AND MAXIMUM VALUE OF THE ABSCISSA FIELD
C     IYNAM     - NAME OF THE FIELD TO BE PLOTTED ALONG THE ORDINATE (Y)
C     YFMN,YFMX - MINIMUM AND MAXIMUM VALUE OF THE ORDINATE FIELD
C     SLOP,YCEPT- SLOPE AND INTERCEPT OF LINE TO BE DRAWN ON SCATTER PLOT
C     RLAG,ALAG - LAG ORDINATE (Y) FIELD THESE AMOUNTS IN RANGE AND ANGLE
C                 BEFORE PLOTTING
C     NANG      - NUMBER OF ANGLES IN THE CURRENT SWEEP
C
      CHARACTER*8 INDAT(10),JNDAT(10),ASLOP
      CHARACTER*8 NAMFLD(MXF),IXNAM(NSMX),IYNAM(NSMX)
      CHARACTER*8 BLANK,ISKIP,JSKIP
      CHARACTER*4 NAMOUT,SMATCH
      CHARACTER*2 REFCOLR
      DATA NAMOUT,BLANK/'    ','        '/
      DIMENSION IFLD(MXF)
      DIMENSION XFMN(NSMX),XFMX(NSMX)
      DIMENSION YFMN(NSMX),YFMX(NSMX)
      DIMENSION SLOP(NSMX),YCEPT(NSMX)
      DIMENSION RLAG(NSMX),ALAG(NSMX)

      NAS=0
      MSKP=1
      NSKP=0
      SMATCH='    '
c      WRITE(6,11)(INDAT(I),I=2,10)
   11 FORMAT(1X,'PSCAT: ',9A8)
      READ(INDAT,13)SRMN,SRMX,ISKIP,SAMN,SAMX,JSKIP,SZMN,SZMX,SMATCH,
     X     REFCOLR
   13 FORMAT(/F8.0/F8.0/A8/F8.0/F8.0/A8/F8.0/F8.0/A4,A2,2X)
      IF(REFCOLR.EQ.'  ')REFCOLR='rr'
      IF(SMATCH.NE.'YES')SMATCH='NO'
      IF(ISKIP.EQ.BLANK)THEN
         ISKP=1
      ELSE
         READ(ISKIP,14)RSKP
 14      FORMAT(F4.0)
         ISKP=NINT(RSKP)
         IF(ISKP.LE.0)ISKP=1
         READ(ISKIP,15)RSKP
 15      FORMAT(4X,F4.0)
         MSKP=NINT(RSKP)
      END IF
      IF(JSKIP.EQ.BLANK)THEN
         JSKP=1
      ELSE
         READ(JSKIP,14)RSKP
         JSKP=NINT(RSKP)
         IF(JSKP.LE.0)JSKP=1
         READ(JSKIP,15)RSKP
         NSKP=NINT(RSKP)
      END IF
      IF(MSKP.LE.0.AND.NSKP.LE.0)THEN
         MSKP=1
         NSKP=0
      END IF
      IF(SZMN.LE.0.0 .AND. SZMX.LE.0.0)THEN
         SZMN=-999.0
         SZMX= 999.0
      END IF
      write(*,*)'PLTSCAT - Range:',srmn,srmx,iskp,mskp
      write(*,*)'PLTSCAT - Angle:',samn,samx,jskp,nskp

C     READ FIELD NAMES, MIN VALUES, MAX VALUES UNTIL END-OF-STACK
C
   20 READ(5,21)(JNDAT(I),I=1,10)
   21 FORMAT(10A8)
c      WRITE(6,22)(JNDAT(I),I=1,10)
c   22 FORMAT('Kardin=',10A8)
      IF(JNDAT(1)(1:1).EQ.'*')GO TO 20
      IF(JNDAT(1).EQ.'END     ')RETURN
      IF(JNDAT(1).NE.'        ')THEN
         WRITE(6,23)
   23    FORMAT(1X,'*** SAVSCAT: NO END LINE ENCOUNTERED ***')
         STOP
      END IF
      NAS=NAS+1
      IF(NAS.GT.NSMX)THEN
         WRITE(6,25)NSMX
   25    FORMAT(1X,'*** SAVSCAT: NO. PLOTS EXCEEDS',I3,' - STOP ***')
         STOP
      END IF
      READ(JNDAT,27)IXNAM(NAS),XFMN(NAS),XFMX(NAS),
     +              IYNAM(NAS),YFMN(NAS),YFMX(NAS),
     +              ASLOP,YCEPT(NAS),RLAG(NAS),ALAG(NAS)
   27 FORMAT(/A8/F8.0/F8.0/A8/F8.0/F8.0/A8/F8.0/F4.0,F4.0)
      IF(ASLOP.EQ.'HORZ')THEN
         SLOP(NAS)=-99.9
      ELSE IF(ASLOP.EQ.'VERT')THEN
         SLOP(NAS)=99.9
      ELSE IF(ASLOP.EQ.'NLDN')THEN
         SLOP(NAS)=999.9
      ELSE IF(ASLOP.EQ.'LMA')THEN
         SLOP(NAS)=-999.9
      ELSE IF(ASLOP.EQ.'REGR')THEN
         SLOP(NAS)=-1000.0
      ELSE
         READ(ASLOP,28)SLOP(NAS)
 28      FORMAT(F8.0)
      END IF
C
      CALL FIELD(IXNAM(NAS),NAMFLD,NFLDS,NAMOUT)
      IFLX=IFIND(IXNAM(NAS),NAMFLD,MXF)
      WRITE(6,29)NAS,NAMFLD(IFLX),IFLX,IFLD(IFLX),XFMN(NAS),
     +           XFMX(NAS)
   29 FORMAT(8X,'#',I2,' X AXIS: NAM,IFL,IFLD,FMN-MX= ',A8,2I4,2F8.2)
      CALL FIELD(IYNAM(NAS),NAMFLD,NFLDS,NAMOUT)
      IFLY=IFIND(IYNAM(NAS),NAMFLD,MXF)
      WRITE(6,30)NAMFLD(IFLY),IFLY,IFLD(IFLY),YFMN(NAS),YFMX(NAS)
   30 FORMAT(11X,' Y AXIS: NAM,IFL,IFLD,FMN-MX= ',A8,2I4,2F8.2)
      WRITE(6,32)SLOP(NAS),YCEPT(NAS),RLAG(NAS),ALAG(NAS)
   32 FORMAT(11X,'        SLOPE-INTERCEPT,LAGS= ',4F8.2)
      IF((IFLD(IFLX).GE.0.AND.IFLD(IFLY).LT.0).OR.
     +   (IFLD(IFLY).GE.0.AND.IFLD(IFLX).LT.0))THEN
         WRITE(6,33)
   33    FORMAT(1X,'*** WARNING FIELD TYPES ARE INCOMPATIBLE ***')
         NAS=NAS-1
      END IF
      IF(NAS.GE.2)THEN
         IF(IXNAM(NAS).NE.IXNAM(NAS-1).OR.
     +      IYNAM(NAS).NE.IYNAM(NAS-1))THEN
            IF((XFMX(NAS)-XFMN(NAS)).LE.0.0 .OR. 
     +         (YFMX(NAS)-YFMN(NAS)).LE.0.0)THEN
               WRITE(6,41)
 41            FORMAT(1X,'*** WARNING AXES WERE POORLY DEFINED ***')
               NAS=NAS-1
            END IF
         END IF
      END IF

      GO TO 20
      END
