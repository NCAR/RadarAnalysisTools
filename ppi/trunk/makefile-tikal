SHELL=/bin/sh
#
#  simple makefile-tikal for PPI_MMM; to create executable, type
#	make -f makefile-tikal
#
# it will compile the fortran modules indicated by SRCS into the object
# modules indicated by OBJS and produce an executable named a.out.
#
include makefiles.list

# Tunable parameters
#
# CFT		Name of the fortran compiling system to use
# FFLAGS	Flags to the fortan compiler
# LDR		Name of the loader
# LDFLAGS	Flags to the loader
# LIBS		List of libraries
# COMMMAND	Name of the executable
# PROFLIB	Library needed for profiling
#
CFT 	= 	gfortran -fPIC -fno-second-underscore -fno-range-check -O
LDR	=	gfortran -fPIC -fno-second-underscore -fno-range-check -O
LIBS	=	-L/opt/local/lib -lgfortran -lgcc -lm -lX11 -lXext -lz -lpng
NG_LIBS	= 	-L/usr/lib64/ncarg -lncarg -lncarg_gks -lncarg_ras -lncarg_c
GC_LIBS =	-L/usr/lib/gcc/x86_64-redhat-linux/3.4.6 -lg2c

COMMAND=	ppi_tikal.e
#
FFLAGS	=	-g -static -O0
CFLAGS	=	-g -O0
LDFLAGS =       -static -libgcc
LDFLAGS	= -L/usr/lib64 -L/usr/lib/gcc -L/opt/local/lib -L/usr/lib -L/usr/local/lib64 -L/usr/local/lib

# Lines from here on down should not need to be changed.  They are the
# actual rules which make uses to build a.out.
#
$(COMMAND):	$(OBJS)
	$(LDR) $(LDFLAGS) -o $(COMMAND) $(OBJS) $(LIBS) $(NG_LIBS) $(GC_LIBS)

include includes.list

clean:
	rm -f *.o *.l

clobber:	clean
	rm -f $(COMMAND)

void:	clobber
	rm -f $(SRCS) makefile
