      SUBROUTINE CRTHIN(IUN,IBUF,LBF,NST,ITEM,IREW)
C     
C     READS IN 16 BIT PACKED CARTESIAN HEADER
C     -UNPACKS       AND
C     -CHECKS FOR NEGATIVE VALUES
C     

	Include 'common3.h'

      CHARACTER*7 CTEMP
      DIMENSION IBUF(510),ITEM(510)
      DATA MODE,NTYPE,IBIT,NBITS,NSKIP/1,2,0,16,0/
      INTEGER MBYTE,FBYTE
      integer i1
      
      
      NST=0
      INUNIT=IUN
C     
C     READ IN ID HEADER FROM PURE BINARY FILE
C     
      WRITE(CTEMP,27)INUNIT
 27   FORMAT(I3)
      READ(CTEMP,35)NUM1
 35   FORMAT(I1)
      READ(CTEMP,37)NUM2
 37   FORMAT(1X,I1)
C     
C     GET ID HEADER FOR FILE
C     
      CALL CINHEAD(INUNIT,NUM1,NUM2,IBUF,IREW,MBYTE,FBYTE,
     & data_file(1:i1))
      CALL GBYTES(IBUF,ITEM,IBIT,NBITS,NSKIP,LBF)
      
      IF (MBYTE.EQ.0 .AND. FBYTE.EQ.0) THEN
C
C     BIG ENDIAN -> BIG ENDIAN (E.G., SUN->SUN)
C
         CALL ASDPMD(ITEM(1),IBUF(1),20)
         CALL ALTER(ITEM(21),IBUF(21),22)
         CALL ASDPMD(ITEM(43),IBUF(43),16)
         CALL ALTER(ITEM(60),IBUF(60),2)
         CALL ASDPMD(ITEM(62),IBUF(62),1)
         CALL ALTER(ITEM(63),IBUF(63),3)
         CALL ASDPMD(ITEM(66),IBUF(66),1)
         CALL ALTER(ITEM(67),IBUF(67),3)
         CALL ASDPMD(ITEM(71),IBUF(71),24)
         CALL ALTER(ITEM(95),IBUF(95),6)
         CALL ASDPMD(ITEM(101),IBUF(101),4)
         CALL ALTER(ITEM(106),IBUF(106),45)
         CALL ASDPMD(ITEM(151),IBUF(151),1)
         CALL ALTER(ITEM(152),IBUF(152),24)
         DO 200 I=1,25
            IN=176+(I-1)*5
            CALL ASDPMD(ITEM(IN),IBUF(IN),4)
            CALL ALTER(ITEM(IN+4),IBUF(IN+4),1)
 200     CONTINUE
         IF(ITEM(301).LE.0)
     X        ITEM(301)=ITEM(301)+65536
         IBUF(301)=ITEM(301)
         CALL ALTER(ITEM(302),IBUF(302),4)
         DO 40 I=1,15
            IN=306+(I-1)*6
            CALL ASDPMD(ITEM(IN),IBUF(IN),3)
            CALL ALTER(ITEM(IN+3),IBUF(IN+3),3)
 40      CONTINUE
         CALL ALTER(ITEM(400),IBUF(400),26)
         IBUF(451)=0
         IBUF(452)=0
         IBUF(453)=0
      ELSE IF (MBYTE.EQ.1 .AND. FBYTE.EQ.0) THEN
C
C     BIG ENDIAN->LITTLE ENDIAN (E.G., SUN->DEC)
C
         CALL SWAPCHAR(ITEM(1),IBUF(1),20)
         CALL ALTER(ITEM(21),IBUF(21),22)
         CALL SWAPCHAR(ITEM(43),IBUF(43),16)
         CALL ALTER(ITEM(60),IBUF(60),2)
         CALL SWAPCHAR(ITEM(62),IBUF(62),1)
         CALL ALTER(ITEM(63),IBUF(63),3)
         CALL SWAPCHAR(ITEM(66),IBUF(66),1)
         CALL ALTER(ITEM(67),IBUF(67),3)
         CALL SWAPCHAR(ITEM(71),IBUF(71),24)
         CALL ALTER(ITEM(95),IBUF(95),6)
         CALL SWAPCHAR(ITEM(101),IBUF(101),4)
         CALL ALTER(ITEM(106),IBUF(106),45)
         CALL SWAPCHAR(ITEM(151),IBUF(151),1)
         CALL ALTER(ITEM(152),IBUF(152),24)
         DO 20 I=1,25
            IN=176+(I-1)*5
            CALL SWAPCHAR(ITEM(IN),IBUF(IN),4)
            CALL ALTER(ITEM(IN+4),IBUF(IN+4),1)
 20      CONTINUE
         IF(ITEM(301).LE.0)
     X        ITEM(301)=ITEM(301)+65536
         IBUF(301)=ITEM(301)
         CALL ALTER(ITEM(302),IBUF(302),4)
         DO 400 I=1,15
            IN=306+(I-1)*6
            CALL SWAPCHAR(ITEM(IN),IBUF(IN),3)
            CALL ALTER(ITEM(IN+3),IBUF(IN+3),3)
 400     CONTINUE
         CALL ALTER(ITEM(400),IBUF(400),26)
         IBUF(451)=0
         IBUF(452)=0
         IBUF(453)=0
      ELSE IF (MBYTE.EQ.1 .AND. FBYTE.EQ.1) THEN
C
C     LITTLE ENDIAN -> LITTLE ENDIAN (E.G., DEC->DEC)
         DO 500 I=1,510
            IBUF(I)=ITEM(I)
 500     CONTINUE
         CALL ALTER(ITEM(21),IBUF(21),22)
         CALL ALTER(ITEM(60),IBUF(60),2)
         CALL ALTER(ITEM(63),IBUF(63),3)
         CALL ALTER(ITEM(67),IBUF(67),3)
         CALL ALTER(ITEM(95),IBUF(95),6)
         CALL ALTER(ITEM(106),IBUF(106),45)
         CALL ALTER(ITEM(152),IBUF(152),24)
         DO 220 I=1,25
            IN=176+(I-1)*5
            CALL ALTER(ITEM(IN+4),IBUF(IN+4),1)
 220     CONTINUE
         IF(ITEM(301).LE.0)
     X        ITEM(301)=ITEM(301)+65536
         IBUF(301)=ITEM(301)
         CALL ALTER(ITEM(302),IBUF(302),4)
         DO 44 I=1,15
            IN=306+(I-1)*6
            CALL ALTER(ITEM(IN+3),IBUF(IN+3),3)
 44      CONTINUE
         CALL ALTER(ITEM(400),IBUF(400),26)
         IBUF(451)=0
         IBUF(452)=0
         IBUF(453)=0

      ELSE IF (MBYTE.EQ.0 .AND. FBYTE.EQ.1) THEN
C
C     LITTLE ENDIAN -> BIG ENDIAN (DEC->SUN)
C
         CALL SWAPCHAR(ITEM(1),ITEM(1),20)
         CALL ASDPMD(ITEM(1),IBUF(1),20)
         CALL ALTER(ITEM(21),IBUF(21),22)
         CALL SWAPCHAR(ITEM(43),ITEM(43),16)
         CALL ASDPMD(ITEM(43),IBUF(43),16)
         CALL ALTER(ITEM(60),IBUF(60),2)
         CALL SWAPCHAR(ITEM(62),ITEM(62),1)
         CALL ASDPMD(ITEM(62),IBUF(62),1)
         CALL ALTER(ITEM(63),IBUF(63),3)
         CALL SWAPCHAR(ITEM(66),ITEM(66),1)
         CALL ASDPMD(ITEM(66),IBUF(66),1)
         CALL ALTER(ITEM(67),IBUF(67),3)
         CALL SWAPCHAR(ITEM(71),ITEM(71),24)
         CALL ASDPMD(ITEM(71),IBUF(71),24)
         CALL ALTER(ITEM(95),IBUF(95),6)
         CALL SWAPCHAR(ITEM(101),ITEM(101),4)
         CALL ASDPMD(ITEM(101),IBUF(101),4)
         CALL ALTER(ITEM(106),IBUF(106),45)
         CALL SWAPCHAR(ITEM(151),ITEM(151),1)
         CALL ASDPMD(ITEM(151),IBUF(151),1)
         CALL ALTER(ITEM(152),IBUF(152),24)
         DO 57 I=1,25
            IN=176+(I-1)*5
            CALL SWAPCHAR(ITEM(IN),ITEM(IN),4)
            CALL ASDPMD(ITEM(IN),IBUF(IN),4)
            CALL ALTER(ITEM(IN+4),IBUF(IN+4),1)
 57      CONTINUE
         IF(ITEM(301).LE.0)
     X        ITEM(301)=ITEM(301)+65536
         IBUF(301)=ITEM(301)
         CALL ALTER(ITEM(302),IBUF(302),4)
         DO 47 I=1,15
            IN=306+(I-1)*6
            CALL SWAPCHAR(ITEM(IN),ITEM(IN),3)
            CALL ASDPMD(ITEM(IN),IBUF(IN),3)
            CALL ALTER(ITEM(IN+3),IBUF(IN+3),3)
 47      CONTINUE
         CALL ALTER(ITEM(400),IBUF(400),26)
         IBUF(451)=0
         IBUF(452)=0
         IBUF(453)=0
      END IF
      
      RETURN
      END
