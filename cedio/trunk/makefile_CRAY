SHELL=/bin/sh
# simple makefile for cedio

# to use to make an executable file for reading cedric files:
# -replace driver_read.f and driver_read.o in the source (SRCSR)
#  and object (OBJSR) lists with your filenames
# -then type "make cedread"
# -the executable file will be called "cedread"
#
# to use to make an executable file for writing cedric files:
# -replace driver_write.f and driver_write.o in the source (SRCSW)
#  and object (OBJSR) lists with your filenames
# -then type "make cedwrite"
# -the executable file will be called "cedwrite"
# 
# to use to make an executable file for reading/writing cedric files:
# -replace driver_rdwrt.f and driver_rdwrt.o in the source (SRCSB)
#  and object (OBJSB) lists with your filenames
# -then type "make cedrdwrt"
# -the executable file will be called "cedrdwrt"
# 

SRCSR=	ALTER.f	   ASDPMD.f   BLHED.f  BLKDAT.f  CDATE.c  CEDERX.f  CEDLOG.f\
        CEDREAD.f  CEDUTIL.f  CIN.c    COUT.c    CRTHIN.f FETCHZ.f  IMHSUM.f\
        LOCFLDID.f PLANST.f   SHIRBL.f TAPMES.f  driver_read.f
OBJSR=	ALTER.o	   ASDPMD.o   BLHED.o  BLKDAT.o  CDATE.o  CEDERX.o  CEDLOG.o\
        CEDREAD.o  CEDUTIL.o  CIN.o    COUT.o    CRTHIN.o FETCHZ.o  IMHSUM.o\
        LOCFLDID.o PLANST.o   SHIRBL.o TAPMES.o  driver_read.o
COMMR=	cedread

SRCSW=	BLHED.f    BLKDAT.f   CDATE.c  CEDLOG.f  CEDUTIL.f CIN.c    COUT.c\
        HEADBLD.f  IMHSUM.f   SHIRBL.f WRITCED.f driver_write.f
OBJSW=	BLHED.o    BLKDAT.o   CDATE.o  CEDLOG.o  CEDUTIL.o CIN.o    COUT.o\
        HEADBLD.o  IMHSUM.o   SHIRBL.o WRITCED.o driver_write.o
COMMW=	cedwrite

SRCSB=	ALTER.f    ASDPMD.f   BLHED.f  BLKDAT.f  CDATE.c  CEDERX.f  CEDLOG.f\
	CEDREAD.f  CEDUTIL.f  CIN.c    COUT.c    CRTHIN.f FETCHZ.f  HEADBLD.f\
	IMHSUM.f   LOCFLDID.f PLANST.f SHIRBL.f  TAPMES.f WRITCED.f\
	driver_rdwrt.f
OBJSB=	ALTER.o    ASDPMD.o   BLHED.o  BLKDAT.o  CDATE.o  CEDERX.o  CEDLOG.o\
	CEDREAD.o  CEDUTIL.o  CIN.o    COUT.o    CRTHIN.o FETCHZ.o  HEADBLD.o\
	IMHSUM.o   LOCFLDID.o PLANST.o SHIRBL.o  TAPMES.o WRITCED.o\
	driver_rdwrt.o
COMMB=	cedrdwrt

#
# Tunable parameters
#
# CFT		Name of the fortran compiler to use
# FFLAGS	Flags to the fortran compiler
# LDR		Program to load the objects into an executable
# LDFLAGS	For definition of lmset and csu on the Cray 2
#		Flags to the loader
# LIBS		A list of libraries to use on the Cray 2
#		Note that the C library (-lc) must ALWAYS be the last library
#		in the load step on both the XMP and the Cray 2
# COMMAND	Name of the executable
#

#CFT=	cft77 
#FFLAGS=	-Wf"-a static -i 64 -A fast "
CF=	f90
FFLAGS=	-O1 -e v -O nofastint
LDR=	segldr
LDFLAGS= -f indef -L/lib,/usr/lib,/usr/local/lib -lncaro,ncarg,ncarg_gks,ncarg_loc,ncarg_c,X11,netcdf
LIBS=	
COMMAND=a.out

#$(OBJSR):	$(SRCSR)
#$(OBJSW):	$(SRCSW)
#$(OBJSB):	$(SRCSB)

$(COMMR):	$(OBJSR)
	$(LDR) $(LDFLAGS) -o $(COMMR) $(OBJSR) $(LIBS)

$(COMMW):	$(OBJSW)
	$(LDR) $(LDFLAGS) -o $(COMMW) $(OBJSW) $(LIBS)

$(COMMB):	$(OBJSB)
	$(LDR) $(LDFLAGS) -o $(COMMB) $(OBJSB) $(LIBS)

