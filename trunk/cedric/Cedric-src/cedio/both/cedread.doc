
	The files in this tarfile will enable you to read
	CEDRIC format files created on workstations or on the
	Cray when they have been created with the PURE option of
	the WRITVOL command. They are meant to be callable from a
	FORTRAN program and will return to your program the contents
	of the 510 word header and the data values for all the fields in
	the dataset. 

	In order to read CEDRIC files, it's important to understand
	a little bit about their structure. Each CEDRIC file can contain
        up to 10 CEDRIC datasets (volumes). Each CEDRIC dataset is
	a three dimensional set of fields mapped to an ordered
	(x,y,z) coordinate system. Volumes are associated with a fixed
	time of day and may contain a field with temporal information
	corresponding to each individual location. The data values are
	preceded by a 510 word header containing information describing
	the characteristics of the dataset. After the header, the
	data is ordered by z levels. Thus, all the data for level one
	would be first, followed by all the data for level two. 
	Within each level is the data for each field. Thus, the data
	for level one might contain the data for reflectivity followed
	by the data for radial velocity. Each level has the same number
        of fields. A high-level pictorial representation of the structure 
        of a CEDRIC volume (dataset) is below. See the PostScript file
        appendix.ps included in this tar file for more information.

	BEGIN CEDRIC VOLUME
	  510 WORD HEADER
 	  LEVEL ONE
	   FIELD ONE
	   FIELD TWO
	   .
	   .
	   .
	   FIELD N
	  LEVEL TWO
	   FIELD ONE
	   FIELD TWO
	   .
	   .
	   .
	   FIELD N
	  .
	  .
	  .
	  LEVEL M
	END CEDRIC VOLUME

	The actual data values are stored as 16 bit integers with
        values ranging from -32768 to 32767. Floating point values must
        be scaled to fit into this range. Typically, -32768 is used as the 
        "bad" value for missing data values.

	To interface your program with the CEDRIC input routines,
	here is what you must do.

	1) Examine the files called "CEDREAD.f" and "driver_read.f". 
	   They are the only files you should have to modify or concern yourself
	   with. "driver_read.f" contains a sample program to drive the other
           routines. You'll have to replace it with your own. "CEDREAD.f" 
           will look for and open a file called "fort.10". After opening 
	   the file, it will read the header and print out a summary 
	   of the contents of the CEDRIC file. Then, it will proceed 
	   to read all the z levels of all the fields from the file. 
           This reading is accomplished in the two do loops
	   in CEDREAD. Each time the innermost loop is executed,
	   a read from the file is completed and the data values for
	   a particular level and field will be returned as floating
	   point values in the array RBUF. For example, after the first
	   read is performed, RBUF will contain the data values for 
	   all x-y points in the first level, first field. The second
	   iteration of the inner most loop will return data for the first
	   level, second field, etc., until all fields were read at
	   which point the data for the second level would be accessed.

	2) You must supply a subroutine called "PLACEPLANE" to handle
	   the slices of data as they are read in. A sample PLACEPLANE
	   is included in "driver_read.f" You should replace it with your own. 
           In PLACEPLANE you can store the data in a larger array so that at the 
	   end of the reading you have all the data in one array and can
	   manipulate it as you want. You might also choose to process 
	   the data on a plane by plane basis or even discard some fields and
	   keep only the ones you want. You will have to decide how
	   you want to deal with the data when you write PLACEPLANE.
	   The data will be in unscaled (i.e., meteorological) units.

  	3) You must call CEDREAD from your FORTRAN program to
	   initiate the reading of the CEDRIC file. You must pass it
	   an integer array with 510 elements. The 510 word header will
	   be returned to your calling routine. A description of this
           header is contained in the Appendix section of the CEDRIC and
           SPRINT documentation. 
	
        4) If you have multiple CEDRIC volumes in the same file that
           you want to read, just call CEDREAD repeatedly. Each time
           it is called, the next volume will be read. 


	5) To build an executable file, follow these steps.
	
	        a) Move the appropriate .h file to a file called
                   "cedric.h".

	        b) If on an HP machine move CEDLOG_hp.f to CEDLOG.f
                   Otherwise, move CEDLOG_others.f CEDLOG.f
                   These files contain bitwise operations which are 
                   different on HP platforms than on the other platforms 
                   CEDRIC is supported on.

		c) Edit the makefile to and replace the driver_read.f
                   and driver_read.o entries with the names of your
                   source and object file(s) needed to build the executable 
                   file. If you need to go to a new line in the makefile,
                   type a backslash and hit a return immediately after
                   the backslash. There cannot be a space after it.

	        d) type "make cedread"

	   The resulting executable file will be called "cedread". 


	Bill Anderson

	