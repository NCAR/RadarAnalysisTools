SHELL=/bin/sh
#
# This makefile was produced by /usr/bin//fmgen at 01:49:37 PM on 03/24/94
# If it is invoked by the command line
#	make -f makefile
# it will compile the fortran modules indicated by SRCS into the object
# modules indicated by OBJS and produce an executable named a.out.
#
# If it is invoked by the command line
#	make -f makefile a.out.prof
# it will compile the fortran modules indicated by SRCS into the object
# modules indicated by OBJS and produce an executable which profiles
# named a.out.prof.
#
# To remove all the objects but leave the executables use the command line
#	make -f makefile clean
#
# To remove everything but the source files use the command line
#	make -f makefile clobber
#
# To remove the source files created by /usr/bin//fmgen and this makefile
# use the command line
#	make -f makefile void
#
# The parameters SRCS and OBJS should not need to be changed.  If, however,
# you need to add a new module add the name of the source module to the
# SRCS parameter and add the name of the resulting object file to the OBJS
# parameter.  The new modules are not limited to fortran, but may be C, YACC,
# LEX, or CAL.  An explicit rule will need to be added for PASCAL modules.
#

include makefiles.list

# Tunable parameters
#
# CFT		Name of the fortran compiling system to use
# FFLAGS	Flags to the fortan compiler
# LDR		Name of the loader
# LDFLAGS	Flags to the loader
# LIBS		List of libraries
# CMD		Name of the executable
# PROFLIB	Library needed for profiling
#
CFT=		f77
#LDR=		ncargf77 - note ncargf77 --> shell variable "Word too long"
LDR=		f77
#NCARG_LIBS=	-L /usr/local/ncarg/lib -lncarg -lncarg_gks -lncarg_c -lX11
LIBS=		-L /usr/local/lib -lncarg -lncarg_gks -lncarg_c -lX11
COMMAND=	ppi_solaris.e

# To perform the default compilation and loading, use second line(s)
FFLAGS=		-temp=/mmmtmp/ljmill
CFLAGS=		-temp=/mmmtmp/ljmill
LDFLAGS=	-temp=/mmmtmp/ljmill

# Lines from here on down should not need to be changed.  They are the
# actual rules which make uses to build a.out.
#
$(COMMAND):	$(OBJS)
	$(LDR) $(LDFLAGS) -o $(COMMAND) $(OBJS) $(LIBS)

include includes.list

clean:
	rm -f *.o *.l

clobber:	clean
	rm -f $(COMMAND)

void:	clobber
	rm -f $(SRCS) makefile
