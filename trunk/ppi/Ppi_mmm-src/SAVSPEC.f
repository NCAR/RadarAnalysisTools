c
c----------------------------------------------------------------------X
c
      SUBROUTINE SAVSPEC(INDAT,NAMFLD,IFLD,NFLDS,NSP,IPNAM,PRMN,PRMX,
     X                   PAMN,PAMX,IPKP,JPKP,PTYP,SPAVG,FRQMN,FRQMX,
     X                   PEXMN,PEXMX,FRQAX,AMPAX,DTREND,PTAVG,FLDMN,
     X                   FLDMX,FLDRF)
C
C  CONTINUE READING PLTSPEC STACK FOR SPECTRA (FIELDS)
C     TO BE COMPUTED AND PLOTTED
C
C     NSP       - NUMBER OF SPECTRA TO BE COMPUTED AND PLOTTED
C     IPNAM     - NAMES   "  FIELDS  "  "    "      "     "
C     PRMN,PRMX - MINIMUM AND MAXIMUM RANGE  (KM) FOR COMPUTING SPECTRA
C     PAMN,PAMX -    "     "     "    ANGLE (DEG)  "      "        "
C     IPKP,JPKP - SKIPPING FACTORS FOR RANGE AND ANGLE
C     PTYP      - SPECTRAL TYPE - ALONG RANGE ('RNGE') OR ALONG ANGLE ('ANGL')
C     SPAVG     - NUMBER OF SPECTRA TO AVERAGE (.LT. 0.0, AVG WITHOUT PLOTTING
C                 INDIVIDUAL SPECTRA, ONLY PLOT THE AVERAGED SPECTRA)
C     FRQMN,MX  - MINIMUM AND MAXIMUM FREQUENCY (CYCLES PER KM - ABSCISSA X)
C     PEXMN,MX  - MINIMUM AND MAXIMUM EXPONENT FOR VERTICAL AXIS (ORDINATE Y)
C     FRQAX     - TYPE OF FREQUENCTY AXIS ('LOGF' OR 'LINF')
C     AMPAX     -   "   " AMPLITUDE    "  ('LOGA' OR 'LINA')
C     DTREND    -   "   " DETRENDING ('NONE','MEAN','LINR','QUAD')
C     PTAVG     - NUMBER OF SPECTRAL POINTS TO AVERAGE
C     FLDMN,MX  - MINIMUM AND MAXIMUM VALUES FOR PLOTS OF FIELD
C     FLDRF     - DASHED LINE FOR REFERENCE IN FIELD PLOTS
C
      INCLUDE 'dim.inc'

      PARAMETER (NPMX=25)
      CHARACTER*8 INDAT(10),JNDAT(10)
      CHARACTER*4 PTYP,FRQAX(NPMX),AMPAX(NPMX),DTREND(NPMX)
      CHARACTER*8 NAMFLD(MXF),IPNAM(NPMX)
      CHARACTER*4 NAMOUT
      DATA NAMOUT/'    '/
      DIMENSION IFLD(MXF)
      DIMENSION FRQMN(NPMX),FRQMX(NPMX)
      DIMENSION PEXMN(NPMX),PEXMX(NPMX),PTAVG(NPMX)
      DIMENSION FLDMN(NPMX),FLDMX(NPMX),FLDRF(NPMX)

      NSP=0
      WRITE(6,11)(INDAT(I),I=2,10)
   11 FORMAT(1X,'PSPEC: ',9A8)
      READ(INDAT,13)PRMN,PRMX,PISKIP,PAMN,PAMX,PJSKIP,PTYP,SPAVG
   13 FORMAT(/F8.0/F8.0/F8.0/F8.0/F8.0/F8.0/A4,4X/F8.0)
      IF(PISKIP.LE.0.0)THEN
         IPKP=1
      ELSE
         IPKP=PISKIP
      END IF
      IF(PJSKIP.LE.0.0)THEN
         JPKP=1
      ELSE
         JPKP=PJSKIP
      END IF
      IF(PTYP.NE.'RNGE'.AND.PTYP.NE.'ANGL')PTYP='RNGE'

C     READ FIELD NAME, MIN/MAX FREQ VALUE, MIN/MAX EXPONENT, FREQ AXIS
C     TYPE, DETRENDING TYPE, AND NUMBER OF SPECTRAL POINTS TO AVERAGE
C
   20 READ(5,21)(JNDAT(I),I=1,10)
   21 FORMAT(10A8)
c      WRITE(6,22)(JNDAT(I),I=1,10)
c   22 FORMAT('Kardin=',10A8)
      IF(JNDAT(1)(1:1).EQ.'*')GO TO 20
      IF(JNDAT(1).EQ.'END     ')RETURN
      IF(JNDAT(1).NE.'        ')THEN
         WRITE(6,23)
   23    FORMAT(1X,'*** SAVSPEC: NO END LINE ENCOUNTERED ***')
         STOP
      END IF
      IF(JNDAT(2).NE.'        ')THEN
         NSP=NSP+1
         IF(NSP.GT.NPMX)THEN
            WRITE(6,25)NPMX
   25       FORMAT(1X,'*** SAVSPEC: NO. PLOTS EXCEEDS',I3,
     +                ' - STOP ***')
            STOP
         END IF
         READ(JNDAT,27)IPNAM(NSP),FRQMN(NSP),FRQMX(NSP),PEXMN(NSP),
     +                 PEXMX(NSP),FRQAX(NSP),AMPAX(NSP),DTREND(NSP),
     +                 PTAVG(NSP)
   27    FORMAT(/A8/F8.0/F8.0/F8.0/F8.0/A4,4X,/A4,4X/A4,4X/F8.0)
C
         IF(FRQAX(NSP).NE.'LOGF' .AND.
     +      FRQAX(NSP).NE.'LINF')THEN
            FRQAX(NSP)='LINF'
         END IF
         IF(AMPAX(NSP).NE.'LOGA' .AND.
     +      AMPAX(NSP).NE.'LINA')THEN
            AMPAX(NSP)='LINA'
         END IF
         IF(DTREND(NSP).NE.'NONE' .AND.
     +      DTREND(NSP).NE.'MEAN' .AND.
     +      DTREND(NSP).NE.'LINR' .AND.
     +      DTREND(NSP).NE.'QUAD')THEN
            DTREND(NSP)='MEAN'
         END IF
         IF(FRQAX(NSP).EQ.'LOGF')THEN
            IF(FRQMN(NSP).LT.0.001)FRQMN(NSP)=0.001
            IF(FRQMX(NSP).LT.10.0*FRQMN(NSP))FRQMX(NSP)=10.0*FRQMN(NSP)
            IF(FRQMX(NSP).GT.10.0)FRQMX(NSP)=10.0
         END IF
         IF(AMPAX(NSP).EQ.'LOGA')THEN
            IF(PEXMN(NSP) .LT. -5.0)PEXMN(NSP)=-5.0
            IF(PEXMX(NSP) .GT.  2.0)PEXMX(NSP)= 2.0
         END IF

         CALL FIELD(IPNAM(NSP),NAMFLD,NFLDS,NAMOUT)
         IFL=IFIND(IPNAM(NSP),NAMFLD,NFLDS)
         WRITE(6,29)NSP,NAMFLD(IFL),IFL,IFLD(IFL),FRQMN(NSP),
     +              FRQMX(NSP),PEXMN(NSP),PEXMX(NSP),FRQAX(NSP),
     +              AMPAX(NSP),DTREND(NSP),PTAVG(NSP)
   29    FORMAT(8X,'NSP= ',I4,4X,A8,2I4,4F8.2,4X,A4,4X,A4,4X,A4,F8.0)
         FLDMN(NSP)=0.0
         FLDMX(NSP)=0.0
         FLDRF(NSP)=0.0
         IF(IFLD(IFL).LE.-1)THEN
            WRITE(6,31)
   31       FORMAT(1X,'*** THIS TYPE OF FIELD NOT ALLOWED ***')
            NSP=NSP-1
         END IF
      ELSE
         READ(JNDAT,33)FLDMN(NSP),FLDMX(NSP),FLDRF(NSP)
   33    FORMAT(//F8.0/F8.0/F8.0)
         WRITE(6,35)FLDMN(NSP),FLDMX(NSP),FLDRF(NSP)
   35    FORMAT(37X,3F8.2)
      END IF
      GO TO 20
      END
